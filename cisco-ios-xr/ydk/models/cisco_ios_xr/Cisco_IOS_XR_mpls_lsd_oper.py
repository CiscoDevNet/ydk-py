""" Cisco_IOS_XR_mpls_lsd_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR mpls\-lsd package operational data.

This module contains definitions
for the following management objects\:
  mpls\-lsd\-nodes\: Location MPLS LSD operational data
  mpls\-lsd\: mpls lsd

Copyright (c) 2013\-2016 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class MgmtLsdAppEnum(Enum):
    """
    MgmtLsdAppEnum

    Mgmt lsd app

    .. data:: mgmt_lsd_app_type_none = 0

    	None

    .. data:: mgmt_lsd_app_type_int = 1

    	LSD

    .. data:: mgmt_lsd_app_type_test = 2

    	Test

    .. data:: mgmt_lsd_app_type_static = 3

    	Static

    .. data:: mgmt_lsd_app_type_ldp = 4

    	LDP

    .. data:: mgmt_lsd_app_type_te = 5

    	TE Control

    .. data:: mgmt_lsd_app_type_app_controller = 6

    	App Controller

    .. data:: mgmt_lsd_app_type_bgp_ipv4 = 7

    	BGP v4

    .. data:: mgmt_lsd_app_type_bgp_vpn_ipv4 = 8

    	BGP VPNv4

    .. data:: mgmt_lsd_app_type_l2vpn = 9

    	L2VPN

    .. data:: mgmt_lsd_app_type_bgp_spkr = 10

    	BGP Spkr

    .. data:: mgmt_lsd_app_type_bfd = 11

    	BFD

    .. data:: mgmt_lsd_app_type_pim = 12

    	PIM

    .. data:: mgmt_lsd_app_type_v2_lsd = 13

    	V2 LSD

    .. data:: mgmt_lsd_app_type_pim6 = 14

    	PIM6

    .. data:: mgmt_lsd_app_type_isis = 15

    	ISIS

    .. data:: mgmt_lsd_app_type_ospf = 16

    	OSPF

    .. data:: mgmt_lsd_app_type_cgn = 17

    	CGN

    .. data:: mgmt_lsd_app_type_dmtc = 18

    	Traffic Collector

    .. data:: mgmt_lsd_app_type_any = 19

    	Any

    """

    mgmt_lsd_app_type_none = 0

    mgmt_lsd_app_type_int = 1

    mgmt_lsd_app_type_test = 2

    mgmt_lsd_app_type_static = 3

    mgmt_lsd_app_type_ldp = 4

    mgmt_lsd_app_type_te = 5

    mgmt_lsd_app_type_app_controller = 6

    mgmt_lsd_app_type_bgp_ipv4 = 7

    mgmt_lsd_app_type_bgp_vpn_ipv4 = 8

    mgmt_lsd_app_type_l2vpn = 9

    mgmt_lsd_app_type_bgp_spkr = 10

    mgmt_lsd_app_type_bfd = 11

    mgmt_lsd_app_type_pim = 12

    mgmt_lsd_app_type_v2_lsd = 13

    mgmt_lsd_app_type_pim6 = 14

    mgmt_lsd_app_type_isis = 15

    mgmt_lsd_app_type_ospf = 16

    mgmt_lsd_app_type_cgn = 17

    mgmt_lsd_app_type_dmtc = 18

    mgmt_lsd_app_type_any = 19


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdAppEnum']


class MgmtLsdAppRsrcStateEnum(Enum):
    """
    MgmtLsdAppRsrcStateEnum

    Mgmt lsd app rsrc state

    .. data:: mgmt_lsd_app_rsrc_state_active = 0

    	Active

    .. data:: mgmt_lsd_app_rsrc_state_pnd = 1

    	Pending

    .. data:: mgmt_lsd_app_rsrc_state_pnd_svr = 2

    	Pending Server

    """

    mgmt_lsd_app_rsrc_state_active = 0

    mgmt_lsd_app_rsrc_state_pnd = 1

    mgmt_lsd_app_rsrc_state_pnd_svr = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdAppRsrcStateEnum']


class MgmtLsdAppStateEnum(Enum):
    """
    MgmtLsdAppStateEnum

    Mgmt lsd app state

    .. data:: mgmt_lsd_app_state_active = 0

    	Active

    .. data:: mgmt_lsd_app_state_zombie = 1

    	Zombie

    .. data:: mgmt_lsd_app_state_recover = 2

    	Recover

    """

    mgmt_lsd_app_state_active = 0

    mgmt_lsd_app_state_zombie = 1

    mgmt_lsd_app_state_recover = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdAppStateEnum']


class MgmtLsdClientEnum(Enum):
    """
    MgmtLsdClientEnum

    Mgmt lsd client

    .. data:: mgmt_lsd_client_type_app = 0

    	Application

    .. data:: mgmt_lsd_client_type_ba = 1

    	BCDL Agent

    """

    mgmt_lsd_client_type_app = 0

    mgmt_lsd_client_type_ba = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdClientEnum']


class MgmtLsdFpiEnum(Enum):
    """
    MgmtLsdFpiEnum

    Mgmt lsd fpi

    .. data:: mgmt_lsd_fpi_type_label = 0

    	Label

    .. data:: mgmt_lsd_fpi_type_te = 1

    	TE

    .. data:: mgmt_lsd_fpi_type_ipv4 = 2

    	IPv4

    .. data:: mgmt_lsd_fpi_type_ipv6 = 3

    	IPv6

    .. data:: mgmt_lsd_fpi_type_pw_list = 4

    	PW List

    .. data:: mgmt_lsd_fpi_type_te_v2 = 5

    	TE v2

    .. data:: mgmt_lsd_fpi_type_dmtc_ext_intf = 6

    	DMTC External Interface

    """

    mgmt_lsd_fpi_type_label = 0

    mgmt_lsd_fpi_type_te = 1

    mgmt_lsd_fpi_type_ipv4 = 2

    mgmt_lsd_fpi_type_ipv6 = 3

    mgmt_lsd_fpi_type_pw_list = 4

    mgmt_lsd_fpi_type_te_v2 = 5

    mgmt_lsd_fpi_type_dmtc_ext_intf = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdFpiEnum']


class MgmtLsdFrrStateEnum(Enum):
    """
    MgmtLsdFrrStateEnum

    Mgmt lsd frr state

    .. data:: mgmt_lsd_frr_state_partial = 0

    	Partial

    .. data:: mgmt_lsd_frr_state_active = 1

    	Active

    .. data:: mgmt_lsd_frr_state_ready = 2

    	Ready

    .. data:: mgmt_lsd_frr_state_complete = 3

    	Complete

    .. data:: mgmt_lsd_frr_state_any = 4

    	Any

    .. data:: mgmt_lsd_frr_state_igp = 5

    	IGP

    """

    mgmt_lsd_frr_state_partial = 0

    mgmt_lsd_frr_state_active = 1

    mgmt_lsd_frr_state_ready = 2

    mgmt_lsd_frr_state_complete = 3

    mgmt_lsd_frr_state_any = 4

    mgmt_lsd_frr_state_igp = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdFrrStateEnum']


class MgmtLsdIntfStateEnum(Enum):
    """
    MgmtLsdIntfStateEnum

    Mgmt lsd intf state

    .. data:: mgmt_lsd_intf_state_unknown = 0

    	unknown

    .. data:: mgmt_lsd_intf_state_up = 1

    	up

    .. data:: mgmt_lsd_intf_state_down = 2

    	down

    """

    mgmt_lsd_intf_state_unknown = 0

    mgmt_lsd_intf_state_up = 1

    mgmt_lsd_intf_state_down = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdIntfStateEnum']


class MgmtLsdLblCtxEnum(Enum):
    """
    MgmtLsdLblCtxEnum

    Mgmt lsd lbl ctx

    .. data:: mgmt_lsd_lbl_ctx_type_none = 0

    	None

    .. data:: mgmt_lsd_lbl_ctx_type_ipv4 = 1

    	IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_ipv6 = 2

    	IPv6

    .. data:: mgmt_lsd_lbl_ctx_type_tev4 = 3

    	TE IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_ipv4 = 4

    	L3VPN IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_ipv6 = 5

    	L3VPN IPv6

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_vrf = 6

    	L3VPN Per-VRF

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_cev4 = 7

    	L3VPN IPv4 Per-CE

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_cev6 = 8

    	L3VPN IPv6 Per-CE

    .. data:: mgmt_lsd_lbl_ctx_type_pw = 9

    	PW

    .. data:: mgmt_lsd_lbl_ctx_type_lbl_blk = 10

    	LBL BLK

    .. data:: mgmt_lsd_lbl_ctx_type_ip_sub = 11

    	IP SUB

    .. data:: mgmt_lsd_lbl_ctx_type_tev4_p2mp = 12

    	TE IPv4 P2MP

    .. data:: mgmt_lsd_lbl_ctx_type_mldpv4 = 13

    	MLDP IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_pwhe = 14

    	PW HE

    .. data:: mgmt_lsd_lbl_ctx_type_tp = 15

    	MPLS TP

    .. data:: mgmt_lsd_lbl_ctx_type_gre = 16

    	GRE

    .. data:: mgmt_lsd_lbl_ctx_type_evpn = 17

    	EVPN

    .. data:: mgmt_lsd_lbl_ctx_type_blb_ipv4 = 18

    	BLB IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_blb_ipv6 = 19

    	BLB IPv6

    .. data:: mgmt_lsd_lbl_ctx_type_pim_i_pmsi = 20

    	PIM I-PMSI

    .. data:: mgmt_lsd_lbl_ctx_type_pim_s_pmsi = 21

    	PIM S-PMSI

    .. data:: mgmt_lsd_lbl_ctx_type_l3vpn_nh_set = 22

    	L3VPN NH SET

    .. data:: mgmt_lsd_lbl_ctx_type_sr_pfx_seg = 23

    	SR Prefix Segment

    .. data:: mgmt_lsd_lbl_ctx_type_sr_adj_seg_ipv4 = 24

    	SR Adj Segment IPv4

    .. data:: mgmt_lsd_lbl_ctx_type_sr_adj_seg_ipv6 = 25

    	SR Adj Segment IPv6

    .. data:: mgmt_lsd_lbl_ctx_type_lbl_blk_srgb = 26

    	LBL BLK SRGB

    .. data:: mgmt_lsd_lbl_ctx_type_te_binding = 27

    	TE Binding

    .. data:: mgmt_lsd_lbl_ctx_type_gre_ipv6 = 28

    	GRE IPV6

    .. data:: mgmt_lsd_lbl_ctx_type_any = 29

    	Any

    """

    mgmt_lsd_lbl_ctx_type_none = 0

    mgmt_lsd_lbl_ctx_type_ipv4 = 1

    mgmt_lsd_lbl_ctx_type_ipv6 = 2

    mgmt_lsd_lbl_ctx_type_tev4 = 3

    mgmt_lsd_lbl_ctx_type_l3vpn_ipv4 = 4

    mgmt_lsd_lbl_ctx_type_l3vpn_ipv6 = 5

    mgmt_lsd_lbl_ctx_type_l3vpn_vrf = 6

    mgmt_lsd_lbl_ctx_type_l3vpn_cev4 = 7

    mgmt_lsd_lbl_ctx_type_l3vpn_cev6 = 8

    mgmt_lsd_lbl_ctx_type_pw = 9

    mgmt_lsd_lbl_ctx_type_lbl_blk = 10

    mgmt_lsd_lbl_ctx_type_ip_sub = 11

    mgmt_lsd_lbl_ctx_type_tev4_p2mp = 12

    mgmt_lsd_lbl_ctx_type_mldpv4 = 13

    mgmt_lsd_lbl_ctx_type_pwhe = 14

    mgmt_lsd_lbl_ctx_type_tp = 15

    mgmt_lsd_lbl_ctx_type_gre = 16

    mgmt_lsd_lbl_ctx_type_evpn = 17

    mgmt_lsd_lbl_ctx_type_blb_ipv4 = 18

    mgmt_lsd_lbl_ctx_type_blb_ipv6 = 19

    mgmt_lsd_lbl_ctx_type_pim_i_pmsi = 20

    mgmt_lsd_lbl_ctx_type_pim_s_pmsi = 21

    mgmt_lsd_lbl_ctx_type_l3vpn_nh_set = 22

    mgmt_lsd_lbl_ctx_type_sr_pfx_seg = 23

    mgmt_lsd_lbl_ctx_type_sr_adj_seg_ipv4 = 24

    mgmt_lsd_lbl_ctx_type_sr_adj_seg_ipv6 = 25

    mgmt_lsd_lbl_ctx_type_lbl_blk_srgb = 26

    mgmt_lsd_lbl_ctx_type_te_binding = 27

    mgmt_lsd_lbl_ctx_type_gre_ipv6 = 28

    mgmt_lsd_lbl_ctx_type_any = 29


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdLblCtxEnum']


class MgmtLsdLspRoleEnum(Enum):
    """
    MgmtLsdLspRoleEnum

    Mgmt lsd lsp role

    .. data:: mgmt_lsd_lsp_role_head = 0

    	Head

    .. data:: mgmt_lsd_lsp_role_mid = 1

    	Midpoint

    """

    mgmt_lsd_lsp_role_head = 0

    mgmt_lsd_lsp_role_mid = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdLspRoleEnum']


class MgmtLsdMoiEnum(Enum):
    """
    MgmtLsdMoiEnum

    Mgmt lsd moi

    .. data:: mgmt_lsd_moi_type_pop_and_lkup_ipv4 = 0

    	Pop-and-lookup IPv4

    .. data:: mgmt_lsd_moi_type_ipv4 = 1

    	IPv4

    .. data:: mgmt_lsd_moi_type_ipv6 = 2

    	IPv6

    .. data:: mgmt_lsd_moi_type_tev4 = 3

    	TE IPv4

    .. data:: mgmt_lsd_moi_type_pw = 4

    	PW

    .. data:: mgmt_lsd_moi_type_pop_and_lkup_ipv6 = 5

    	Pop-and-lookup IPv6

    .. data:: mgmt_lsd_moi_type_ip_sub = 6

    	IP Subscriber

    .. data:: mgmt_lsd_moi_type_pwhe = 7

    	PW HE

    .. data:: mgmt_lsd_moi_type_pw_list = 8

    	PW List

    .. data:: mgmt_lsd_moi_type_ipv4_stack = 9

    	IPv4 Multi-Label

    .. data:: mgmt_lsd_moi_type_pop_and_lkup_tp = 10

    	Pop-and-lookup TP

    .. data:: mgmt_lsd_moi_type_ipv6_stack = 11

    	IPv6 Multi-Label

    .. data:: mgmt_lsd_moi_type_te_head = 12

    	TE Head

    .. data:: mgmt_lsd_moi_type_dmtc_ext_intf = 13

    	Demand Matrix Traffic-Collector

    """

    mgmt_lsd_moi_type_pop_and_lkup_ipv4 = 0

    mgmt_lsd_moi_type_ipv4 = 1

    mgmt_lsd_moi_type_ipv6 = 2

    mgmt_lsd_moi_type_tev4 = 3

    mgmt_lsd_moi_type_pw = 4

    mgmt_lsd_moi_type_pop_and_lkup_ipv6 = 5

    mgmt_lsd_moi_type_ip_sub = 6

    mgmt_lsd_moi_type_pwhe = 7

    mgmt_lsd_moi_type_pw_list = 8

    mgmt_lsd_moi_type_ipv4_stack = 9

    mgmt_lsd_moi_type_pop_and_lkup_tp = 10

    mgmt_lsd_moi_type_ipv6_stack = 11

    mgmt_lsd_moi_type_te_head = 12

    mgmt_lsd_moi_type_dmtc_ext_intf = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdMoiEnum']


class MgmtLsdRwIdEnum(Enum):
    """
    MgmtLsdRwIdEnum

    Mgmt lsd rw id

    .. data:: mgmt_lsd_rw_id_type_none = 0

    	None

    .. data:: mgmt_lsd_rw_id_type_lbl_ctx = 1

    	Label Context

    .. data:: mgmt_lsd_rw_id_type_loc_lbl = 2

    	Local Label

    """

    mgmt_lsd_rw_id_type_none = 0

    mgmt_lsd_rw_id_type_lbl_ctx = 1

    mgmt_lsd_rw_id_type_loc_lbl = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdRwIdEnum']


class MgmtLsdTeBindingEnum(Enum):
    """
    MgmtLsdTeBindingEnum

    Mgmt lsd te binding

    .. data:: mgmt_lsd_ident_p2p_tun_id = 0

    	mgmt lsd ident p2p tun id

    .. data:: mgmt_lsd_ident_p2p_grp_id = 1

    	mgmt lsd ident p2p grp id

    .. data:: mgmt_lsd_ident_p2mp_tun_id = 2

    	mgmt lsd ident p2mp tun id

    .. data:: mgmt_lsd_ident_p2mp_grp_id = 3

    	mgmt lsd ident p2mp grp id

    """

    mgmt_lsd_ident_p2p_tun_id = 0

    mgmt_lsd_ident_p2p_grp_id = 1

    mgmt_lsd_ident_p2mp_tun_id = 2

    mgmt_lsd_ident_p2mp_grp_id = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MgmtLsdTeBindingEnum']



class MplsLsdNodes(object):
    """
    Location MPLS LSD operational data
    
    .. attribute:: mpls_lsd_node
    
    	The MPLS LSD operational data for a particular node
    	**type**\: list of    :py:class:`MplsLsdNode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode>`
    
    

    """

    _prefix = 'mpls-lsd-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.mpls_lsd_node = YList()
        self.mpls_lsd_node.parent = self
        self.mpls_lsd_node.name = 'mpls_lsd_node'


    class MplsLsdNode(object):
        """
        The MPLS LSD operational data for a particular
        node
        
        .. attribute:: node_name  <key>
        
        	The identifier for the node
        	**type**\:  str
        
        	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
        
        .. attribute:: applications
        
        	Table of MPLS applications using LSD
        	**type**\:   :py:class:`Applications <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Applications>`
        
        .. attribute:: clients
        
        	Table of MPLS clients using LSD
        	**type**\:   :py:class:`Clients <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Clients>`
        
        .. attribute:: frr_database
        
        	FRR database
        	**type**\:   :py:class:`FrrDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase>`
        
        .. attribute:: interfaces
        
        	Table of MPLS interfaces
        	**type**\:   :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Interfaces>`
        
        .. attribute:: label_range
        
        	Label range
        	**type**\:   :py:class:`LabelRange <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelRange>`
        
        .. attribute:: label_summary
        
        	Dynamic label range
        	**type**\:   :py:class:`LabelSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelSummary>`
        
        .. attribute:: label_summary_vrfs
        
        	Dynamic label range summary by VRF
        	**type**\:   :py:class:`LabelSummaryVrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs>`
        
        .. attribute:: labels
        
        	Table of labels
        	**type**\:   :py:class:`Labels <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels>`
        
        .. attribute:: rewrite
        
        	Table of rewrites
        	**type**\:   :py:class:`Rewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite>`
        
        .. attribute:: rewrite_summary
        
        	Rewrite Summary 
        	**type**\:   :py:class:`RewriteSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummary>`
        
        .. attribute:: rewrite_summary_vrfs
        
        	Rewrite Summary by VRF
        	**type**\:   :py:class:`RewriteSummaryVrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node_name = None
            self.applications = MplsLsdNodes.MplsLsdNode.Applications()
            self.applications.parent = self
            self.clients = MplsLsdNodes.MplsLsdNode.Clients()
            self.clients.parent = self
            self.frr_database = MplsLsdNodes.MplsLsdNode.FrrDatabase()
            self.frr_database.parent = self
            self.interfaces = MplsLsdNodes.MplsLsdNode.Interfaces()
            self.interfaces.parent = self
            self.label_range = MplsLsdNodes.MplsLsdNode.LabelRange()
            self.label_range.parent = self
            self.label_summary = MplsLsdNodes.MplsLsdNode.LabelSummary()
            self.label_summary.parent = self
            self.label_summary_vrfs = MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs()
            self.label_summary_vrfs.parent = self
            self.labels = MplsLsdNodes.MplsLsdNode.Labels()
            self.labels.parent = self
            self.rewrite = MplsLsdNodes.MplsLsdNode.Rewrite()
            self.rewrite.parent = self
            self.rewrite_summary = MplsLsdNodes.MplsLsdNode.RewriteSummary()
            self.rewrite_summary.parent = self
            self.rewrite_summary_vrfs = MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs()
            self.rewrite_summary_vrfs.parent = self


        class Clients(object):
            """
            Table of MPLS clients using LSD
            
            .. attribute:: client
            
            	Data for MPLS client using LSD
            	**type**\: list of    :py:class:`Client <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Clients.Client>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.client = YList()
                self.client.parent = self
                self.client.name = 'client'


            class Client(object):
                """
                Data for MPLS client using LSD
                
                .. attribute:: client_name  <key>
                
                	Client Instance name in the form of     'Application\-<client\_name>' or      'BCDL\_Agent\-<index\:parent\_index>'
                	**type**\:  str
                
                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                
                .. attribute:: client_index
                
                	Client Index Value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: client_union
                
                	Client union
                	**type**\:   :py:class:`ClientUnion <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion>`
                
                .. attribute:: node_id
                
                	Node ID
                	**type**\:  str
                
                	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.client_name = None
                    self.client_index = None
                    self.client_union = MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion()
                    self.client_union.parent = self
                    self.node_id = None


                class ClientUnion(object):
                    """
                    Client union
                    
                    .. attribute:: application
                    
                    	Application client
                    	**type**\:   :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.Application>`
                    
                    .. attribute:: bcdl_agent
                    
                    	BCDL agent client
                    	**type**\:   :py:class:`BcdlAgent <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.BcdlAgent>`
                    
                    .. attribute:: lsd_client_type
                    
                    	LSDClientType
                    	**type**\:   :py:class:`MgmtLsdClientEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdClientEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application = MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.Application()
                        self.application.parent = self
                        self.bcdl_agent = MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.BcdlAgent()
                        self.bcdl_agent.parent = self
                        self.lsd_client_type = None


                    class Application(object):
                        """
                        Application client
                        
                        .. attribute:: application_instance
                        
                        	client\-app instance
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.Application']['meta_info']


                    class BcdlAgent(object):
                        """
                        BCDL agent client
                        
                        .. attribute:: client_conn_index
                        
                        	BCDL Agent client connection index
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: parent_client_conn_index
                        
                        	BCDL Agent parent client connection index
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.client_conn_index = None
                            self.parent_client_conn_index = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:bcdl-agent'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.client_conn_index is not None:
                                return True

                            if self.parent_client_conn_index is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion.BcdlAgent']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:client-union'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application is not None and self.application._has_data():
                            return True

                        if self.bcdl_agent is not None and self.bcdl_agent._has_data():
                            return True

                        if self.lsd_client_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Clients.Client.ClientUnion']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.client_name is None:
                        raise YPYModelError('Key property client_name is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:client[Cisco-IOS-XR-mpls-lsd-oper:client-name = ' + str(self.client_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.client_name is not None:
                        return True

                    if self.client_index is not None:
                        return True

                    if self.client_union is not None and self.client_union._has_data():
                        return True

                    if self.node_id is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Clients.Client']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:clients'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.client is not None:
                    for child_ref in self.client:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Clients']['meta_info']


        class LabelSummary(object):
            """
            Dynamic label range
            
            .. attribute:: owner_count
            
            	Owner counts
            	**type**\: list of    :py:class:`OwnerCount <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelSummary.OwnerCount>`
            
            .. attribute:: rsi_connected
            
            	Rsi connected
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: total_labels
            
            	Total labels
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: vrf_name_xr
            
            	VRF Name
            	**type**\:  str
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.owner_count = YList()
                self.owner_count.parent = self
                self.owner_count.name = 'owner_count'
                self.rsi_connected = None
                self.total_labels = None
                self.vrf_name_xr = None


            class OwnerCount(object):
                """
                Owner counts
                
                .. attribute:: application_instance
                
                	client\-app identifier
                	**type**\:  str
                
                .. attribute:: application_name
                
                	Application name
                	**type**\:  str
                
                .. attribute:: application_role_primary
                
                	Primary/Backup role
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_type
                
                	Application type
                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                
                .. attribute:: number_of_labels
                
                	Number of labels
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_instance = None
                    self.application_name = None
                    self.application_role_primary = None
                    self.application_type = None
                    self.number_of_labels = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:owner-count'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_instance is not None:
                        return True

                    if self.application_name is not None:
                        return True

                    if self.application_role_primary is not None:
                        return True

                    if self.application_type is not None:
                        return True

                    if self.number_of_labels is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelSummary.OwnerCount']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-summary'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.owner_count is not None:
                    for child_ref in self.owner_count:
                        if child_ref._has_data():
                            return True

                if self.rsi_connected is not None:
                    return True

                if self.total_labels is not None:
                    return True

                if self.vrf_name_xr is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelSummary']['meta_info']


        class Labels(object):
            """
            Table of labels
            
            .. attribute:: label
            
            	Data for label
            	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.label = YList()
                self.label.parent = self
                self.label.name = 'label'


            class Label(object):
                """
                Data for label
                
                .. attribute:: label_id  <key>
                
                	Label value
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_owner
                
                	Application owner
                	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.ApplicationOwner>`
                
                .. attribute:: label
                
                	Label value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: label_context
                
                	Label context
                	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext>`
                
                .. attribute:: rewrite_is_bound
                
                	Rewrite bound to label
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: rewrite_owners
                
                	Rewrite owner
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rs_iconnected
                
                	RSI connected
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: vrf_name
                
                	VRF Name
                	**type**\:  str
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.label_id = None
                    self.application_owner = YList()
                    self.application_owner.parent = self
                    self.application_owner.name = 'application_owner'
                    self.label = None
                    self.label_context = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext()
                    self.label_context.parent = self
                    self.rewrite_is_bound = None
                    self.rewrite_owners = None
                    self.rs_iconnected = None
                    self.vrf_name = None


                class LabelContext(object):
                    """
                    Label context
                    
                    .. attribute:: application_data
                    
                    	Application opaque data
                    	**type**\:  str
                    
                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                    
                    .. attribute:: key
                    
                    	Label Key
                    	**type**\:   :py:class:`Key <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_data = None
                        self.key = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key()
                        self.key.parent = self


                    class Key(object):
                        """
                        Label Key
                        
                        .. attribute:: cev4l3vpn_data
                        
                        	L3VPN CEv4 label context
                        	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev4L3VpnData>`
                        
                        .. attribute:: cev6l3vpn_data
                        
                        	L3VPN CEv6 label context
                        	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev6L3VpnData>`
                        
                        .. attribute:: evpn_data
                        
                        	EVPN context
                        	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.EvpnData>`
                        
                        .. attribute:: generic_routing_encapsulation
                        
                        	Generic routing encapsulation context
                        	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation>`
                        
                        .. attribute:: ip_sub_data
                        
                        	IP Subscriber context
                        	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.IpSubData>`
                        
                        .. attribute:: ipv4_data
                        
                        	IPv4 label context
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4Data>`
                        
                        .. attribute:: ipv4blb_data
                        
                        	BFD BLB label context
                        	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4BlbData>`
                        
                        .. attribute:: ipv4l3vpn_data
                        
                        	L3VPN IPv4 label context
                        	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4L3VpnData>`
                        
                        .. attribute:: ipv6_data
                        
                        	IPv6 label context
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6Data>`
                        
                        .. attribute:: ipv6_generic_routing_encapsulation
                        
                        	Generic routing encapsulation context
                        	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation>`
                        
                        .. attribute:: ipv6blb_data
                        
                        	BFD BLB label context
                        	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6BlbData>`
                        
                        .. attribute:: ipv6l3vpn_data
                        
                        	L3VPN IPv6 label context
                        	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6L3VpnData>`
                        
                        .. attribute:: label_block_data
                        
                        	Label block context
                        	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockData>`
                        
                        .. attribute:: label_block_srgb_data
                        
                        	Label block SRGB context
                        	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockSrgbData>`
                        
                        .. attribute:: label_context_type
                        
                        	LabelContextType
                        	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                        
                        .. attribute:: mld_pv4_data
                        
                        	MLDPv4 LSM\-ID context
                        	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.MldPv4Data>`
                        
                        .. attribute:: next_hop_set_l3vpn
                        
                        	L3VPN NH SET label context
                        	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.NextHopSetL3Vpn>`
                        
                        .. attribute:: pi_mi_pmsi_data
                        
                        	PIM I\-PMSI label conext
                        	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMiPmsiData>`
                        
                        .. attribute:: pi_ms_pmsi_data
                        
                        	PIM S\-PMSI label conext
                        	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMsPmsiData>`
                        
                        .. attribute:: pseudowire_data
                        
                        	Pseudowire label context
                        	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireData>`
                        
                        .. attribute:: pseudowire_head_end_data
                        
                        	Pseudowire Head\-end label context
                        	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireHeadEndData>`
                        
                        .. attribute:: sr_adj_segment_ipv4
                        
                        	SR Adj Segment ipv4 context
                        	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4>`
                        
                        .. attribute:: sr_adj_segment_ipv6
                        
                        	SR Adj Segment ipv6 context
                        	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6>`
                        
                        .. attribute:: sr_prefix_segment
                        
                        	SR Prefix Segment context
                        	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrPrefixSegment>`
                        
                        .. attribute:: te_binding
                        
                        	MPLS TE tunnel binding context
                        	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TeBinding>`
                        
                        .. attribute:: tev4_data
                        
                        	TEv4 label context
                        	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4Data>`
                        
                        .. attribute:: tev4p2mp_data
                        
                        	TEv4 P2MP context
                        	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4P2MpData>`
                        
                        .. attribute:: tp_data
                        
                        	TP context
                        	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TpData>`
                        
                        .. attribute:: vrf_l3vpn_data
                        
                        	L3VPN VRF label context
                        	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.VrfL3VpnData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.cev4l3vpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev4L3VpnData()
                            self.cev4l3vpn_data.parent = self
                            self.cev6l3vpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev6L3VpnData()
                            self.cev6l3vpn_data.parent = self
                            self.evpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.EvpnData()
                            self.evpn_data.parent = self
                            self.generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation()
                            self.generic_routing_encapsulation.parent = self
                            self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.IpSubData()
                            self.ip_sub_data.parent = self
                            self.ipv4_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv4blb_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4BlbData()
                            self.ipv4blb_data.parent = self
                            self.ipv4l3vpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4L3VpnData()
                            self.ipv4l3vpn_data.parent = self
                            self.ipv6_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.ipv6_generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation()
                            self.ipv6_generic_routing_encapsulation.parent = self
                            self.ipv6blb_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6BlbData()
                            self.ipv6blb_data.parent = self
                            self.ipv6l3vpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6L3VpnData()
                            self.ipv6l3vpn_data.parent = self
                            self.label_block_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockData()
                            self.label_block_data.parent = self
                            self.label_block_srgb_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockSrgbData()
                            self.label_block_srgb_data.parent = self
                            self.label_context_type = None
                            self.mld_pv4_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.MldPv4Data()
                            self.mld_pv4_data.parent = self
                            self.next_hop_set_l3vpn = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.NextHopSetL3Vpn()
                            self.next_hop_set_l3vpn.parent = self
                            self.pi_mi_pmsi_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMiPmsiData()
                            self.pi_mi_pmsi_data.parent = self
                            self.pi_ms_pmsi_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMsPmsiData()
                            self.pi_ms_pmsi_data.parent = self
                            self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireData()
                            self.pseudowire_data.parent = self
                            self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireHeadEndData()
                            self.pseudowire_head_end_data.parent = self
                            self.sr_adj_segment_ipv4 = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4()
                            self.sr_adj_segment_ipv4.parent = self
                            self.sr_adj_segment_ipv6 = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6()
                            self.sr_adj_segment_ipv6.parent = self
                            self.sr_prefix_segment = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrPrefixSegment()
                            self.sr_prefix_segment.parent = self
                            self.te_binding = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TeBinding()
                            self.te_binding.parent = self
                            self.tev4_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4Data()
                            self.tev4_data.parent = self
                            self.tev4p2mp_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4P2MpData()
                            self.tev4p2mp_data.parent = self
                            self.tp_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TpData()
                            self.tp_data.parent = self
                            self.vrf_l3vpn_data = MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.VrfL3VpnData()
                            self.vrf_l3vpn_data.parent = self


                        class Ipv4Data(object):
                            """
                            IPv4 label context
                            
                            .. attribute:: prefix
                            
                            	IPv4 prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	IPv4 prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_name
                            
                            	VRF Name
                            	**type**\:  str
                            
                            	**length:** 0..33
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.security_id = None
                                self.table_id = None
                                self.vrf_name = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.vrf_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            IPv6 label context
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_name
                            
                            	VRF Name
                            	**type**\:  str
                            
                            	**length:** 0..33
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.security_id = None
                                self.table_id = None
                                self.vrf_name = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.vrf_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6Data']['meta_info']


                        class Tev4Data(object):
                            """
                            TEv4 label context
                            
                            .. attribute:: is_srte
                            
                            	Is this an SRTE head tunnel
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_dest
                            
                            	Tunnel destination
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: tunnel_id
                            
                            	Tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_id_extension
                            
                            	Extended tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_lsp_id
                            
                            	Tunnel LSP ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_source
                            
                            	Tunnel source
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.is_srte = None
                                self.table_id = None
                                self.tunnel_dest = None
                                self.tunnel_id = None
                                self.tunnel_id_extension = None
                                self.tunnel_lsp_id = None
                                self.tunnel_source = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.is_srte is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.tunnel_dest is not None:
                                    return True

                                if self.tunnel_id is not None:
                                    return True

                                if self.tunnel_id_extension is not None:
                                    return True

                                if self.tunnel_lsp_id is not None:
                                    return True

                                if self.tunnel_source is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4Data']['meta_info']


                        class Ipv4L3VpnData(object):
                            """
                            L3VPN IPv4 label context
                            
                            .. attribute:: prefix
                            
                            	IPv4 prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: route_distinguisher
                            
                            	Route distinguisher
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.route_distinguisher = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.route_distinguisher is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4L3VpnData']['meta_info']


                        class Ipv6L3VpnData(object):
                            """
                            L3VPN IPv6 label context
                            
                            .. attribute:: prefix
                            
                            	IPv6 prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: route_distinguisher
                            
                            	Route distinguisher
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.route_distinguisher = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.route_distinguisher is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6L3VpnData']['meta_info']


                        class VrfL3VpnData(object):
                            """
                            L3VPN VRF label context
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.security_id = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.security_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.VrfL3VpnData']['meta_info']


                        class Cev4L3VpnData(object):
                            """
                            L3VPN CEv4 label context
                            
                            .. attribute:: ipv4_next_hop
                            
                            	IPv4 nexthop
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ipv4_next_hop = None
                                self.security_id = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ipv4_next_hop is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev4L3VpnData']['meta_info']


                        class Cev6L3VpnData(object):
                            """
                            L3VPN CEv6 label context
                            
                            .. attribute:: ipv6_next_hop
                            
                            	IPv6 nexthop
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ipv6_next_hop = None
                                self.security_id = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ipv6_next_hop is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Cev6L3VpnData']['meta_info']


                        class PseudowireData(object):
                            """
                            Pseudowire label context
                            
                            .. attribute:: prefix
                            
                            	Address prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: pseudowire_id
                            
                            	Pseudo\-wire ID
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: remote_l2_router_id
                            
                            	Remote L2 Router ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: subinterface
                            
                            	Subinterface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.pseudowire_id = None
                                self.remote_l2_router_id = None
                                self.subinterface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.pseudowire_id is not None:
                                    return True

                                if self.remote_l2_router_id is not None:
                                    return True

                                if self.subinterface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireData']['meta_info']


                        class LabelBlockData(object):
                            """
                            Label block context
                            
                            .. attribute:: edge_id
                            
                            	Edge ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: offset
                            
                            	Offset
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: service
                            
                            	Service
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: size
                            
                            	Number of labels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vpn_id
                            
                            	VPN ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.edge_id = None
                                self.offset = None
                                self.service = None
                                self.size = None
                                self.vpn_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.edge_id is not None:
                                    return True

                                if self.offset is not None:
                                    return True

                                if self.service is not None:
                                    return True

                                if self.size is not None:
                                    return True

                                if self.vpn_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockData']['meta_info']


                        class IpSubData(object):
                            """
                            IP Subscriber context
                            
                            .. attribute:: parent_interface
                            
                            	Parent interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: table_id
                            
                            	Table Id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.parent_interface = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.parent_interface is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.IpSubData']['meta_info']


                        class Tev4P2MpData(object):
                            """
                            TEv4 P2MP context
                            
                            .. attribute:: p2mp_id
                            
                            	Point to multipoint ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: previous_hop
                            
                            	Previous hop
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_id
                            
                            	Tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_id_extension
                            
                            	Tunnel ID extension
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_lsp_id
                            
                            	Tunnel LSP ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_source
                            
                            	Tunnel source
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.p2mp_id = None
                                self.previous_hop = None
                                self.table_id = None
                                self.tunnel_id = None
                                self.tunnel_id_extension = None
                                self.tunnel_lsp_id = None
                                self.tunnel_source = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.p2mp_id is not None:
                                    return True

                                if self.previous_hop is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.tunnel_id is not None:
                                    return True

                                if self.tunnel_id_extension is not None:
                                    return True

                                if self.tunnel_lsp_id is not None:
                                    return True

                                if self.tunnel_source is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Tev4P2MpData']['meta_info']


                        class MldPv4Data(object):
                            """
                            MLDPv4 LSM\-ID context
                            
                            .. attribute:: lsm_id
                            
                            	LSM ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: peer_label_space_id
                            
                            	Peer Label Space Id
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: peer_lsrid
                            
                            	Peer LSR Id
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: type
                            
                            	LSM ID Type
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.lsm_id = None
                                self.peer_label_space_id = None
                                self.peer_lsrid = None
                                self.table_id = None
                                self.type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.lsm_id is not None:
                                    return True

                                if self.peer_label_space_id is not None:
                                    return True

                                if self.peer_lsrid is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.MldPv4Data']['meta_info']


                        class PseudowireHeadEndData(object):
                            """
                            Pseudowire Head\-end label context
                            
                            .. attribute:: pwhe_intf
                            
                            	Pseudo\-wire Head\-end interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_intf = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_intf is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PseudowireHeadEndData']['meta_info']


                        class TpData(object):
                            """
                            TP context
                            
                            .. attribute:: dest_global_id
                            
                            	TP destination global ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: dest_node_id
                            
                            	TP destination node ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: dest_tunnel_id
                            
                            	TP destination tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: lsp_id
                            
                            	TP LSP ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: source_global_id
                            
                            	TP source global ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_node_id
                            
                            	TP source node ID
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: source_tunnel_id
                            
                            	TP source tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dest_global_id = None
                                self.dest_node_id = None
                                self.dest_tunnel_id = None
                                self.lsp_id = None
                                self.source_global_id = None
                                self.source_node_id = None
                                self.source_tunnel_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dest_global_id is not None:
                                    return True

                                if self.dest_node_id is not None:
                                    return True

                                if self.dest_tunnel_id is not None:
                                    return True

                                if self.lsp_id is not None:
                                    return True

                                if self.source_global_id is not None:
                                    return True

                                if self.source_node_id is not None:
                                    return True

                                if self.source_tunnel_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TpData']['meta_info']


                        class GenericRoutingEncapsulation(object):
                            """
                            Generic routing encapsulation context
                            
                            .. attribute:: gre_interface
                            
                            	Generic routing encapsulation interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.gre_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.gre_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation']['meta_info']


                        class Ipv6GenericRoutingEncapsulation(object):
                            """
                            Generic routing encapsulation context
                            
                            .. attribute:: greipv6_interface
                            
                            	Generic routing encapsulation IPv6 interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.greipv6_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.greipv6_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation']['meta_info']


                        class EvpnData(object):
                            """
                            EVPN context
                            
                            .. attribute:: ethernet_segment
                            
                            	Ethernet Segment ID
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            .. attribute:: evpn_id
                            
                            	EVPN ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: evpn_tag
                            
                            	EVPN TAG
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.ethernet_segment = None
                                self.evpn_id = None
                                self.evpn_tag = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.ethernet_segment is not None:
                                    return True

                                if self.evpn_id is not None:
                                    return True

                                if self.evpn_tag is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.EvpnData']['meta_info']


                        class Ipv4BlbData(object):
                            """
                            BFD BLB label context
                            
                            .. attribute:: blb_intf
                            
                            	BFD BLB interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix
                            
                            	IPv4 prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.blb_intf = None
                                self.prefix = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.blb_intf is not None:
                                    return True

                                if self.prefix is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv4BlbData']['meta_info']


                        class Ipv6BlbData(object):
                            """
                            BFD BLB label context
                            
                            .. attribute:: blb_intf
                            
                            	BFD BLB interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix
                            
                            	IPv6 prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.blb_intf = None
                                self.prefix = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.blb_intf is not None:
                                    return True

                                if self.prefix is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.Ipv6BlbData']['meta_info']


                        class PiMiPmsiData(object):
                            """
                            PIM I\-PMSI label conext
                            
                            .. attribute:: head
                            
                            	Head
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: v6
                            
                            	PIM6
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: vrf_id
                            
                            	VRF ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.head = None
                                self.v6 = None
                                self.vrf_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.head is not None:
                                    return True

                                if self.v6 is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMiPmsiData']['meta_info']


                        class PiMsPmsiData(object):
                            """
                            PIM S\-PMSI label conext
                            
                            .. attribute:: head
                            
                            	Head
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: hli
                            
                            	Head LSM\-ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: seg
                            
                            	Segmented Multicast
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: source
                            
                            	Originating Router
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: v6
                            
                            	PIM6
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: vrf_id
                            
                            	VRF ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.head = None
                                self.hli = None
                                self.seg = None
                                self.source = None
                                self.v6 = None
                                self.vrf_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.head is not None:
                                    return True

                                if self.hli is not None:
                                    return True

                                if self.seg is not None:
                                    return True

                                if self.source is not None:
                                    return True

                                if self.v6 is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.PiMsPmsiData']['meta_info']


                        class NextHopSetL3Vpn(object):
                            """
                            L3VPN NH SET label context
                            
                            .. attribute:: next_hop_set_id
                            
                            	Next Hop Set ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.next_hop_set_id = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.next_hop_set_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.NextHopSetL3Vpn']['meta_info']


                        class SrPrefixSegment(object):
                            """
                            SR Prefix Segment context
                            
                            .. attribute:: segment_id
                            
                            	Prefix Segment ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.segment_id = None
                                self.table_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.segment_id is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrPrefixSegment']['meta_info']


                        class SrAdjSegmentIpv4(object):
                            """
                            SR Adj Segment ipv4 context
                            
                            .. attribute:: addr
                            
                            	Adjacency nexthop IPv4 address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: index
                            
                            	Adjacency index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: intf
                            
                            	Adjacency interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: type
                            
                            	Adjacency type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.addr = None
                                self.index = None
                                self.intf = None
                                self.type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.addr is not None:
                                    return True

                                if self.index is not None:
                                    return True

                                if self.intf is not None:
                                    return True

                                if self.type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4']['meta_info']


                        class SrAdjSegmentIpv6(object):
                            """
                            SR Adj Segment ipv6 context
                            
                            .. attribute:: addr
                            
                            	Adjacency nexthop IPv6 address
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: index
                            
                            	Adjacency index
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: intf
                            
                            	Adjacency interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: type
                            
                            	Adjacency type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.addr = None
                                self.index = None
                                self.intf = None
                                self.type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.addr is not None:
                                    return True

                                if self.index is not None:
                                    return True

                                if self.intf is not None:
                                    return True

                                if self.type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6']['meta_info']


                        class LabelBlockSrgbData(object):
                            """
                            Label block SRGB context
                            
                            .. attribute:: offset
                            
                            	Offset
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: size
                            
                            	Number of labels
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: start_label
                            
                            	Start Label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.offset = None
                                self.size = None
                                self.start_label = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.offset is not None:
                                    return True

                                if self.size is not None:
                                    return True

                                if self.start_label is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.LabelBlockSrgbData']['meta_info']


                        class TeBinding(object):
                            """
                            MPLS TE tunnel binding context
                            
                            .. attribute:: te_identifier
                            
                            	MPLS Traffic Engineering Tunnel or Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: te_type
                            
                            	Type of identifier for the binding
                            	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.te_identifier = None
                                self.te_type = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.te_identifier is not None:
                                    return True

                                if self.te_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key.TeBinding']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                return True

                            if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                return True

                            if self.evpn_data is not None and self.evpn_data._has_data():
                                return True

                            if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                return True

                            if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                return True

                            if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                return True

                            if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                return True

                            if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                return True

                            if self.label_block_data is not None and self.label_block_data._has_data():
                                return True

                            if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                return True

                            if self.label_context_type is not None:
                                return True

                            if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                return True

                            if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                return True

                            if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                return True

                            if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                return True

                            if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                return True

                            if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                return True

                            if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                return True

                            if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                return True

                            if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                return True

                            if self.te_binding is not None and self.te_binding._has_data():
                                return True

                            if self.tev4_data is not None and self.tev4_data._has_data():
                                return True

                            if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                return True

                            if self.tp_data is not None and self.tp_data._has_data():
                                return True

                            if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext.Key']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_data is not None:
                            return True

                        if self.key is not None and self.key._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.LabelContext']['meta_info']


                class ApplicationOwner(object):
                    """
                    Application owner
                    
                    .. attribute:: application_instance
                    
                    	Application instance Name
                    	**type**\:  str
                    
                    .. attribute:: application_name
                    
                    	Application name
                    	**type**\:  str
                    
                    .. attribute:: application_role_primary
                    
                    	Primary/Backup role
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: application_type
                    
                    	Application type
                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                    
                    .. attribute:: resource_state
                    
                    	Application resource state
                    	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_instance = None
                        self.application_name = None
                        self.application_role_primary = None
                        self.application_type = None
                        self.resource_state = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_instance is not None:
                            return True

                        if self.application_name is not None:
                            return True

                        if self.application_role_primary is not None:
                            return True

                        if self.application_type is not None:
                            return True

                        if self.resource_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label.ApplicationOwner']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.label_id is None:
                        raise YPYModelError('Key property label_id is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label[Cisco-IOS-XR-mpls-lsd-oper:label-id = ' + str(self.label_id) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.label_id is not None:
                        return True

                    if self.application_owner is not None:
                        for child_ref in self.application_owner:
                            if child_ref._has_data():
                                return True

                    if self.label is not None:
                        return True

                    if self.label_context is not None and self.label_context._has_data():
                        return True

                    if self.rewrite_is_bound is not None:
                        return True

                    if self.rewrite_owners is not None:
                        return True

                    if self.rs_iconnected is not None:
                        return True

                    if self.vrf_name is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels.Label']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:labels'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.label is not None:
                    for child_ref in self.label:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Labels']['meta_info']


        class FrrDatabase(object):
            """
            FRR database
            
            .. attribute:: summary_protected_interfaces
            
            	Sumary table of Protected Interfaces
            	**type**\:   :py:class:`SummaryProtectedInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.SummaryProtectedInterfaces>`
            
            .. attribute:: tunnel_head_summary
            
            	Summary data for FRR database entry \- Tunnel head
            	**type**\:   :py:class:`TunnelHeadSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeadSummary>`
            
            .. attribute:: tunnel_heads
            
            	Table of FRR database entries \- Tunnel heads
            	**type**\:   :py:class:`TunnelHeads <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads>`
            
            .. attribute:: tunnel_midpoint_summary
            
            	Summary data for FRR database entry \- Tunnel midpoint
            	**type**\:   :py:class:`TunnelMidpointSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpointSummary>`
            
            .. attribute:: tunnel_midpoints
            
            	Table of FRR database entries \- Tunnel midpoints
            	**type**\:   :py:class:`TunnelMidpoints <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints>`
            
            .. attribute:: tunnel_summary
            
            	Summary data for FRR database entry
            	**type**\:   :py:class:`TunnelSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelSummary>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.summary_protected_interfaces = MplsLsdNodes.MplsLsdNode.FrrDatabase.SummaryProtectedInterfaces()
                self.summary_protected_interfaces.parent = self
                self.tunnel_head_summary = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeadSummary()
                self.tunnel_head_summary.parent = self
                self.tunnel_heads = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads()
                self.tunnel_heads.parent = self
                self.tunnel_midpoint_summary = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpointSummary()
                self.tunnel_midpoint_summary.parent = self
                self.tunnel_midpoints = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints()
                self.tunnel_midpoints.parent = self
                self.tunnel_summary = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelSummary()
                self.tunnel_summary.parent = self


            class TunnelMidpoints(object):
                """
                Table of FRR database entries \- Tunnel
                midpoints
                
                .. attribute:: tunnel_midpoint
                
                	Data for FRR database entry \- Tunnel midpoint
                	**type**\: list of    :py:class:`TunnelMidpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.tunnel_midpoint = YList()
                    self.tunnel_midpoint.parent = self
                    self.tunnel_midpoint.name = 'tunnel_midpoint'


                class TunnelMidpoint(object):
                    """
                    Data for FRR database entry \- Tunnel midpoint
                    
                    .. attribute:: label  <key>
                    
                    	Label value
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: entry_frr_state
                    
                    	MPLS FRR entry state
                    	**type**\:   :py:class:`MgmtLsdFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFrrStateEnum>`
                    
                    .. attribute:: frr_entry_id
                    
                    	FRR entry ID
                    	**type**\:   :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId>`
                    
                    .. attribute:: input_label
                    
                    	Input label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: out_path
                    
                    	Out Path List
                    	**type**\: list of    :py:class:`OutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.OutPath>`
                    
                    .. attribute:: tunnel_interface
                    
                    	Tunnel interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.label = None
                        self.entry_frr_state = None
                        self.frr_entry_id = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId()
                        self.frr_entry_id.parent = self
                        self.input_label = None
                        self.out_path = YList()
                        self.out_path.parent = self
                        self.out_path.name = 'out_path'
                        self.tunnel_interface = None


                    class FrrEntryId(object):
                        """
                        FRR entry ID
                        
                        .. attribute:: head
                        
                        	head
                        	**type**\:   :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head>`
                        
                        .. attribute:: midpoint
                        
                        	midpoint
                        	**type**\:   :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint>`
                        
                        .. attribute:: role
                        
                        	Role
                        	**type**\:   :py:class:`MgmtLsdLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLspRoleEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.head = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head()
                            self.head.parent = self
                            self.midpoint = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint()
                            self.midpoint.parent = self
                            self.role = None


                        class Head(object):
                            """
                            head
                            
                            .. attribute:: destination_prefix
                            
                            	Destination prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: destination_prefix_length
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.destination_prefix = None
                                self.destination_prefix_length = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:head'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.destination_prefix is not None:
                                    return True

                                if self.destination_prefix_length is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head']['meta_info']


                        class Midpoint(object):
                            """
                            midpoint
                            
                            .. attribute:: lspid
                            
                            	LSP ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_address
                            
                            	Source IPv4 address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: tunnel_id
                            
                            	Tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.lspid = None
                                self.source_address = None
                                self.tunnel_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:midpoint'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.lspid is not None:
                                    return True

                                if self.source_address is not None:
                                    return True

                                if self.tunnel_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:frr-entry-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.head is not None and self.head._has_data():
                                return True

                            if self.midpoint is not None and self.midpoint._has_data():
                                return True

                            if self.role is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId']['meta_info']


                    class OutPath(object):
                        """
                        Out Path List
                        
                        .. attribute:: frr_interface
                        
                        	FRR interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: frr_label
                        
                        	FRR output label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ipv4_next_hop
                        
                        	Next hop IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: out_interface
                        
                        	Outgoing interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: out_label
                        
                        	Outgoing label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.frr_interface = None
                            self.frr_label = None
                            self.ipv4_next_hop = None
                            self.out_interface = None
                            self.out_label = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:out-path'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.frr_interface is not None:
                                return True

                            if self.frr_label is not None:
                                return True

                            if self.ipv4_next_hop is not None:
                                return True

                            if self.out_interface is not None:
                                return True

                            if self.out_label is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint.OutPath']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.label is None:
                            raise YPYModelError('Key property label is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoint[Cisco-IOS-XR-mpls-lsd-oper:label = ' + str(self.label) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.label is not None:
                            return True

                        if self.entry_frr_state is not None:
                            return True

                        if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                            return True

                        if self.input_label is not None:
                            return True

                        if self.out_path is not None:
                            for child_ref in self.out_path:
                                if child_ref._has_data():
                                    return True

                        if self.tunnel_interface is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints.TunnelMidpoint']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoints'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.tunnel_midpoint is not None:
                        for child_ref in self.tunnel_midpoint:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpoints']['meta_info']


            class TunnelHeads(object):
                """
                Table of FRR database entries \- Tunnel heads
                
                .. attribute:: tunnel_head
                
                	Data for FRR database entry \- Tunnel head
                	**type**\: list of    :py:class:`TunnelHead <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.tunnel_head = YList()
                    self.tunnel_head.parent = self
                    self.tunnel_head.name = 'tunnel_head'


                class TunnelHead(object):
                    """
                    Data for FRR database entry \- Tunnel head
                    
                    .. attribute:: interface_name  <key>
                    
                    	Tunnel interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: entry_frr_state
                    
                    	MPLS FRR entry state
                    	**type**\:   :py:class:`MgmtLsdFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFrrStateEnum>`
                    
                    .. attribute:: frr_entry_id
                    
                    	FRR entry ID
                    	**type**\:   :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId>`
                    
                    .. attribute:: input_label
                    
                    	Input label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: out_path
                    
                    	Out Path List
                    	**type**\: list of    :py:class:`OutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.OutPath>`
                    
                    .. attribute:: tunnel_interface
                    
                    	Tunnel interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.entry_frr_state = None
                        self.frr_entry_id = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId()
                        self.frr_entry_id.parent = self
                        self.input_label = None
                        self.out_path = YList()
                        self.out_path.parent = self
                        self.out_path.name = 'out_path'
                        self.tunnel_interface = None


                    class FrrEntryId(object):
                        """
                        FRR entry ID
                        
                        .. attribute:: head
                        
                        	head
                        	**type**\:   :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head>`
                        
                        .. attribute:: midpoint
                        
                        	midpoint
                        	**type**\:   :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint>`
                        
                        .. attribute:: role
                        
                        	Role
                        	**type**\:   :py:class:`MgmtLsdLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLspRoleEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.head = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head()
                            self.head.parent = self
                            self.midpoint = MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint()
                            self.midpoint.parent = self
                            self.role = None


                        class Head(object):
                            """
                            head
                            
                            .. attribute:: destination_prefix
                            
                            	Destination prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: destination_prefix_length
                            
                            	Destination prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.destination_prefix = None
                                self.destination_prefix_length = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:head'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.destination_prefix is not None:
                                    return True

                                if self.destination_prefix_length is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head']['meta_info']


                        class Midpoint(object):
                            """
                            midpoint
                            
                            .. attribute:: lspid
                            
                            	LSP ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_address
                            
                            	Source IPv4 address
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: tunnel_id
                            
                            	Tunnel ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.lspid = None
                                self.source_address = None
                                self.tunnel_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:midpoint'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.lspid is not None:
                                    return True

                                if self.source_address is not None:
                                    return True

                                if self.tunnel_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:frr-entry-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.head is not None and self.head._has_data():
                                return True

                            if self.midpoint is not None and self.midpoint._has_data():
                                return True

                            if self.role is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId']['meta_info']


                    class OutPath(object):
                        """
                        Out Path List
                        
                        .. attribute:: frr_interface
                        
                        	FRR interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: frr_label
                        
                        	FRR output label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ipv4_next_hop
                        
                        	Next hop IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: out_interface
                        
                        	Outgoing interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: out_label
                        
                        	Outgoing label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.frr_interface = None
                            self.frr_label = None
                            self.ipv4_next_hop = None
                            self.out_interface = None
                            self.out_label = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:out-path'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.frr_interface is not None:
                                return True

                            if self.frr_label is not None:
                                return True

                            if self.ipv4_next_hop is not None:
                                return True

                            if self.out_interface is not None:
                                return True

                            if self.out_label is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead.OutPath']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-head[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.entry_frr_state is not None:
                            return True

                        if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                            return True

                        if self.input_label is not None:
                            return True

                        if self.out_path is not None:
                            for child_ref in self.out_path:
                                if child_ref._has_data():
                                    return True

                        if self.tunnel_interface is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads.TunnelHead']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-heads'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.tunnel_head is not None:
                        for child_ref in self.tunnel_head:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeads']['meta_info']


            class TunnelHeadSummary(object):
                """
                Summary data for FRR database entry \- Tunnel
                head
                
                .. attribute:: active
                
                	Number of FRR rewrites in Active state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: igp
                
                	Number of FRR rewrites in IGP state for SR\-TE
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: partial
                
                	Number of FRR rewrites in Partial state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ready
                
                	Number of FRR rewrites in Ready state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.active = None
                    self.igp = None
                    self.partial = None
                    self.ready = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-head-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.active is not None:
                        return True

                    if self.igp is not None:
                        return True

                    if self.partial is not None:
                        return True

                    if self.ready is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelHeadSummary']['meta_info']


            class SummaryProtectedInterfaces(object):
                """
                Sumary table of Protected Interfaces
                
                .. attribute:: summary_protected_interface
                
                	Data for MPLS interface
                	**type**\: list of    :py:class:`SummaryProtectedInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.FrrDatabase.SummaryProtectedInterfaces.SummaryProtectedInterface>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.summary_protected_interface = YList()
                    self.summary_protected_interface.parent = self
                    self.summary_protected_interface.name = 'summary_protected_interface'


                class SummaryProtectedInterface(object):
                    """
                    Data for MPLS interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: active
                    
                    	Number of FRR rewrites in Active state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: igp
                    
                    	Number of FRR rewrites in IGP state for SR\-TE
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: partial
                    
                    	Number of FRR rewrites in Partial state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ready
                    
                    	Number of FRR rewrites in Ready state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.active = None
                        self.igp = None
                        self.partial = None
                        self.ready = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:summary-protected-interface[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.active is not None:
                            return True

                        if self.igp is not None:
                            return True

                        if self.partial is not None:
                            return True

                        if self.ready is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.SummaryProtectedInterfaces.SummaryProtectedInterface']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:summary-protected-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.summary_protected_interface is not None:
                        for child_ref in self.summary_protected_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.SummaryProtectedInterfaces']['meta_info']


            class TunnelSummary(object):
                """
                Summary data for FRR database entry
                
                .. attribute:: active
                
                	Number of FRR rewrites in Active state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: igp
                
                	Number of FRR rewrites in IGP state for SR\-TE
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: partial
                
                	Number of FRR rewrites in Partial state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ready
                
                	Number of FRR rewrites in Ready state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.active = None
                    self.igp = None
                    self.partial = None
                    self.ready = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.active is not None:
                        return True

                    if self.igp is not None:
                        return True

                    if self.partial is not None:
                        return True

                    if self.ready is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelSummary']['meta_info']


            class TunnelMidpointSummary(object):
                """
                Summary data for FRR database entry \- Tunnel
                midpoint
                
                .. attribute:: active
                
                	Number of FRR rewrites in Active state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: igp
                
                	Number of FRR rewrites in IGP state for SR\-TE
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: partial
                
                	Number of FRR rewrites in Partial state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ready
                
                	Number of FRR rewrites in Ready state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.active = None
                    self.igp = None
                    self.partial = None
                    self.ready = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoint-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.active is not None:
                        return True

                    if self.igp is not None:
                        return True

                    if self.partial is not None:
                        return True

                    if self.ready is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase.TunnelMidpointSummary']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:frr-database'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.summary_protected_interfaces is not None and self.summary_protected_interfaces._has_data():
                    return True

                if self.tunnel_head_summary is not None and self.tunnel_head_summary._has_data():
                    return True

                if self.tunnel_heads is not None and self.tunnel_heads._has_data():
                    return True

                if self.tunnel_midpoint_summary is not None and self.tunnel_midpoint_summary._has_data():
                    return True

                if self.tunnel_midpoints is not None and self.tunnel_midpoints._has_data():
                    return True

                if self.tunnel_summary is not None and self.tunnel_summary._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.FrrDatabase']['meta_info']


        class Rewrite(object):
            """
            Table of rewrites
            
            .. attribute:: rewrite_ipv4s
            
            	Table of Rewrites
            	**type**\:   :py:class:`RewriteIpv4S <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S>`
            
            .. attribute:: rewrite_labels
            
            	Table of Rewrites
            	**type**\:   :py:class:`RewriteLabels <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels>`
            
            .. attribute:: rewrite_pws
            
            	Table of Rewrites
            	**type**\:   :py:class:`RewritePws <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws>`
            
            .. attribute:: rewrite_tes
            
            	Table of Traffic Engineering Rewrites
            	**type**\:   :py:class:`RewriteTes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_ipv4s = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S()
                self.rewrite_ipv4s.parent = self
                self.rewrite_labels = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels()
                self.rewrite_labels.parent = self
                self.rewrite_pws = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws()
                self.rewrite_pws.parent = self
                self.rewrite_tes = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes()
                self.rewrite_tes.parent = self


            class RewritePws(object):
                """
                Table of Rewrites
                
                .. attribute:: rewrite_pw
                
                	FPI rewrite for PW List
                	**type**\: list of    :py:class:`RewritePw <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.rewrite_pw = YList()
                    self.rewrite_pw.parent = self
                    self.rewrite_pw.name = 'rewrite_pw'


                class RewritePw(object):
                    """
                    FPI rewrite for PW List
                    
                    .. attribute:: pw_list_id  <key>
                    
                    	PW List ID
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: associated_fpi
                    
                    	Associated FPI
                    	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi>`
                    
                    .. attribute:: bcdl_priority
                    
                    	BCDL Priority
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: fpi_key
                    
                    	fpi key
                    	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey>`
                    
                    .. attribute:: lsd_queue
                    
                    	LSD queue
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: mois
                    
                    	Mois
                    	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois>`
                    
                    .. attribute:: priority_updated
                    
                    	Is rewrite's BCDL priority updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId>`
                    
                    .. attribute:: rewrite_version
                    
                    	Rewrite version
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_age
                    
                    	Rewrite install age
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_time
                    
                    	Rewrite install timestamp
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_updated
                    
                    	Is rewrite ever updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: v4_rpf
                    
                    	IPv4 RPF neighbors
                    	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.V4Rpf>`
                    
                    .. attribute:: v6_rpf
                    
                    	IPv6 RPF neighbors
                    	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.V6Rpf>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.pw_list_id = None
                        self.associated_fpi = YList()
                        self.associated_fpi.parent = self
                        self.associated_fpi.name = 'associated_fpi'
                        self.bcdl_priority = None
                        self.fpi_key = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey()
                        self.fpi_key.parent = self
                        self.lsd_queue = None
                        self.mois = YList()
                        self.mois.parent = self
                        self.mois.name = 'mois'
                        self.priority_updated = None
                        self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId()
                        self.rewrite_id.parent = self
                        self.rewrite_version = None
                        self.rw_install_age = None
                        self.rw_install_time = None
                        self.rw_updated = None
                        self.v4_rpf = YList()
                        self.v4_rpf.parent = self
                        self.v4_rpf.name = 'v4_rpf'
                        self.v6_rpf = YList()
                        self.v6_rpf.parent = self
                        self.v6_rpf.name = 'v6_rpf'


                    class FpiKey(object):
                        """
                        fpi key
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.FpiKey']['meta_info']


                    class RewriteId(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: rewrite_id
                        
                        	Rewrite ID
                        	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_()
                            self.rewrite_id.parent = self


                        class RewriteId_(object):
                            """
                            Rewrite ID
                            
                            .. attribute:: label_context
                            
                            	Label context
                            	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext>`
                            
                            .. attribute:: local_label_rewrite
                            
                            	Local label rewrite information
                            	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite>`
                            
                            .. attribute:: rewrite_id_type
                            
                            	RewriteIDType
                            	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_context = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext()
                                self.label_context.parent = self
                                self.local_label_rewrite = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite()
                                self.local_label_rewrite.parent = self
                                self.rewrite_id_type = None


                            class LabelContext(object):
                                """
                                Label context
                                
                                .. attribute:: cev4l3vpn_data
                                
                                	L3VPN CEv4 label context
                                	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                                
                                .. attribute:: cev6l3vpn_data
                                
                                	L3VPN CEv6 label context
                                	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                                
                                .. attribute:: evpn_data
                                
                                	EVPN context
                                	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData>`
                                
                                .. attribute:: generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                                
                                .. attribute:: ip_sub_data
                                
                                	IP Subscriber context
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	IPv4 label context
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                                
                                .. attribute:: ipv4blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                                
                                .. attribute:: ipv4l3vpn_data
                                
                                	L3VPN IPv4 label context
                                	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                                
                                .. attribute:: ipv6_data
                                
                                	IPv6 label context
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                                
                                .. attribute:: ipv6_generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                                
                                .. attribute:: ipv6blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                                
                                .. attribute:: ipv6l3vpn_data
                                
                                	L3VPN IPv6 label context
                                	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                                
                                .. attribute:: label_block_data
                                
                                	Label block context
                                	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                                
                                .. attribute:: label_block_srgb_data
                                
                                	Label block SRGB context
                                	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                                
                                .. attribute:: label_context_type
                                
                                	LabelContextType
                                	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                                
                                .. attribute:: mld_pv4_data
                                
                                	MLDPv4 LSM\-ID context
                                	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                                
                                .. attribute:: next_hop_set_l3vpn
                                
                                	L3VPN NH SET label context
                                	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                                
                                .. attribute:: pi_mi_pmsi_data
                                
                                	PIM I\-PMSI label conext
                                	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                                
                                .. attribute:: pi_ms_pmsi_data
                                
                                	PIM S\-PMSI label conext
                                	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                                
                                .. attribute:: pseudowire_data
                                
                                	Pseudowire label context
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	Pseudowire Head\-end label context
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                                
                                .. attribute:: sr_adj_segment_ipv4
                                
                                	SR Adj Segment ipv4 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                                
                                .. attribute:: sr_adj_segment_ipv6
                                
                                	SR Adj Segment ipv6 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                                
                                .. attribute:: sr_prefix_segment
                                
                                	SR Prefix Segment context
                                	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                                
                                .. attribute:: te_binding
                                
                                	MPLS TE tunnel binding context
                                	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding>`
                                
                                .. attribute:: tev4_data
                                
                                	TEv4 label context
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                                
                                .. attribute:: tev4p2mp_data
                                
                                	TEv4 P2MP context
                                	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                                
                                .. attribute:: tp_data
                                
                                	TP context
                                	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData>`
                                
                                .. attribute:: vrf_l3vpn_data
                                
                                	L3VPN VRF label context
                                	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.cev4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                    self.cev4l3vpn_data.parent = self
                                    self.cev6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                    self.cev6l3vpn_data.parent = self
                                    self.evpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData()
                                    self.evpn_data.parent = self
                                    self.generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                    self.generic_routing_encapsulation.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv4blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                    self.ipv4blb_data.parent = self
                                    self.ipv4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                    self.ipv4l3vpn_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.ipv6_generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                    self.ipv6_generic_routing_encapsulation.parent = self
                                    self.ipv6blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                    self.ipv6blb_data.parent = self
                                    self.ipv6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                    self.ipv6l3vpn_data.parent = self
                                    self.label_block_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                    self.label_block_data.parent = self
                                    self.label_block_srgb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                    self.label_block_srgb_data.parent = self
                                    self.label_context_type = None
                                    self.mld_pv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                    self.mld_pv4_data.parent = self
                                    self.next_hop_set_l3vpn = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                    self.next_hop_set_l3vpn.parent = self
                                    self.pi_mi_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                    self.pi_mi_pmsi_data.parent = self
                                    self.pi_ms_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                    self.pi_ms_pmsi_data.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.sr_adj_segment_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                    self.sr_adj_segment_ipv4.parent = self
                                    self.sr_adj_segment_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                    self.sr_adj_segment_ipv6.parent = self
                                    self.sr_prefix_segment = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                    self.sr_prefix_segment.parent = self
                                    self.te_binding = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding()
                                    self.te_binding.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                    self.tev4_data.parent = self
                                    self.tev4p2mp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                    self.tev4p2mp_data.parent = self
                                    self.tp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData()
                                    self.tp_data.parent = self
                                    self.vrf_l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                    self.vrf_l3vpn_data.parent = self


                                class Ipv4Data(object):
                                    """
                                    IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IPv4 prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    TEv4 label context
                                    
                                    .. attribute:: is_srte
                                    
                                    	Is this an SRTE head tunnel
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_dest
                                    
                                    	Tunnel destination
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Extended tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.is_srte = None
                                        self.table_id = None
                                        self.tunnel_dest = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.is_srte is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_dest is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                                class Ipv4L3VpnData(object):
                                    """
                                    L3VPN IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                                class Ipv6L3VpnData(object):
                                    """
                                    L3VPN IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                                class VrfL3VpnData(object):
                                    """
                                    L3VPN VRF label context
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                                class Cev4L3VpnData(object):
                                    """
                                    L3VPN CEv4 label context
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv4_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                                class Cev6L3VpnData(object):
                                    """
                                    L3VPN CEv6 label context
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv6_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                                class PseudowireData(object):
                                    """
                                    Pseudowire label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Address prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: pseudowire_id
                                    
                                    	Pseudo\-wire ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: remote_l2_router_id
                                    
                                    	Remote L2 Router ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: subinterface
                                    
                                    	Subinterface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.pseudowire_id = None
                                        self.remote_l2_router_id = None
                                        self.subinterface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.pseudowire_id is not None:
                                            return True

                                        if self.remote_l2_router_id is not None:
                                            return True

                                        if self.subinterface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                                class LabelBlockData(object):
                                    """
                                    Label block context
                                    
                                    .. attribute:: edge_id
                                    
                                    	Edge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: service
                                    
                                    	Service
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vpn_id
                                    
                                    	VPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.edge_id = None
                                        self.offset = None
                                        self.service = None
                                        self.size = None
                                        self.vpn_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.edge_id is not None:
                                            return True

                                        if self.offset is not None:
                                            return True

                                        if self.service is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.vpn_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                                class IpSubData(object):
                                    """
                                    IP Subscriber context
                                    
                                    .. attribute:: parent_interface
                                    
                                    	Parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.parent_interface = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.parent_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                                class Tev4P2MpData(object):
                                    """
                                    TEv4 P2MP context
                                    
                                    .. attribute:: p2mp_id
                                    
                                    	Point to multipoint ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: previous_hop
                                    
                                    	Previous hop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Tunnel ID extension
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.p2mp_id = None
                                        self.previous_hop = None
                                        self.table_id = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.p2mp_id is not None:
                                            return True

                                        if self.previous_hop is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                                class MldPv4Data(object):
                                    """
                                    MLDPv4 LSM\-ID context
                                    
                                    .. attribute:: lsm_id
                                    
                                    	LSM ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: peer_label_space_id
                                    
                                    	Peer Label Space Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: peer_lsrid
                                    
                                    	Peer LSR Id
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: type
                                    
                                    	LSM ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lsm_id = None
                                        self.peer_label_space_id = None
                                        self.peer_lsrid = None
                                        self.table_id = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lsm_id is not None:
                                            return True

                                        if self.peer_label_space_id is not None:
                                            return True

                                        if self.peer_lsrid is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    Pseudowire Head\-end label context
                                    
                                    .. attribute:: pwhe_intf
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.pwhe_intf = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.pwhe_intf is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                                class TpData(object):
                                    """
                                    TP context
                                    
                                    .. attribute:: dest_global_id
                                    
                                    	TP destination global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: dest_node_id
                                    
                                    	TP destination node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: dest_tunnel_id
                                    
                                    	TP destination tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsp_id
                                    
                                    	TP LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: source_global_id
                                    
                                    	TP source global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_node_id
                                    
                                    	TP source node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: source_tunnel_id
                                    
                                    	TP source tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest_global_id = None
                                        self.dest_node_id = None
                                        self.dest_tunnel_id = None
                                        self.lsp_id = None
                                        self.source_global_id = None
                                        self.source_node_id = None
                                        self.source_tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest_global_id is not None:
                                            return True

                                        if self.dest_node_id is not None:
                                            return True

                                        if self.dest_tunnel_id is not None:
                                            return True

                                        if self.lsp_id is not None:
                                            return True

                                        if self.source_global_id is not None:
                                            return True

                                        if self.source_node_id is not None:
                                            return True

                                        if self.source_tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                                class GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: gre_interface
                                    
                                    	Generic routing encapsulation interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.gre_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.gre_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                                class Ipv6GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: greipv6_interface
                                    
                                    	Generic routing encapsulation IPv6 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.greipv6_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.greipv6_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                                class EvpnData(object):
                                    """
                                    EVPN context
                                    
                                    .. attribute:: ethernet_segment
                                    
                                    	Ethernet Segment ID
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: evpn_id
                                    
                                    	EVPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: evpn_tag
                                    
                                    	EVPN TAG
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ethernet_segment = None
                                        self.evpn_id = None
                                        self.evpn_tag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ethernet_segment is not None:
                                            return True

                                        if self.evpn_id is not None:
                                            return True

                                        if self.evpn_tag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                                class Ipv4BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                                class Ipv6BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                                class PiMiPmsiData(object):
                                    """
                                    PIM I\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                                class PiMsPmsiData(object):
                                    """
                                    PIM S\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: hli
                                    
                                    	Head LSM\-ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: seg
                                    
                                    	Segmented Multicast
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: source
                                    
                                    	Originating Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.hli = None
                                        self.seg = None
                                        self.source = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.hli is not None:
                                            return True

                                        if self.seg is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                                class NextHopSetL3Vpn(object):
                                    """
                                    L3VPN NH SET label context
                                    
                                    .. attribute:: next_hop_set_id
                                    
                                    	Next Hop Set ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.next_hop_set_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.next_hop_set_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                                class SrPrefixSegment(object):
                                    """
                                    SR Prefix Segment context
                                    
                                    .. attribute:: segment_id
                                    
                                    	Prefix Segment ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                                class SrAdjSegmentIpv4(object):
                                    """
                                    SR Adj Segment ipv4 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                                class SrAdjSegmentIpv6(object):
                                    """
                                    SR Adj Segment ipv6 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv6 address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                                class LabelBlockSrgbData(object):
                                    """
                                    Label block SRGB context
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: start_label
                                    
                                    	Start Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.offset = None
                                        self.size = None
                                        self.start_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.offset is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.start_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                                class TeBinding(object):
                                    """
                                    MPLS TE tunnel binding context
                                    
                                    .. attribute:: te_identifier
                                    
                                    	MPLS Traffic Engineering Tunnel or Group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: te_type
                                    
                                    	Type of identifier for the binding
                                    	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.te_identifier = None
                                        self.te_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.te_identifier is not None:
                                            return True

                                        if self.te_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                        return True

                                    if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                        return True

                                    if self.evpn_data is not None and self.evpn_data._has_data():
                                        return True

                                    if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                        return True

                                    if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                        return True

                                    if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                        return True

                                    if self.label_block_data is not None and self.label_block_data._has_data():
                                        return True

                                    if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                        return True

                                    if self.label_context_type is not None:
                                        return True

                                    if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                        return True

                                    if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                        return True

                                    if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                        return True

                                    if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                        return True

                                    if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                        return True

                                    if self.te_binding is not None and self.te_binding._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                        return True

                                    if self.tp_data is not None and self.tp_data._has_data():
                                        return True

                                    if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext']['meta_info']


                            class LocalLabelRewrite(object):
                                """
                                Local label rewrite information
                                
                                .. attribute:: label_data
                                
                                	label data
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_data = YLeafList()
                                    self.label_data.parent = self
                                    self.label_data.name = 'label_data'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_data is not None:
                                        for child in self.label_data:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_context is not None and self.label_context._has_data():
                                    return True

                                if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                    return True

                                if self.rewrite_id_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.rewrite_id is not None and self.rewrite_id._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.RewriteId']['meta_info']


                    class AssociatedFpi(object):
                        """
                        Associated FPI
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.AssociatedFpi']['meta_info']


                    class V4Rpf(object):
                        """
                        IPv4 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v4_rpf_neighbor
                        
                        	V4 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v4_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v4_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.V4Rpf']['meta_info']


                    class V6Rpf(object):
                        """
                        IPv6 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v6_rpf_neighbor
                        
                        	V6 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v6_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v6_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.V6Rpf']['meta_info']


                    class Mois(object):
                        """
                        Mois
                        
                        .. attribute:: application_resource
                        
                        	Application state
                        	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource>`
                        
                        .. attribute:: moi_array
                        
                        	moi array
                        	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_resource = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource()
                            self.application_resource.parent = self
                            self.moi_array = YList()
                            self.moi_array.parent = self
                            self.moi_array.name = 'moi_array'


                        class ApplicationResource(object):
                            """
                            Application state
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource']['meta_info']


                        class MoiArray(object):
                            """
                            moi array
                            
                            .. attribute:: moi
                            
                            	Moi
                            	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.moi = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi()
                                self.moi.parent = self


                            class Moi(object):
                                """
                                Moi
                                
                                .. attribute:: dmtc_data
                                
                                	dmtc data
                                	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData>`
                                
                                .. attribute:: ip_sub_data
                                
                                	ip sub data
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	ipv4 data
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data>`
                                
                                .. attribute:: ipv6_data
                                
                                	ipv6 data
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data>`
                                
                                .. attribute:: moi_type
                                
                                	MoiType
                                	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                                
                                .. attribute:: pop_and_lookup_ipv4
                                
                                	pop and lookup ipv4
                                	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                                
                                .. attribute:: pop_and_lookup_ipv6
                                
                                	pop and lookup ipv6
                                	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                                
                                .. attribute:: pop_and_lookup_tp
                                
                                	pop and lookup tp
                                	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp>`
                                
                                .. attribute:: pseudowire_data
                                
                                	pseudowire data
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	pseudowire head end data
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                                
                                .. attribute:: pw_list_data
                                
                                	pw list data
                                	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData>`
                                
                                .. attribute:: stackv4_data
                                
                                	stackv4 data
                                	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data>`
                                
                                .. attribute:: stackv6_data
                                
                                	stackv6 data
                                	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data>`
                                
                                .. attribute:: te_head_data
                                
                                	te head data
                                	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData>`
                                
                                .. attribute:: tev4_data
                                
                                	tev4 data
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData()
                                    self.dmtc_data.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.moi_type = None
                                    self.pop_and_lookup_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                    self.pop_and_lookup_ipv4.parent = self
                                    self.pop_and_lookup_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                    self.pop_and_lookup_ipv6.parent = self
                                    self.pop_and_lookup_tp = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp()
                                    self.pop_and_lookup_tp.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData()
                                    self.pw_list_data.parent = self
                                    self.stackv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data()
                                    self.stackv4_data.parent = self
                                    self.stackv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data()
                                    self.stackv6_data.parent = self
                                    self.te_head_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData()
                                    self.te_head_data.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data()
                                    self.tev4_data.parent = self


                                class PopAndLookupIpv4(object):
                                    """
                                    pop and lookup ipv4
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                                class PopAndLookupTp(object):
                                    """
                                    pop and lookup tp
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                                class PopAndLookupIpv6(object):
                                    """
                                    pop and lookup ipv6
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                                class Ipv4Data(object):
                                    """
                                    ipv4 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    ipv6 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    tev4 data
                                    
                                    .. attribute:: backup_interface
                                    
                                    	Backup interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_ipv4_next_hop
                                    
                                    	Backup IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_local_label
                                    
                                    	Backup local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: data_out_parent_interface
                                    
                                    	Outgoing data parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: merge_point_label
                                    
                                    	Merge point label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_class
                                    
                                    	Tunnel class
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_interface
                                    
                                    	Tunnel interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: tunnel_weight
                                    
                                    	Tunnel weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_interface = None
                                        self.backup_ipv4_next_hop = None
                                        self.backup_local_label = None
                                        self.data_out_parent_interface = None
                                        self.ipv4_next_hop = None
                                        self.merge_point_label = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_class = None
                                        self.tunnel_interface = None
                                        self.tunnel_weight = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_interface is not None:
                                            return True

                                        if self.backup_ipv4_next_hop is not None:
                                            return True

                                        if self.backup_local_label is not None:
                                            return True

                                        if self.data_out_parent_interface is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.merge_point_label is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_class is not None:
                                            return True

                                        if self.tunnel_interface is not None:
                                            return True

                                        if self.tunnel_weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                                class PseudowireData(object):
                                    """
                                    pseudowire data
                                    
                                    .. attribute:: bridge_id
                                    
                                    	Bridge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: cross_connect_id
                                    
                                    	Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pseuodo_wire_connect_id
                                    
                                    	PseudoWire Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: split_horizon_id
                                    
                                    	Split horizon group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bridge_id = None
                                        self.cross_connect_id = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pseuodo_wire_connect_id = None
                                        self.split_horizon_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bridge_id is not None:
                                            return True

                                        if self.cross_connect_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pseuodo_wire_connect_id is not None:
                                            return True

                                        if self.split_horizon_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                                class IpSubData(object):
                                    """
                                    ip sub data
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	VRF table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    pseudowire head end data
                                    
                                    .. attribute:: control_word
                                    
                                    	Is control word present
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: imposition
                                    
                                    	Is PWHE IMposition
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pw_list_id
                                    
                                    	Pseudo\-wire List Identifier
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: pwhe_interface
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: vctype
                                    
                                    	Virtual Circuit Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.control_word = None
                                        self.imposition = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pw_list_id = None
                                        self.pwhe_interface = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.vctype = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.control_word is not None:
                                            return True

                                        if self.imposition is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pw_list_id is not None:
                                            return True

                                        if self.pwhe_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.vctype is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                                class PwListData(object):
                                    """
                                    pw list data
                                    
                                    .. attribute:: l2_interface
                                    
                                    	Pseudo\-wire Layer 2 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: l3_interface
                                    
                                    	Pseudo\-wire Layer 3 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l2_interface = None
                                        self.l3_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l2_interface is not None:
                                            return True

                                        if self.l3_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData']['meta_info']


                                class Stackv4Data(object):
                                    """
                                    stackv4 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                    
                                    .. attribute:: owner_application_type
                                    
                                    	Owner application type
                                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                        self.nexthop.parent = self
                                        self.owner_application_type = None


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv4_next_hop
                                        
                                        	IPv4 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: load_metric
                                        
                                        	Routing path's load metric
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: local_label
                                        
                                        	TE backup path local label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing Interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_interface_parent
                                        
                                        	Outgoing Interface's parent
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv4_next_hop = None
                                            self.load_metric = None
                                            self.local_label = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_interface_parent = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None
                                            self.tunnel_id = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv4_next_hop is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.local_label is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_interface_parent is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        if self.owner_application_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                                class Stackv6Data(object):
                                    """
                                    stackv6 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                        self.nexthop.parent = self


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv6_next_hop
                                        
                                        	IPv6 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv6_next_hop = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv6_next_hop is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                                class TeHeadData(object):
                                    """
                                    te head data
                                    
                                    .. attribute:: flags_decode
                                    
                                    	Flags decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_fwd_class
                                    
                                    	Tunnel forwarding class
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: tunnel_load_metric
                                    
                                    	Tunnel Load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label
                                    
                                    	Tunnel local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label_str
                                    
                                    	Tunnel local label stringified
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_fwd_class = None
                                        self.tunnel_load_metric = None
                                        self.tunnel_local_label = None
                                        self.tunnel_local_label_str = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_fwd_class is not None:
                                            return True

                                        if self.tunnel_load_metric is not None:
                                            return True

                                        if self.tunnel_local_label is not None:
                                            return True

                                        if self.tunnel_local_label_str is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                                class DmtcData(object):
                                    """
                                    dmtc data
                                    
                                    .. attribute:: dmtc_ext_ifh
                                    
                                    	DMTC External Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dmtc_ext_ifh = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dmtc_ext_ifh is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_data is not None and self.dmtc_data._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.moi_type is not None:
                                        return True

                                    if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                        return True

                                    if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                        return True

                                    if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.pw_list_data is not None and self.pw_list_data._has_data():
                                        return True

                                    if self.stackv4_data is not None and self.stackv4_data._has_data():
                                        return True

                                    if self.stackv6_data is not None and self.stackv6_data._has_data():
                                        return True

                                    if self.te_head_data is not None and self.te_head_data._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.moi is not None and self.moi._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois.MoiArray']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_resource is not None and self.application_resource._has_data():
                                return True

                            if self.moi_array is not None:
                                for child_ref in self.moi_array:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw.Mois']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.pw_list_id is None:
                            raise YPYModelError('Key property pw_list_id is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-pw[Cisco-IOS-XR-mpls-lsd-oper:pw-list-id = ' + str(self.pw_list_id) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.pw_list_id is not None:
                            return True

                        if self.associated_fpi is not None:
                            for child_ref in self.associated_fpi:
                                if child_ref._has_data():
                                    return True

                        if self.bcdl_priority is not None:
                            return True

                        if self.fpi_key is not None and self.fpi_key._has_data():
                            return True

                        if self.lsd_queue is not None:
                            return True

                        if self.mois is not None:
                            for child_ref in self.mois:
                                if child_ref._has_data():
                                    return True

                        if self.priority_updated is not None:
                            return True

                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        if self.rewrite_version is not None:
                            return True

                        if self.rw_install_age is not None:
                            return True

                        if self.rw_install_time is not None:
                            return True

                        if self.rw_updated is not None:
                            return True

                        if self.v4_rpf is not None:
                            for child_ref in self.v4_rpf:
                                if child_ref._has_data():
                                    return True

                        if self.v6_rpf is not None:
                            for child_ref in self.v6_rpf:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws.RewritePw']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-pws'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.rewrite_pw is not None:
                        for child_ref in self.rewrite_pw:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewritePws']['meta_info']


            class RewriteIpv4S(object):
                """
                Table of Rewrites
                
                .. attribute:: rewrite_ipv4
                
                	FPI rewrite for label
                	**type**\: list of    :py:class:`RewriteIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.rewrite_ipv4 = YList()
                    self.rewrite_ipv4.parent = self
                    self.rewrite_ipv4.name = 'rewrite_ipv4'


                class RewriteIpv4(object):
                    """
                    FPI rewrite for label
                    
                    .. attribute:: associated_fpi
                    
                    	Associated FPI
                    	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi>`
                    
                    .. attribute:: bcdl_priority
                    
                    	BCDL Priority
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: fpi_key
                    
                    	fpi key
                    	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey>`
                    
                    .. attribute:: lsd_queue
                    
                    	LSD queue
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: mois
                    
                    	Mois
                    	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois>`
                    
                    .. attribute:: prefix
                    
                    	IPv4 Prefix
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: priority_updated
                    
                    	Is rewrite's BCDL priority updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId>`
                    
                    .. attribute:: rewrite_version
                    
                    	Rewrite version
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rsi_table_id
                    
                    	RSI table ID
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{1,8}
                    
                    .. attribute:: rsi_table_name
                    
                    	RSI table name
                    	**type**\:  str
                    
                    	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                    
                    .. attribute:: rw_install_age
                    
                    	Rewrite install age
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_time
                    
                    	Rewrite install timestamp
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_updated
                    
                    	Is rewrite ever updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: v4_rpf
                    
                    	IPv4 RPF neighbors
                    	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.V4Rpf>`
                    
                    .. attribute:: v6_rpf
                    
                    	IPv6 RPF neighbors
                    	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.V6Rpf>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.associated_fpi = YList()
                        self.associated_fpi.parent = self
                        self.associated_fpi.name = 'associated_fpi'
                        self.bcdl_priority = None
                        self.fpi_key = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey()
                        self.fpi_key.parent = self
                        self.lsd_queue = None
                        self.mois = YList()
                        self.mois.parent = self
                        self.mois.name = 'mois'
                        self.prefix = None
                        self.prefix_length = None
                        self.priority_updated = None
                        self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId()
                        self.rewrite_id.parent = self
                        self.rewrite_version = None
                        self.rsi_table_id = None
                        self.rsi_table_name = None
                        self.rw_install_age = None
                        self.rw_install_time = None
                        self.rw_updated = None
                        self.v4_rpf = YList()
                        self.v4_rpf.parent = self
                        self.v4_rpf.name = 'v4_rpf'
                        self.v6_rpf = YList()
                        self.v6_rpf.parent = self
                        self.v6_rpf.name = 'v6_rpf'


                    class FpiKey(object):
                        """
                        fpi key
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey']['meta_info']


                    class RewriteId(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: rewrite_id
                        
                        	Rewrite ID
                        	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_()
                            self.rewrite_id.parent = self


                        class RewriteId_(object):
                            """
                            Rewrite ID
                            
                            .. attribute:: label_context
                            
                            	Label context
                            	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext>`
                            
                            .. attribute:: local_label_rewrite
                            
                            	Local label rewrite information
                            	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite>`
                            
                            .. attribute:: rewrite_id_type
                            
                            	RewriteIDType
                            	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_context = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext()
                                self.label_context.parent = self
                                self.local_label_rewrite = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite()
                                self.local_label_rewrite.parent = self
                                self.rewrite_id_type = None


                            class LabelContext(object):
                                """
                                Label context
                                
                                .. attribute:: cev4l3vpn_data
                                
                                	L3VPN CEv4 label context
                                	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                                
                                .. attribute:: cev6l3vpn_data
                                
                                	L3VPN CEv6 label context
                                	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                                
                                .. attribute:: evpn_data
                                
                                	EVPN context
                                	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData>`
                                
                                .. attribute:: generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                                
                                .. attribute:: ip_sub_data
                                
                                	IP Subscriber context
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	IPv4 label context
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                                
                                .. attribute:: ipv4blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                                
                                .. attribute:: ipv4l3vpn_data
                                
                                	L3VPN IPv4 label context
                                	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                                
                                .. attribute:: ipv6_data
                                
                                	IPv6 label context
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                                
                                .. attribute:: ipv6_generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                                
                                .. attribute:: ipv6blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                                
                                .. attribute:: ipv6l3vpn_data
                                
                                	L3VPN IPv6 label context
                                	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                                
                                .. attribute:: label_block_data
                                
                                	Label block context
                                	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                                
                                .. attribute:: label_block_srgb_data
                                
                                	Label block SRGB context
                                	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                                
                                .. attribute:: label_context_type
                                
                                	LabelContextType
                                	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                                
                                .. attribute:: mld_pv4_data
                                
                                	MLDPv4 LSM\-ID context
                                	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                                
                                .. attribute:: next_hop_set_l3vpn
                                
                                	L3VPN NH SET label context
                                	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                                
                                .. attribute:: pi_mi_pmsi_data
                                
                                	PIM I\-PMSI label conext
                                	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                                
                                .. attribute:: pi_ms_pmsi_data
                                
                                	PIM S\-PMSI label conext
                                	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                                
                                .. attribute:: pseudowire_data
                                
                                	Pseudowire label context
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	Pseudowire Head\-end label context
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                                
                                .. attribute:: sr_adj_segment_ipv4
                                
                                	SR Adj Segment ipv4 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                                
                                .. attribute:: sr_adj_segment_ipv6
                                
                                	SR Adj Segment ipv6 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                                
                                .. attribute:: sr_prefix_segment
                                
                                	SR Prefix Segment context
                                	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                                
                                .. attribute:: te_binding
                                
                                	MPLS TE tunnel binding context
                                	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding>`
                                
                                .. attribute:: tev4_data
                                
                                	TEv4 label context
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                                
                                .. attribute:: tev4p2mp_data
                                
                                	TEv4 P2MP context
                                	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                                
                                .. attribute:: tp_data
                                
                                	TP context
                                	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData>`
                                
                                .. attribute:: vrf_l3vpn_data
                                
                                	L3VPN VRF label context
                                	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.cev4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                    self.cev4l3vpn_data.parent = self
                                    self.cev6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                    self.cev6l3vpn_data.parent = self
                                    self.evpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData()
                                    self.evpn_data.parent = self
                                    self.generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                    self.generic_routing_encapsulation.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv4blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                    self.ipv4blb_data.parent = self
                                    self.ipv4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                    self.ipv4l3vpn_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.ipv6_generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                    self.ipv6_generic_routing_encapsulation.parent = self
                                    self.ipv6blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                    self.ipv6blb_data.parent = self
                                    self.ipv6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                    self.ipv6l3vpn_data.parent = self
                                    self.label_block_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                    self.label_block_data.parent = self
                                    self.label_block_srgb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                    self.label_block_srgb_data.parent = self
                                    self.label_context_type = None
                                    self.mld_pv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                    self.mld_pv4_data.parent = self
                                    self.next_hop_set_l3vpn = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                    self.next_hop_set_l3vpn.parent = self
                                    self.pi_mi_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                    self.pi_mi_pmsi_data.parent = self
                                    self.pi_ms_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                    self.pi_ms_pmsi_data.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.sr_adj_segment_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                    self.sr_adj_segment_ipv4.parent = self
                                    self.sr_adj_segment_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                    self.sr_adj_segment_ipv6.parent = self
                                    self.sr_prefix_segment = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                    self.sr_prefix_segment.parent = self
                                    self.te_binding = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding()
                                    self.te_binding.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                    self.tev4_data.parent = self
                                    self.tev4p2mp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                    self.tev4p2mp_data.parent = self
                                    self.tp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData()
                                    self.tp_data.parent = self
                                    self.vrf_l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                    self.vrf_l3vpn_data.parent = self


                                class Ipv4Data(object):
                                    """
                                    IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IPv4 prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    TEv4 label context
                                    
                                    .. attribute:: is_srte
                                    
                                    	Is this an SRTE head tunnel
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_dest
                                    
                                    	Tunnel destination
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Extended tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.is_srte = None
                                        self.table_id = None
                                        self.tunnel_dest = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.is_srte is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_dest is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                                class Ipv4L3VpnData(object):
                                    """
                                    L3VPN IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                                class Ipv6L3VpnData(object):
                                    """
                                    L3VPN IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                                class VrfL3VpnData(object):
                                    """
                                    L3VPN VRF label context
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                                class Cev4L3VpnData(object):
                                    """
                                    L3VPN CEv4 label context
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv4_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                                class Cev6L3VpnData(object):
                                    """
                                    L3VPN CEv6 label context
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv6_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                                class PseudowireData(object):
                                    """
                                    Pseudowire label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Address prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: pseudowire_id
                                    
                                    	Pseudo\-wire ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: remote_l2_router_id
                                    
                                    	Remote L2 Router ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: subinterface
                                    
                                    	Subinterface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.pseudowire_id = None
                                        self.remote_l2_router_id = None
                                        self.subinterface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.pseudowire_id is not None:
                                            return True

                                        if self.remote_l2_router_id is not None:
                                            return True

                                        if self.subinterface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                                class LabelBlockData(object):
                                    """
                                    Label block context
                                    
                                    .. attribute:: edge_id
                                    
                                    	Edge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: service
                                    
                                    	Service
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vpn_id
                                    
                                    	VPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.edge_id = None
                                        self.offset = None
                                        self.service = None
                                        self.size = None
                                        self.vpn_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.edge_id is not None:
                                            return True

                                        if self.offset is not None:
                                            return True

                                        if self.service is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.vpn_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                                class IpSubData(object):
                                    """
                                    IP Subscriber context
                                    
                                    .. attribute:: parent_interface
                                    
                                    	Parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.parent_interface = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.parent_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                                class Tev4P2MpData(object):
                                    """
                                    TEv4 P2MP context
                                    
                                    .. attribute:: p2mp_id
                                    
                                    	Point to multipoint ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: previous_hop
                                    
                                    	Previous hop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Tunnel ID extension
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.p2mp_id = None
                                        self.previous_hop = None
                                        self.table_id = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.p2mp_id is not None:
                                            return True

                                        if self.previous_hop is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                                class MldPv4Data(object):
                                    """
                                    MLDPv4 LSM\-ID context
                                    
                                    .. attribute:: lsm_id
                                    
                                    	LSM ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: peer_label_space_id
                                    
                                    	Peer Label Space Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: peer_lsrid
                                    
                                    	Peer LSR Id
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: type
                                    
                                    	LSM ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lsm_id = None
                                        self.peer_label_space_id = None
                                        self.peer_lsrid = None
                                        self.table_id = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lsm_id is not None:
                                            return True

                                        if self.peer_label_space_id is not None:
                                            return True

                                        if self.peer_lsrid is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    Pseudowire Head\-end label context
                                    
                                    .. attribute:: pwhe_intf
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.pwhe_intf = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.pwhe_intf is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                                class TpData(object):
                                    """
                                    TP context
                                    
                                    .. attribute:: dest_global_id
                                    
                                    	TP destination global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: dest_node_id
                                    
                                    	TP destination node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: dest_tunnel_id
                                    
                                    	TP destination tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsp_id
                                    
                                    	TP LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: source_global_id
                                    
                                    	TP source global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_node_id
                                    
                                    	TP source node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: source_tunnel_id
                                    
                                    	TP source tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest_global_id = None
                                        self.dest_node_id = None
                                        self.dest_tunnel_id = None
                                        self.lsp_id = None
                                        self.source_global_id = None
                                        self.source_node_id = None
                                        self.source_tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest_global_id is not None:
                                            return True

                                        if self.dest_node_id is not None:
                                            return True

                                        if self.dest_tunnel_id is not None:
                                            return True

                                        if self.lsp_id is not None:
                                            return True

                                        if self.source_global_id is not None:
                                            return True

                                        if self.source_node_id is not None:
                                            return True

                                        if self.source_tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                                class GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: gre_interface
                                    
                                    	Generic routing encapsulation interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.gre_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.gre_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                                class Ipv6GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: greipv6_interface
                                    
                                    	Generic routing encapsulation IPv6 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.greipv6_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.greipv6_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                                class EvpnData(object):
                                    """
                                    EVPN context
                                    
                                    .. attribute:: ethernet_segment
                                    
                                    	Ethernet Segment ID
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: evpn_id
                                    
                                    	EVPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: evpn_tag
                                    
                                    	EVPN TAG
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ethernet_segment = None
                                        self.evpn_id = None
                                        self.evpn_tag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ethernet_segment is not None:
                                            return True

                                        if self.evpn_id is not None:
                                            return True

                                        if self.evpn_tag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                                class Ipv4BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                                class Ipv6BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                                class PiMiPmsiData(object):
                                    """
                                    PIM I\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                                class PiMsPmsiData(object):
                                    """
                                    PIM S\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: hli
                                    
                                    	Head LSM\-ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: seg
                                    
                                    	Segmented Multicast
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: source
                                    
                                    	Originating Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.hli = None
                                        self.seg = None
                                        self.source = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.hli is not None:
                                            return True

                                        if self.seg is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                                class NextHopSetL3Vpn(object):
                                    """
                                    L3VPN NH SET label context
                                    
                                    .. attribute:: next_hop_set_id
                                    
                                    	Next Hop Set ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.next_hop_set_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.next_hop_set_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                                class SrPrefixSegment(object):
                                    """
                                    SR Prefix Segment context
                                    
                                    .. attribute:: segment_id
                                    
                                    	Prefix Segment ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                                class SrAdjSegmentIpv4(object):
                                    """
                                    SR Adj Segment ipv4 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                                class SrAdjSegmentIpv6(object):
                                    """
                                    SR Adj Segment ipv6 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv6 address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                                class LabelBlockSrgbData(object):
                                    """
                                    Label block SRGB context
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: start_label
                                    
                                    	Start Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.offset = None
                                        self.size = None
                                        self.start_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.offset is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.start_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                                class TeBinding(object):
                                    """
                                    MPLS TE tunnel binding context
                                    
                                    .. attribute:: te_identifier
                                    
                                    	MPLS Traffic Engineering Tunnel or Group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: te_type
                                    
                                    	Type of identifier for the binding
                                    	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.te_identifier = None
                                        self.te_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.te_identifier is not None:
                                            return True

                                        if self.te_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                        return True

                                    if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                        return True

                                    if self.evpn_data is not None and self.evpn_data._has_data():
                                        return True

                                    if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                        return True

                                    if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                        return True

                                    if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                        return True

                                    if self.label_block_data is not None and self.label_block_data._has_data():
                                        return True

                                    if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                        return True

                                    if self.label_context_type is not None:
                                        return True

                                    if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                        return True

                                    if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                        return True

                                    if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                        return True

                                    if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                        return True

                                    if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                        return True

                                    if self.te_binding is not None and self.te_binding._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                        return True

                                    if self.tp_data is not None and self.tp_data._has_data():
                                        return True

                                    if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext']['meta_info']


                            class LocalLabelRewrite(object):
                                """
                                Local label rewrite information
                                
                                .. attribute:: label_data
                                
                                	label data
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_data = YLeafList()
                                    self.label_data.parent = self
                                    self.label_data.name = 'label_data'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_data is not None:
                                        for child in self.label_data:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_context is not None and self.label_context._has_data():
                                    return True

                                if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                    return True

                                if self.rewrite_id_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.rewrite_id is not None and self.rewrite_id._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId']['meta_info']


                    class AssociatedFpi(object):
                        """
                        Associated FPI
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi']['meta_info']


                    class V4Rpf(object):
                        """
                        IPv4 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v4_rpf_neighbor
                        
                        	V4 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v4_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v4_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.V4Rpf']['meta_info']


                    class V6Rpf(object):
                        """
                        IPv6 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v6_rpf_neighbor
                        
                        	V6 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v6_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v6_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.V6Rpf']['meta_info']


                    class Mois(object):
                        """
                        Mois
                        
                        .. attribute:: application_resource
                        
                        	Application state
                        	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource>`
                        
                        .. attribute:: moi_array
                        
                        	moi array
                        	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_resource = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource()
                            self.application_resource.parent = self
                            self.moi_array = YList()
                            self.moi_array.parent = self
                            self.moi_array.name = 'moi_array'


                        class ApplicationResource(object):
                            """
                            Application state
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource']['meta_info']


                        class MoiArray(object):
                            """
                            moi array
                            
                            .. attribute:: moi
                            
                            	Moi
                            	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.moi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi()
                                self.moi.parent = self


                            class Moi(object):
                                """
                                Moi
                                
                                .. attribute:: dmtc_data
                                
                                	dmtc data
                                	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData>`
                                
                                .. attribute:: ip_sub_data
                                
                                	ip sub data
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	ipv4 data
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data>`
                                
                                .. attribute:: ipv6_data
                                
                                	ipv6 data
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data>`
                                
                                .. attribute:: moi_type
                                
                                	MoiType
                                	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                                
                                .. attribute:: pop_and_lookup_ipv4
                                
                                	pop and lookup ipv4
                                	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                                
                                .. attribute:: pop_and_lookup_ipv6
                                
                                	pop and lookup ipv6
                                	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                                
                                .. attribute:: pop_and_lookup_tp
                                
                                	pop and lookup tp
                                	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp>`
                                
                                .. attribute:: pseudowire_data
                                
                                	pseudowire data
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	pseudowire head end data
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                                
                                .. attribute:: pw_list_data
                                
                                	pw list data
                                	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData>`
                                
                                .. attribute:: stackv4_data
                                
                                	stackv4 data
                                	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data>`
                                
                                .. attribute:: stackv6_data
                                
                                	stackv6 data
                                	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data>`
                                
                                .. attribute:: te_head_data
                                
                                	te head data
                                	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData>`
                                
                                .. attribute:: tev4_data
                                
                                	tev4 data
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData()
                                    self.dmtc_data.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.moi_type = None
                                    self.pop_and_lookup_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                    self.pop_and_lookup_ipv4.parent = self
                                    self.pop_and_lookup_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                    self.pop_and_lookup_ipv6.parent = self
                                    self.pop_and_lookup_tp = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp()
                                    self.pop_and_lookup_tp.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData()
                                    self.pw_list_data.parent = self
                                    self.stackv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data()
                                    self.stackv4_data.parent = self
                                    self.stackv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data()
                                    self.stackv6_data.parent = self
                                    self.te_head_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData()
                                    self.te_head_data.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data()
                                    self.tev4_data.parent = self


                                class PopAndLookupIpv4(object):
                                    """
                                    pop and lookup ipv4
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                                class PopAndLookupTp(object):
                                    """
                                    pop and lookup tp
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                                class PopAndLookupIpv6(object):
                                    """
                                    pop and lookup ipv6
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                                class Ipv4Data(object):
                                    """
                                    ipv4 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    ipv6 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    tev4 data
                                    
                                    .. attribute:: backup_interface
                                    
                                    	Backup interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_ipv4_next_hop
                                    
                                    	Backup IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_local_label
                                    
                                    	Backup local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: data_out_parent_interface
                                    
                                    	Outgoing data parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: merge_point_label
                                    
                                    	Merge point label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_class
                                    
                                    	Tunnel class
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_interface
                                    
                                    	Tunnel interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: tunnel_weight
                                    
                                    	Tunnel weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_interface = None
                                        self.backup_ipv4_next_hop = None
                                        self.backup_local_label = None
                                        self.data_out_parent_interface = None
                                        self.ipv4_next_hop = None
                                        self.merge_point_label = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_class = None
                                        self.tunnel_interface = None
                                        self.tunnel_weight = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_interface is not None:
                                            return True

                                        if self.backup_ipv4_next_hop is not None:
                                            return True

                                        if self.backup_local_label is not None:
                                            return True

                                        if self.data_out_parent_interface is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.merge_point_label is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_class is not None:
                                            return True

                                        if self.tunnel_interface is not None:
                                            return True

                                        if self.tunnel_weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                                class PseudowireData(object):
                                    """
                                    pseudowire data
                                    
                                    .. attribute:: bridge_id
                                    
                                    	Bridge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: cross_connect_id
                                    
                                    	Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pseuodo_wire_connect_id
                                    
                                    	PseudoWire Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: split_horizon_id
                                    
                                    	Split horizon group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bridge_id = None
                                        self.cross_connect_id = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pseuodo_wire_connect_id = None
                                        self.split_horizon_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bridge_id is not None:
                                            return True

                                        if self.cross_connect_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pseuodo_wire_connect_id is not None:
                                            return True

                                        if self.split_horizon_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                                class IpSubData(object):
                                    """
                                    ip sub data
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	VRF table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    pseudowire head end data
                                    
                                    .. attribute:: control_word
                                    
                                    	Is control word present
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: imposition
                                    
                                    	Is PWHE IMposition
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pw_list_id
                                    
                                    	Pseudo\-wire List Identifier
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: pwhe_interface
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: vctype
                                    
                                    	Virtual Circuit Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.control_word = None
                                        self.imposition = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pw_list_id = None
                                        self.pwhe_interface = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.vctype = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.control_word is not None:
                                            return True

                                        if self.imposition is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pw_list_id is not None:
                                            return True

                                        if self.pwhe_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.vctype is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                                class PwListData(object):
                                    """
                                    pw list data
                                    
                                    .. attribute:: l2_interface
                                    
                                    	Pseudo\-wire Layer 2 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: l3_interface
                                    
                                    	Pseudo\-wire Layer 3 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l2_interface = None
                                        self.l3_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l2_interface is not None:
                                            return True

                                        if self.l3_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData']['meta_info']


                                class Stackv4Data(object):
                                    """
                                    stackv4 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                    
                                    .. attribute:: owner_application_type
                                    
                                    	Owner application type
                                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                        self.nexthop.parent = self
                                        self.owner_application_type = None


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv4_next_hop
                                        
                                        	IPv4 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: load_metric
                                        
                                        	Routing path's load metric
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: local_label
                                        
                                        	TE backup path local label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing Interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_interface_parent
                                        
                                        	Outgoing Interface's parent
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv4_next_hop = None
                                            self.load_metric = None
                                            self.local_label = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_interface_parent = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None
                                            self.tunnel_id = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv4_next_hop is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.local_label is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_interface_parent is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        if self.owner_application_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                                class Stackv6Data(object):
                                    """
                                    stackv6 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                        self.nexthop.parent = self


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv6_next_hop
                                        
                                        	IPv6 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv6_next_hop = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv6_next_hop is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                                class TeHeadData(object):
                                    """
                                    te head data
                                    
                                    .. attribute:: flags_decode
                                    
                                    	Flags decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_fwd_class
                                    
                                    	Tunnel forwarding class
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: tunnel_load_metric
                                    
                                    	Tunnel Load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label
                                    
                                    	Tunnel local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label_str
                                    
                                    	Tunnel local label stringified
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_fwd_class = None
                                        self.tunnel_load_metric = None
                                        self.tunnel_local_label = None
                                        self.tunnel_local_label_str = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_fwd_class is not None:
                                            return True

                                        if self.tunnel_load_metric is not None:
                                            return True

                                        if self.tunnel_local_label is not None:
                                            return True

                                        if self.tunnel_local_label_str is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                                class DmtcData(object):
                                    """
                                    dmtc data
                                    
                                    .. attribute:: dmtc_ext_ifh
                                    
                                    	DMTC External Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dmtc_ext_ifh = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dmtc_ext_ifh is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_data is not None and self.dmtc_data._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.moi_type is not None:
                                        return True

                                    if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                        return True

                                    if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                        return True

                                    if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.pw_list_data is not None and self.pw_list_data._has_data():
                                        return True

                                    if self.stackv4_data is not None and self.stackv4_data._has_data():
                                        return True

                                    if self.stackv6_data is not None and self.stackv6_data._has_data():
                                        return True

                                    if self.te_head_data is not None and self.te_head_data._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.moi is not None and self.moi._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_resource is not None and self.application_resource._has_data():
                                return True

                            if self.moi_array is not None:
                                for child_ref in self.moi_array:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4.Mois']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.associated_fpi is not None:
                            for child_ref in self.associated_fpi:
                                if child_ref._has_data():
                                    return True

                        if self.bcdl_priority is not None:
                            return True

                        if self.fpi_key is not None and self.fpi_key._has_data():
                            return True

                        if self.lsd_queue is not None:
                            return True

                        if self.mois is not None:
                            for child_ref in self.mois:
                                if child_ref._has_data():
                                    return True

                        if self.prefix is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.priority_updated is not None:
                            return True

                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        if self.rewrite_version is not None:
                            return True

                        if self.rsi_table_id is not None:
                            return True

                        if self.rsi_table_name is not None:
                            return True

                        if self.rw_install_age is not None:
                            return True

                        if self.rw_install_time is not None:
                            return True

                        if self.rw_updated is not None:
                            return True

                        if self.v4_rpf is not None:
                            for child_ref in self.v4_rpf:
                                if child_ref._has_data():
                                    return True

                        if self.v6_rpf is not None:
                            for child_ref in self.v6_rpf:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S.RewriteIpv4']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.rewrite_ipv4 is not None:
                        for child_ref in self.rewrite_ipv4:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteIpv4S']['meta_info']


            class RewriteTes(object):
                """
                Table of Traffic Engineering Rewrites
                
                .. attribute:: rewrite_te
                
                	FPI rewrite for TE
                	**type**\: list of    :py:class:`RewriteTe <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.rewrite_te = YList()
                    self.rewrite_te.parent = self
                    self.rewrite_te.name = 'rewrite_te'


                class RewriteTe(object):
                    """
                    FPI rewrite for TE
                    
                    .. attribute:: interface_name  <key>
                    
                    	Tunnel interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: associated_fpi
                    
                    	Associated FPI
                    	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi>`
                    
                    .. attribute:: bcdl_priority
                    
                    	BCDL Priority
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: fpi_key
                    
                    	fpi key
                    	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey>`
                    
                    .. attribute:: lsd_queue
                    
                    	LSD queue
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: mois
                    
                    	Mois
                    	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois>`
                    
                    .. attribute:: priority_updated
                    
                    	Is rewrite's BCDL priority updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId>`
                    
                    .. attribute:: rewrite_version
                    
                    	Rewrite version
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_age
                    
                    	Rewrite install age
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_time
                    
                    	Rewrite install timestamp
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_updated
                    
                    	Is rewrite ever updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: v4_rpf
                    
                    	IPv4 RPF neighbors
                    	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.V4Rpf>`
                    
                    .. attribute:: v6_rpf
                    
                    	IPv6 RPF neighbors
                    	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.V6Rpf>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.associated_fpi = YList()
                        self.associated_fpi.parent = self
                        self.associated_fpi.name = 'associated_fpi'
                        self.bcdl_priority = None
                        self.fpi_key = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey()
                        self.fpi_key.parent = self
                        self.lsd_queue = None
                        self.mois = YList()
                        self.mois.parent = self
                        self.mois.name = 'mois'
                        self.priority_updated = None
                        self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId()
                        self.rewrite_id.parent = self
                        self.rewrite_version = None
                        self.rw_install_age = None
                        self.rw_install_time = None
                        self.rw_updated = None
                        self.v4_rpf = YList()
                        self.v4_rpf.parent = self
                        self.v4_rpf.name = 'v4_rpf'
                        self.v6_rpf = YList()
                        self.v6_rpf.parent = self
                        self.v6_rpf.name = 'v6_rpf'


                    class FpiKey(object):
                        """
                        fpi key
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.FpiKey']['meta_info']


                    class RewriteId(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: rewrite_id
                        
                        	Rewrite ID
                        	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_()
                            self.rewrite_id.parent = self


                        class RewriteId_(object):
                            """
                            Rewrite ID
                            
                            .. attribute:: label_context
                            
                            	Label context
                            	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext>`
                            
                            .. attribute:: local_label_rewrite
                            
                            	Local label rewrite information
                            	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite>`
                            
                            .. attribute:: rewrite_id_type
                            
                            	RewriteIDType
                            	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_context = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext()
                                self.label_context.parent = self
                                self.local_label_rewrite = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite()
                                self.local_label_rewrite.parent = self
                                self.rewrite_id_type = None


                            class LabelContext(object):
                                """
                                Label context
                                
                                .. attribute:: cev4l3vpn_data
                                
                                	L3VPN CEv4 label context
                                	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                                
                                .. attribute:: cev6l3vpn_data
                                
                                	L3VPN CEv6 label context
                                	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                                
                                .. attribute:: evpn_data
                                
                                	EVPN context
                                	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData>`
                                
                                .. attribute:: generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                                
                                .. attribute:: ip_sub_data
                                
                                	IP Subscriber context
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	IPv4 label context
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                                
                                .. attribute:: ipv4blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                                
                                .. attribute:: ipv4l3vpn_data
                                
                                	L3VPN IPv4 label context
                                	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                                
                                .. attribute:: ipv6_data
                                
                                	IPv6 label context
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                                
                                .. attribute:: ipv6_generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                                
                                .. attribute:: ipv6blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                                
                                .. attribute:: ipv6l3vpn_data
                                
                                	L3VPN IPv6 label context
                                	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                                
                                .. attribute:: label_block_data
                                
                                	Label block context
                                	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                                
                                .. attribute:: label_block_srgb_data
                                
                                	Label block SRGB context
                                	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                                
                                .. attribute:: label_context_type
                                
                                	LabelContextType
                                	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                                
                                .. attribute:: mld_pv4_data
                                
                                	MLDPv4 LSM\-ID context
                                	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                                
                                .. attribute:: next_hop_set_l3vpn
                                
                                	L3VPN NH SET label context
                                	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                                
                                .. attribute:: pi_mi_pmsi_data
                                
                                	PIM I\-PMSI label conext
                                	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                                
                                .. attribute:: pi_ms_pmsi_data
                                
                                	PIM S\-PMSI label conext
                                	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                                
                                .. attribute:: pseudowire_data
                                
                                	Pseudowire label context
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	Pseudowire Head\-end label context
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                                
                                .. attribute:: sr_adj_segment_ipv4
                                
                                	SR Adj Segment ipv4 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                                
                                .. attribute:: sr_adj_segment_ipv6
                                
                                	SR Adj Segment ipv6 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                                
                                .. attribute:: sr_prefix_segment
                                
                                	SR Prefix Segment context
                                	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                                
                                .. attribute:: te_binding
                                
                                	MPLS TE tunnel binding context
                                	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding>`
                                
                                .. attribute:: tev4_data
                                
                                	TEv4 label context
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                                
                                .. attribute:: tev4p2mp_data
                                
                                	TEv4 P2MP context
                                	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                                
                                .. attribute:: tp_data
                                
                                	TP context
                                	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData>`
                                
                                .. attribute:: vrf_l3vpn_data
                                
                                	L3VPN VRF label context
                                	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.cev4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                    self.cev4l3vpn_data.parent = self
                                    self.cev6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                    self.cev6l3vpn_data.parent = self
                                    self.evpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData()
                                    self.evpn_data.parent = self
                                    self.generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                    self.generic_routing_encapsulation.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv4blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                    self.ipv4blb_data.parent = self
                                    self.ipv4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                    self.ipv4l3vpn_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.ipv6_generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                    self.ipv6_generic_routing_encapsulation.parent = self
                                    self.ipv6blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                    self.ipv6blb_data.parent = self
                                    self.ipv6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                    self.ipv6l3vpn_data.parent = self
                                    self.label_block_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                    self.label_block_data.parent = self
                                    self.label_block_srgb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                    self.label_block_srgb_data.parent = self
                                    self.label_context_type = None
                                    self.mld_pv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                    self.mld_pv4_data.parent = self
                                    self.next_hop_set_l3vpn = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                    self.next_hop_set_l3vpn.parent = self
                                    self.pi_mi_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                    self.pi_mi_pmsi_data.parent = self
                                    self.pi_ms_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                    self.pi_ms_pmsi_data.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.sr_adj_segment_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                    self.sr_adj_segment_ipv4.parent = self
                                    self.sr_adj_segment_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                    self.sr_adj_segment_ipv6.parent = self
                                    self.sr_prefix_segment = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                    self.sr_prefix_segment.parent = self
                                    self.te_binding = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding()
                                    self.te_binding.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                    self.tev4_data.parent = self
                                    self.tev4p2mp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                    self.tev4p2mp_data.parent = self
                                    self.tp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData()
                                    self.tp_data.parent = self
                                    self.vrf_l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                    self.vrf_l3vpn_data.parent = self


                                class Ipv4Data(object):
                                    """
                                    IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IPv4 prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    TEv4 label context
                                    
                                    .. attribute:: is_srte
                                    
                                    	Is this an SRTE head tunnel
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_dest
                                    
                                    	Tunnel destination
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Extended tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.is_srte = None
                                        self.table_id = None
                                        self.tunnel_dest = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.is_srte is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_dest is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                                class Ipv4L3VpnData(object):
                                    """
                                    L3VPN IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                                class Ipv6L3VpnData(object):
                                    """
                                    L3VPN IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                                class VrfL3VpnData(object):
                                    """
                                    L3VPN VRF label context
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                                class Cev4L3VpnData(object):
                                    """
                                    L3VPN CEv4 label context
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv4_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                                class Cev6L3VpnData(object):
                                    """
                                    L3VPN CEv6 label context
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv6_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                                class PseudowireData(object):
                                    """
                                    Pseudowire label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Address prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: pseudowire_id
                                    
                                    	Pseudo\-wire ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: remote_l2_router_id
                                    
                                    	Remote L2 Router ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: subinterface
                                    
                                    	Subinterface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.pseudowire_id = None
                                        self.remote_l2_router_id = None
                                        self.subinterface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.pseudowire_id is not None:
                                            return True

                                        if self.remote_l2_router_id is not None:
                                            return True

                                        if self.subinterface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                                class LabelBlockData(object):
                                    """
                                    Label block context
                                    
                                    .. attribute:: edge_id
                                    
                                    	Edge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: service
                                    
                                    	Service
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vpn_id
                                    
                                    	VPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.edge_id = None
                                        self.offset = None
                                        self.service = None
                                        self.size = None
                                        self.vpn_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.edge_id is not None:
                                            return True

                                        if self.offset is not None:
                                            return True

                                        if self.service is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.vpn_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                                class IpSubData(object):
                                    """
                                    IP Subscriber context
                                    
                                    .. attribute:: parent_interface
                                    
                                    	Parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.parent_interface = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.parent_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                                class Tev4P2MpData(object):
                                    """
                                    TEv4 P2MP context
                                    
                                    .. attribute:: p2mp_id
                                    
                                    	Point to multipoint ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: previous_hop
                                    
                                    	Previous hop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Tunnel ID extension
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.p2mp_id = None
                                        self.previous_hop = None
                                        self.table_id = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.p2mp_id is not None:
                                            return True

                                        if self.previous_hop is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                                class MldPv4Data(object):
                                    """
                                    MLDPv4 LSM\-ID context
                                    
                                    .. attribute:: lsm_id
                                    
                                    	LSM ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: peer_label_space_id
                                    
                                    	Peer Label Space Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: peer_lsrid
                                    
                                    	Peer LSR Id
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: type
                                    
                                    	LSM ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lsm_id = None
                                        self.peer_label_space_id = None
                                        self.peer_lsrid = None
                                        self.table_id = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lsm_id is not None:
                                            return True

                                        if self.peer_label_space_id is not None:
                                            return True

                                        if self.peer_lsrid is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    Pseudowire Head\-end label context
                                    
                                    .. attribute:: pwhe_intf
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.pwhe_intf = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.pwhe_intf is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                                class TpData(object):
                                    """
                                    TP context
                                    
                                    .. attribute:: dest_global_id
                                    
                                    	TP destination global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: dest_node_id
                                    
                                    	TP destination node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: dest_tunnel_id
                                    
                                    	TP destination tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsp_id
                                    
                                    	TP LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: source_global_id
                                    
                                    	TP source global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_node_id
                                    
                                    	TP source node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: source_tunnel_id
                                    
                                    	TP source tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest_global_id = None
                                        self.dest_node_id = None
                                        self.dest_tunnel_id = None
                                        self.lsp_id = None
                                        self.source_global_id = None
                                        self.source_node_id = None
                                        self.source_tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest_global_id is not None:
                                            return True

                                        if self.dest_node_id is not None:
                                            return True

                                        if self.dest_tunnel_id is not None:
                                            return True

                                        if self.lsp_id is not None:
                                            return True

                                        if self.source_global_id is not None:
                                            return True

                                        if self.source_node_id is not None:
                                            return True

                                        if self.source_tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                                class GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: gre_interface
                                    
                                    	Generic routing encapsulation interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.gre_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.gre_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                                class Ipv6GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: greipv6_interface
                                    
                                    	Generic routing encapsulation IPv6 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.greipv6_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.greipv6_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                                class EvpnData(object):
                                    """
                                    EVPN context
                                    
                                    .. attribute:: ethernet_segment
                                    
                                    	Ethernet Segment ID
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: evpn_id
                                    
                                    	EVPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: evpn_tag
                                    
                                    	EVPN TAG
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ethernet_segment = None
                                        self.evpn_id = None
                                        self.evpn_tag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ethernet_segment is not None:
                                            return True

                                        if self.evpn_id is not None:
                                            return True

                                        if self.evpn_tag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                                class Ipv4BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                                class Ipv6BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                                class PiMiPmsiData(object):
                                    """
                                    PIM I\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                                class PiMsPmsiData(object):
                                    """
                                    PIM S\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: hli
                                    
                                    	Head LSM\-ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: seg
                                    
                                    	Segmented Multicast
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: source
                                    
                                    	Originating Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.hli = None
                                        self.seg = None
                                        self.source = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.hli is not None:
                                            return True

                                        if self.seg is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                                class NextHopSetL3Vpn(object):
                                    """
                                    L3VPN NH SET label context
                                    
                                    .. attribute:: next_hop_set_id
                                    
                                    	Next Hop Set ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.next_hop_set_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.next_hop_set_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                                class SrPrefixSegment(object):
                                    """
                                    SR Prefix Segment context
                                    
                                    .. attribute:: segment_id
                                    
                                    	Prefix Segment ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                                class SrAdjSegmentIpv4(object):
                                    """
                                    SR Adj Segment ipv4 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                                class SrAdjSegmentIpv6(object):
                                    """
                                    SR Adj Segment ipv6 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv6 address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                                class LabelBlockSrgbData(object):
                                    """
                                    Label block SRGB context
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: start_label
                                    
                                    	Start Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.offset = None
                                        self.size = None
                                        self.start_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.offset is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.start_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                                class TeBinding(object):
                                    """
                                    MPLS TE tunnel binding context
                                    
                                    .. attribute:: te_identifier
                                    
                                    	MPLS Traffic Engineering Tunnel or Group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: te_type
                                    
                                    	Type of identifier for the binding
                                    	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.te_identifier = None
                                        self.te_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.te_identifier is not None:
                                            return True

                                        if self.te_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                        return True

                                    if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                        return True

                                    if self.evpn_data is not None and self.evpn_data._has_data():
                                        return True

                                    if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                        return True

                                    if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                        return True

                                    if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                        return True

                                    if self.label_block_data is not None and self.label_block_data._has_data():
                                        return True

                                    if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                        return True

                                    if self.label_context_type is not None:
                                        return True

                                    if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                        return True

                                    if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                        return True

                                    if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                        return True

                                    if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                        return True

                                    if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                        return True

                                    if self.te_binding is not None and self.te_binding._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                        return True

                                    if self.tp_data is not None and self.tp_data._has_data():
                                        return True

                                    if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext']['meta_info']


                            class LocalLabelRewrite(object):
                                """
                                Local label rewrite information
                                
                                .. attribute:: label_data
                                
                                	label data
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_data = YLeafList()
                                    self.label_data.parent = self
                                    self.label_data.name = 'label_data'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_data is not None:
                                        for child in self.label_data:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_context is not None and self.label_context._has_data():
                                    return True

                                if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                    return True

                                if self.rewrite_id_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.rewrite_id is not None and self.rewrite_id._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.RewriteId']['meta_info']


                    class AssociatedFpi(object):
                        """
                        Associated FPI
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.AssociatedFpi']['meta_info']


                    class V4Rpf(object):
                        """
                        IPv4 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v4_rpf_neighbor
                        
                        	V4 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v4_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v4_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.V4Rpf']['meta_info']


                    class V6Rpf(object):
                        """
                        IPv6 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v6_rpf_neighbor
                        
                        	V6 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v6_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v6_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.V6Rpf']['meta_info']


                    class Mois(object):
                        """
                        Mois
                        
                        .. attribute:: application_resource
                        
                        	Application state
                        	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource>`
                        
                        .. attribute:: moi_array
                        
                        	moi array
                        	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_resource = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource()
                            self.application_resource.parent = self
                            self.moi_array = YList()
                            self.moi_array.parent = self
                            self.moi_array.name = 'moi_array'


                        class ApplicationResource(object):
                            """
                            Application state
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource']['meta_info']


                        class MoiArray(object):
                            """
                            moi array
                            
                            .. attribute:: moi
                            
                            	Moi
                            	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.moi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi()
                                self.moi.parent = self


                            class Moi(object):
                                """
                                Moi
                                
                                .. attribute:: dmtc_data
                                
                                	dmtc data
                                	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData>`
                                
                                .. attribute:: ip_sub_data
                                
                                	ip sub data
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	ipv4 data
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data>`
                                
                                .. attribute:: ipv6_data
                                
                                	ipv6 data
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data>`
                                
                                .. attribute:: moi_type
                                
                                	MoiType
                                	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                                
                                .. attribute:: pop_and_lookup_ipv4
                                
                                	pop and lookup ipv4
                                	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                                
                                .. attribute:: pop_and_lookup_ipv6
                                
                                	pop and lookup ipv6
                                	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                                
                                .. attribute:: pop_and_lookup_tp
                                
                                	pop and lookup tp
                                	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp>`
                                
                                .. attribute:: pseudowire_data
                                
                                	pseudowire data
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	pseudowire head end data
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                                
                                .. attribute:: pw_list_data
                                
                                	pw list data
                                	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData>`
                                
                                .. attribute:: stackv4_data
                                
                                	stackv4 data
                                	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data>`
                                
                                .. attribute:: stackv6_data
                                
                                	stackv6 data
                                	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data>`
                                
                                .. attribute:: te_head_data
                                
                                	te head data
                                	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData>`
                                
                                .. attribute:: tev4_data
                                
                                	tev4 data
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData()
                                    self.dmtc_data.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.moi_type = None
                                    self.pop_and_lookup_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                    self.pop_and_lookup_ipv4.parent = self
                                    self.pop_and_lookup_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                    self.pop_and_lookup_ipv6.parent = self
                                    self.pop_and_lookup_tp = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp()
                                    self.pop_and_lookup_tp.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData()
                                    self.pw_list_data.parent = self
                                    self.stackv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data()
                                    self.stackv4_data.parent = self
                                    self.stackv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data()
                                    self.stackv6_data.parent = self
                                    self.te_head_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData()
                                    self.te_head_data.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data()
                                    self.tev4_data.parent = self


                                class PopAndLookupIpv4(object):
                                    """
                                    pop and lookup ipv4
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                                class PopAndLookupTp(object):
                                    """
                                    pop and lookup tp
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                                class PopAndLookupIpv6(object):
                                    """
                                    pop and lookup ipv6
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                                class Ipv4Data(object):
                                    """
                                    ipv4 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    ipv6 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    tev4 data
                                    
                                    .. attribute:: backup_interface
                                    
                                    	Backup interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_ipv4_next_hop
                                    
                                    	Backup IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_local_label
                                    
                                    	Backup local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: data_out_parent_interface
                                    
                                    	Outgoing data parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: merge_point_label
                                    
                                    	Merge point label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_class
                                    
                                    	Tunnel class
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_interface
                                    
                                    	Tunnel interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: tunnel_weight
                                    
                                    	Tunnel weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_interface = None
                                        self.backup_ipv4_next_hop = None
                                        self.backup_local_label = None
                                        self.data_out_parent_interface = None
                                        self.ipv4_next_hop = None
                                        self.merge_point_label = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_class = None
                                        self.tunnel_interface = None
                                        self.tunnel_weight = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_interface is not None:
                                            return True

                                        if self.backup_ipv4_next_hop is not None:
                                            return True

                                        if self.backup_local_label is not None:
                                            return True

                                        if self.data_out_parent_interface is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.merge_point_label is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_class is not None:
                                            return True

                                        if self.tunnel_interface is not None:
                                            return True

                                        if self.tunnel_weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                                class PseudowireData(object):
                                    """
                                    pseudowire data
                                    
                                    .. attribute:: bridge_id
                                    
                                    	Bridge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: cross_connect_id
                                    
                                    	Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pseuodo_wire_connect_id
                                    
                                    	PseudoWire Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: split_horizon_id
                                    
                                    	Split horizon group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bridge_id = None
                                        self.cross_connect_id = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pseuodo_wire_connect_id = None
                                        self.split_horizon_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bridge_id is not None:
                                            return True

                                        if self.cross_connect_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pseuodo_wire_connect_id is not None:
                                            return True

                                        if self.split_horizon_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                                class IpSubData(object):
                                    """
                                    ip sub data
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	VRF table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    pseudowire head end data
                                    
                                    .. attribute:: control_word
                                    
                                    	Is control word present
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: imposition
                                    
                                    	Is PWHE IMposition
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pw_list_id
                                    
                                    	Pseudo\-wire List Identifier
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: pwhe_interface
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: vctype
                                    
                                    	Virtual Circuit Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.control_word = None
                                        self.imposition = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pw_list_id = None
                                        self.pwhe_interface = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.vctype = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.control_word is not None:
                                            return True

                                        if self.imposition is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pw_list_id is not None:
                                            return True

                                        if self.pwhe_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.vctype is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                                class PwListData(object):
                                    """
                                    pw list data
                                    
                                    .. attribute:: l2_interface
                                    
                                    	Pseudo\-wire Layer 2 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: l3_interface
                                    
                                    	Pseudo\-wire Layer 3 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l2_interface = None
                                        self.l3_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l2_interface is not None:
                                            return True

                                        if self.l3_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData']['meta_info']


                                class Stackv4Data(object):
                                    """
                                    stackv4 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                    
                                    .. attribute:: owner_application_type
                                    
                                    	Owner application type
                                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                        self.nexthop.parent = self
                                        self.owner_application_type = None


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv4_next_hop
                                        
                                        	IPv4 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: load_metric
                                        
                                        	Routing path's load metric
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: local_label
                                        
                                        	TE backup path local label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing Interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_interface_parent
                                        
                                        	Outgoing Interface's parent
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv4_next_hop = None
                                            self.load_metric = None
                                            self.local_label = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_interface_parent = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None
                                            self.tunnel_id = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv4_next_hop is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.local_label is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_interface_parent is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        if self.owner_application_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                                class Stackv6Data(object):
                                    """
                                    stackv6 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                        self.nexthop.parent = self


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv6_next_hop
                                        
                                        	IPv6 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv6_next_hop = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv6_next_hop is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                                class TeHeadData(object):
                                    """
                                    te head data
                                    
                                    .. attribute:: flags_decode
                                    
                                    	Flags decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_fwd_class
                                    
                                    	Tunnel forwarding class
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: tunnel_load_metric
                                    
                                    	Tunnel Load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label
                                    
                                    	Tunnel local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label_str
                                    
                                    	Tunnel local label stringified
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_fwd_class = None
                                        self.tunnel_load_metric = None
                                        self.tunnel_local_label = None
                                        self.tunnel_local_label_str = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_fwd_class is not None:
                                            return True

                                        if self.tunnel_load_metric is not None:
                                            return True

                                        if self.tunnel_local_label is not None:
                                            return True

                                        if self.tunnel_local_label_str is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                                class DmtcData(object):
                                    """
                                    dmtc data
                                    
                                    .. attribute:: dmtc_ext_ifh
                                    
                                    	DMTC External Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dmtc_ext_ifh = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dmtc_ext_ifh is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_data is not None and self.dmtc_data._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.moi_type is not None:
                                        return True

                                    if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                        return True

                                    if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                        return True

                                    if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.pw_list_data is not None and self.pw_list_data._has_data():
                                        return True

                                    if self.stackv4_data is not None and self.stackv4_data._has_data():
                                        return True

                                    if self.stackv6_data is not None and self.stackv6_data._has_data():
                                        return True

                                    if self.te_head_data is not None and self.te_head_data._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.moi is not None and self.moi._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_resource is not None and self.application_resource._has_data():
                                return True

                            if self.moi_array is not None:
                                for child_ref in self.moi_array:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe.Mois']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-te[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.associated_fpi is not None:
                            for child_ref in self.associated_fpi:
                                if child_ref._has_data():
                                    return True

                        if self.bcdl_priority is not None:
                            return True

                        if self.fpi_key is not None and self.fpi_key._has_data():
                            return True

                        if self.lsd_queue is not None:
                            return True

                        if self.mois is not None:
                            for child_ref in self.mois:
                                if child_ref._has_data():
                                    return True

                        if self.priority_updated is not None:
                            return True

                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        if self.rewrite_version is not None:
                            return True

                        if self.rw_install_age is not None:
                            return True

                        if self.rw_install_time is not None:
                            return True

                        if self.rw_updated is not None:
                            return True

                        if self.v4_rpf is not None:
                            for child_ref in self.v4_rpf:
                                if child_ref._has_data():
                                    return True

                        if self.v6_rpf is not None:
                            for child_ref in self.v6_rpf:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes.RewriteTe']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-tes'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.rewrite_te is not None:
                        for child_ref in self.rewrite_te:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteTes']['meta_info']


            class RewriteLabels(object):
                """
                Table of Rewrites
                
                .. attribute:: rewrite_label
                
                	FPI rewrite for label
                	**type**\: list of    :py:class:`RewriteLabel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.rewrite_label = YList()
                    self.rewrite_label.parent = self
                    self.rewrite_label.name = 'rewrite_label'


                class RewriteLabel(object):
                    """
                    FPI rewrite for label
                    
                    .. attribute:: label_id  <key>
                    
                    	Label value
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: associated_fpi
                    
                    	Associated FPI
                    	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi>`
                    
                    .. attribute:: bcdl_priority
                    
                    	BCDL Priority
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: fpi_key
                    
                    	fpi key
                    	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey>`
                    
                    .. attribute:: lsd_queue
                    
                    	LSD queue
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: mois
                    
                    	Mois
                    	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois>`
                    
                    .. attribute:: priority_updated
                    
                    	Is rewrite's BCDL priority updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId>`
                    
                    .. attribute:: rewrite_version
                    
                    	Rewrite version
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_age
                    
                    	Rewrite install age
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_install_time
                    
                    	Rewrite install timestamp
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: rw_updated
                    
                    	Is rewrite ever updated
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: v4_rpf
                    
                    	IPv4 RPF neighbors
                    	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.V4Rpf>`
                    
                    .. attribute:: v6_rpf
                    
                    	IPv6 RPF neighbors
                    	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.V6Rpf>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.label_id = None
                        self.associated_fpi = YList()
                        self.associated_fpi.parent = self
                        self.associated_fpi.name = 'associated_fpi'
                        self.bcdl_priority = None
                        self.fpi_key = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey()
                        self.fpi_key.parent = self
                        self.lsd_queue = None
                        self.mois = YList()
                        self.mois.parent = self
                        self.mois.name = 'mois'
                        self.priority_updated = None
                        self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId()
                        self.rewrite_id.parent = self
                        self.rewrite_version = None
                        self.rw_install_age = None
                        self.rw_install_time = None
                        self.rw_updated = None
                        self.v4_rpf = YList()
                        self.v4_rpf.parent = self
                        self.v4_rpf.name = 'v4_rpf'
                        self.v6_rpf = YList()
                        self.v6_rpf.parent = self
                        self.v6_rpf.name = 'v6_rpf'


                    class FpiKey(object):
                        """
                        fpi key
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.FpiKey']['meta_info']


                    class RewriteId(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: rewrite_id
                        
                        	Rewrite ID
                        	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.rewrite_id = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_()
                            self.rewrite_id.parent = self


                        class RewriteId_(object):
                            """
                            Rewrite ID
                            
                            .. attribute:: label_context
                            
                            	Label context
                            	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext>`
                            
                            .. attribute:: local_label_rewrite
                            
                            	Local label rewrite information
                            	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite>`
                            
                            .. attribute:: rewrite_id_type
                            
                            	RewriteIDType
                            	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_context = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext()
                                self.label_context.parent = self
                                self.local_label_rewrite = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite()
                                self.local_label_rewrite.parent = self
                                self.rewrite_id_type = None


                            class LabelContext(object):
                                """
                                Label context
                                
                                .. attribute:: cev4l3vpn_data
                                
                                	L3VPN CEv4 label context
                                	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                                
                                .. attribute:: cev6l3vpn_data
                                
                                	L3VPN CEv6 label context
                                	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                                
                                .. attribute:: evpn_data
                                
                                	EVPN context
                                	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData>`
                                
                                .. attribute:: generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                                
                                .. attribute:: ip_sub_data
                                
                                	IP Subscriber context
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	IPv4 label context
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                                
                                .. attribute:: ipv4blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                                
                                .. attribute:: ipv4l3vpn_data
                                
                                	L3VPN IPv4 label context
                                	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                                
                                .. attribute:: ipv6_data
                                
                                	IPv6 label context
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                                
                                .. attribute:: ipv6_generic_routing_encapsulation
                                
                                	Generic routing encapsulation context
                                	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                                
                                .. attribute:: ipv6blb_data
                                
                                	BFD BLB label context
                                	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                                
                                .. attribute:: ipv6l3vpn_data
                                
                                	L3VPN IPv6 label context
                                	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                                
                                .. attribute:: label_block_data
                                
                                	Label block context
                                	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                                
                                .. attribute:: label_block_srgb_data
                                
                                	Label block SRGB context
                                	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                                
                                .. attribute:: label_context_type
                                
                                	LabelContextType
                                	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                                
                                .. attribute:: mld_pv4_data
                                
                                	MLDPv4 LSM\-ID context
                                	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                                
                                .. attribute:: next_hop_set_l3vpn
                                
                                	L3VPN NH SET label context
                                	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                                
                                .. attribute:: pi_mi_pmsi_data
                                
                                	PIM I\-PMSI label conext
                                	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                                
                                .. attribute:: pi_ms_pmsi_data
                                
                                	PIM S\-PMSI label conext
                                	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                                
                                .. attribute:: pseudowire_data
                                
                                	Pseudowire label context
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	Pseudowire Head\-end label context
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                                
                                .. attribute:: sr_adj_segment_ipv4
                                
                                	SR Adj Segment ipv4 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                                
                                .. attribute:: sr_adj_segment_ipv6
                                
                                	SR Adj Segment ipv6 context
                                	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                                
                                .. attribute:: sr_prefix_segment
                                
                                	SR Prefix Segment context
                                	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                                
                                .. attribute:: te_binding
                                
                                	MPLS TE tunnel binding context
                                	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding>`
                                
                                .. attribute:: tev4_data
                                
                                	TEv4 label context
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                                
                                .. attribute:: tev4p2mp_data
                                
                                	TEv4 P2MP context
                                	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                                
                                .. attribute:: tp_data
                                
                                	TP context
                                	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData>`
                                
                                .. attribute:: vrf_l3vpn_data
                                
                                	L3VPN VRF label context
                                	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.cev4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                    self.cev4l3vpn_data.parent = self
                                    self.cev6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                    self.cev6l3vpn_data.parent = self
                                    self.evpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData()
                                    self.evpn_data.parent = self
                                    self.generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                    self.generic_routing_encapsulation.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv4blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                    self.ipv4blb_data.parent = self
                                    self.ipv4l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                    self.ipv4l3vpn_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.ipv6_generic_routing_encapsulation = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                    self.ipv6_generic_routing_encapsulation.parent = self
                                    self.ipv6blb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                    self.ipv6blb_data.parent = self
                                    self.ipv6l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                    self.ipv6l3vpn_data.parent = self
                                    self.label_block_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                    self.label_block_data.parent = self
                                    self.label_block_srgb_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                    self.label_block_srgb_data.parent = self
                                    self.label_context_type = None
                                    self.mld_pv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                    self.mld_pv4_data.parent = self
                                    self.next_hop_set_l3vpn = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                    self.next_hop_set_l3vpn.parent = self
                                    self.pi_mi_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                    self.pi_mi_pmsi_data.parent = self
                                    self.pi_ms_pmsi_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                    self.pi_ms_pmsi_data.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.sr_adj_segment_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                    self.sr_adj_segment_ipv4.parent = self
                                    self.sr_adj_segment_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                    self.sr_adj_segment_ipv6.parent = self
                                    self.sr_prefix_segment = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                    self.sr_prefix_segment.parent = self
                                    self.te_binding = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding()
                                    self.te_binding.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                    self.tev4_data.parent = self
                                    self.tev4p2mp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                    self.tev4p2mp_data.parent = self
                                    self.tp_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData()
                                    self.tp_data.parent = self
                                    self.vrf_l3vpn_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                    self.vrf_l3vpn_data.parent = self


                                class Ipv4Data(object):
                                    """
                                    IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	IPv4 prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vrf_name
                                    
                                    	VRF Name
                                    	**type**\:  str
                                    
                                    	**length:** 0..33
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.security_id = None
                                        self.table_id = None
                                        self.vrf_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.vrf_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    TEv4 label context
                                    
                                    .. attribute:: is_srte
                                    
                                    	Is this an SRTE head tunnel
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_dest
                                    
                                    	Tunnel destination
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Extended tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.is_srte = None
                                        self.table_id = None
                                        self.tunnel_dest = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.is_srte is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_dest is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                                class Ipv4L3VpnData(object):
                                    """
                                    L3VPN IPv4 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                                class Ipv6L3VpnData(object):
                                    """
                                    L3VPN IPv6 label context
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: prefix_length
                                    
                                    	Prefix length
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: route_distinguisher
                                    
                                    	Route distinguisher
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.prefix_length = None
                                        self.route_distinguisher = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.prefix_length is not None:
                                            return True

                                        if self.route_distinguisher is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                                class VrfL3VpnData(object):
                                    """
                                    L3VPN VRF label context
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                                class Cev4L3VpnData(object):
                                    """
                                    L3VPN CEv4 label context
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv4_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                                class Cev6L3VpnData(object):
                                    """
                                    L3VPN CEv6 label context
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: security_id
                                    
                                    	Security ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ipv6_next_hop = None
                                        self.security_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.security_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                                class PseudowireData(object):
                                    """
                                    Pseudowire label context
                                    
                                    .. attribute:: prefix
                                    
                                    	Address prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: pseudowire_id
                                    
                                    	Pseudo\-wire ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    .. attribute:: remote_l2_router_id
                                    
                                    	Remote L2 Router ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: subinterface
                                    
                                    	Subinterface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.prefix = None
                                        self.pseudowire_id = None
                                        self.remote_l2_router_id = None
                                        self.subinterface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.prefix is not None:
                                            return True

                                        if self.pseudowire_id is not None:
                                            return True

                                        if self.remote_l2_router_id is not None:
                                            return True

                                        if self.subinterface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                                class LabelBlockData(object):
                                    """
                                    Label block context
                                    
                                    .. attribute:: edge_id
                                    
                                    	Edge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: service
                                    
                                    	Service
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: vpn_id
                                    
                                    	VPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.edge_id = None
                                        self.offset = None
                                        self.service = None
                                        self.size = None
                                        self.vpn_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.edge_id is not None:
                                            return True

                                        if self.offset is not None:
                                            return True

                                        if self.service is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.vpn_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                                class IpSubData(object):
                                    """
                                    IP Subscriber context
                                    
                                    .. attribute:: parent_interface
                                    
                                    	Parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.parent_interface = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.parent_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                                class Tev4P2MpData(object):
                                    """
                                    TEv4 P2MP context
                                    
                                    .. attribute:: p2mp_id
                                    
                                    	Point to multipoint ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: previous_hop
                                    
                                    	Previous hop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_id_extension
                                    
                                    	Tunnel ID extension
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_lsp_id
                                    
                                    	Tunnel LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_source
                                    
                                    	Tunnel source
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.p2mp_id = None
                                        self.previous_hop = None
                                        self.table_id = None
                                        self.tunnel_id = None
                                        self.tunnel_id_extension = None
                                        self.tunnel_lsp_id = None
                                        self.tunnel_source = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.p2mp_id is not None:
                                            return True

                                        if self.previous_hop is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        if self.tunnel_id_extension is not None:
                                            return True

                                        if self.tunnel_lsp_id is not None:
                                            return True

                                        if self.tunnel_source is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                                class MldPv4Data(object):
                                    """
                                    MLDPv4 LSM\-ID context
                                    
                                    .. attribute:: lsm_id
                                    
                                    	LSM ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: peer_label_space_id
                                    
                                    	Peer Label Space Id
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: peer_lsrid
                                    
                                    	Peer LSR Id
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: type
                                    
                                    	LSM ID Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.lsm_id = None
                                        self.peer_label_space_id = None
                                        self.peer_lsrid = None
                                        self.table_id = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.lsm_id is not None:
                                            return True

                                        if self.peer_label_space_id is not None:
                                            return True

                                        if self.peer_lsrid is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    Pseudowire Head\-end label context
                                    
                                    .. attribute:: pwhe_intf
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.pwhe_intf = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.pwhe_intf is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                                class TpData(object):
                                    """
                                    TP context
                                    
                                    .. attribute:: dest_global_id
                                    
                                    	TP destination global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: dest_node_id
                                    
                                    	TP destination node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: dest_tunnel_id
                                    
                                    	TP destination tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: lsp_id
                                    
                                    	TP LSP ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: source_global_id
                                    
                                    	TP source global ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: source_node_id
                                    
                                    	TP source node ID
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: source_tunnel_id
                                    
                                    	TP source tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dest_global_id = None
                                        self.dest_node_id = None
                                        self.dest_tunnel_id = None
                                        self.lsp_id = None
                                        self.source_global_id = None
                                        self.source_node_id = None
                                        self.source_tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dest_global_id is not None:
                                            return True

                                        if self.dest_node_id is not None:
                                            return True

                                        if self.dest_tunnel_id is not None:
                                            return True

                                        if self.lsp_id is not None:
                                            return True

                                        if self.source_global_id is not None:
                                            return True

                                        if self.source_node_id is not None:
                                            return True

                                        if self.source_tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                                class GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: gre_interface
                                    
                                    	Generic routing encapsulation interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.gre_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.gre_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                                class Ipv6GenericRoutingEncapsulation(object):
                                    """
                                    Generic routing encapsulation context
                                    
                                    .. attribute:: greipv6_interface
                                    
                                    	Generic routing encapsulation IPv6 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.greipv6_interface = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.greipv6_interface is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                                class EvpnData(object):
                                    """
                                    EVPN context
                                    
                                    .. attribute:: ethernet_segment
                                    
                                    	Ethernet Segment ID
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    .. attribute:: evpn_id
                                    
                                    	EVPN ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: evpn_tag
                                    
                                    	EVPN TAG
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ethernet_segment = None
                                        self.evpn_id = None
                                        self.evpn_tag = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ethernet_segment is not None:
                                            return True

                                        if self.evpn_id is not None:
                                            return True

                                        if self.evpn_tag is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                                class Ipv4BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv4 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                                class Ipv6BlbData(object):
                                    """
                                    BFD BLB label context
                                    
                                    .. attribute:: blb_intf
                                    
                                    	BFD BLB interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: prefix
                                    
                                    	IPv6 prefix
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.blb_intf = None
                                        self.prefix = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.blb_intf is not None:
                                            return True

                                        if self.prefix is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                                class PiMiPmsiData(object):
                                    """
                                    PIM I\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                                class PiMsPmsiData(object):
                                    """
                                    PIM S\-PMSI label conext
                                    
                                    .. attribute:: head
                                    
                                    	Head
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: hli
                                    
                                    	Head LSM\-ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: seg
                                    
                                    	Segmented Multicast
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: source
                                    
                                    	Originating Router
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: v6
                                    
                                    	PIM6
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: vrf_id
                                    
                                    	VRF ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.head = None
                                        self.hli = None
                                        self.seg = None
                                        self.source = None
                                        self.v6 = None
                                        self.vrf_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.head is not None:
                                            return True

                                        if self.hli is not None:
                                            return True

                                        if self.seg is not None:
                                            return True

                                        if self.source is not None:
                                            return True

                                        if self.v6 is not None:
                                            return True

                                        if self.vrf_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                                class NextHopSetL3Vpn(object):
                                    """
                                    L3VPN NH SET label context
                                    
                                    .. attribute:: next_hop_set_id
                                    
                                    	Next Hop Set ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.next_hop_set_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.next_hop_set_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                                class SrPrefixSegment(object):
                                    """
                                    SR Prefix Segment context
                                    
                                    .. attribute:: segment_id
                                    
                                    	Prefix Segment ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.segment_id = None
                                        self.table_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.segment_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                                class SrAdjSegmentIpv4(object):
                                    """
                                    SR Adj Segment ipv4 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv4 address
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                                class SrAdjSegmentIpv6(object):
                                    """
                                    SR Adj Segment ipv6 context
                                    
                                    .. attribute:: addr
                                    
                                    	Adjacency nexthop IPv6 address
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: index
                                    
                                    	Adjacency index
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: intf
                                    
                                    	Adjacency interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: type
                                    
                                    	Adjacency type
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.addr = None
                                        self.index = None
                                        self.intf = None
                                        self.type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.addr is not None:
                                            return True

                                        if self.index is not None:
                                            return True

                                        if self.intf is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                                class LabelBlockSrgbData(object):
                                    """
                                    Label block SRGB context
                                    
                                    .. attribute:: offset
                                    
                                    	Offset
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: size
                                    
                                    	Number of labels
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: start_label
                                    
                                    	Start Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.offset = None
                                        self.size = None
                                        self.start_label = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.offset is not None:
                                            return True

                                        if self.size is not None:
                                            return True

                                        if self.start_label is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                                class TeBinding(object):
                                    """
                                    MPLS TE tunnel binding context
                                    
                                    .. attribute:: te_identifier
                                    
                                    	MPLS Traffic Engineering Tunnel or Group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: te_type
                                    
                                    	Type of identifier for the binding
                                    	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.te_identifier = None
                                        self.te_type = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.te_identifier is not None:
                                            return True

                                        if self.te_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                        return True

                                    if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                        return True

                                    if self.evpn_data is not None and self.evpn_data._has_data():
                                        return True

                                    if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                        return True

                                    if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                        return True

                                    if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                        return True

                                    if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                        return True

                                    if self.label_block_data is not None and self.label_block_data._has_data():
                                        return True

                                    if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                        return True

                                    if self.label_context_type is not None:
                                        return True

                                    if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                        return True

                                    if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                        return True

                                    if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                        return True

                                    if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                        return True

                                    if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                        return True

                                    if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                        return True

                                    if self.te_binding is not None and self.te_binding._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                        return True

                                    if self.tp_data is not None and self.tp_data._has_data():
                                        return True

                                    if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext']['meta_info']


                            class LocalLabelRewrite(object):
                                """
                                Local label rewrite information
                                
                                .. attribute:: label_data
                                
                                	label data
                                	**type**\:  list of int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.label_data = YLeafList()
                                    self.label_data.parent = self
                                    self.label_data.name = 'label_data'

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.label_data is not None:
                                        for child in self.label_data:
                                            if child is not None:
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_context is not None and self.label_context._has_data():
                                    return True

                                if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                    return True

                                if self.rewrite_id_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.rewrite_id is not None and self.rewrite_id._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.RewriteId']['meta_info']


                    class AssociatedFpi(object):
                        """
                        Associated FPI
                        
                        .. attribute:: application_owner
                        
                        	Application owner instance
                        	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.ApplicationOwner>`
                        
                        .. attribute:: fpi
                        
                        	FPI
                        	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_owner = YList()
                            self.application_owner.parent = self
                            self.application_owner.name = 'application_owner'
                            self.fpi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi()
                            self.fpi.parent = self


                        class Fpi(object):
                            """
                            FPI
                            
                            .. attribute:: dmtc_ext_intf_data
                            
                            	dmtc ext intf data
                            	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData>`
                            
                            .. attribute:: fpi_type
                            
                            	FPIType
                            	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data>`
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData>`
                            
                            .. attribute:: te_data
                            
                            	te data
                            	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_intf_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData()
                                self.dmtc_ext_intf_data.parent = self
                                self.fpi_type = None
                                self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.label_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData()
                                self.label_data.parent = self
                                self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData()
                                self.pw_list_data.parent = self
                                self.te_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData()
                                self.te_data.parent = self


                            class LabelData(object):
                                """
                                label data
                                
                                .. attribute:: elc
                                
                                	ELC
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: label
                                
                                	Label value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.elc = None
                                    self.label = None
                                    self.security_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.elc is not None:
                                        return True

                                    if self.label is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData']['meta_info']


                            class TeData(object):
                                """
                                te data
                                
                                .. attribute:: local_label
                                
                                	Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_label = None
                                    self.tunnel_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_label is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix Length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: sr_local_label
                                
                                	SR related Local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.sr_local_label = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.sr_local_label is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_len
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: router_flags
                                
                                	Route flags
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: version
                                
                                	Version
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_len = None
                                    self.router_flags = None
                                    self.table_id = None
                                    self.version = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_len is not None:
                                        return True

                                    if self.router_flags is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.version is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: pwhe_list_id
                                
                                	Pseudowire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_list_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_list_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData']['meta_info']


                            class DmtcExtIntfData(object):
                                """
                                dmtc ext intf data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                    return True

                                if self.fpi_type is not None:
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.label_data is not None and self.label_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.te_data is not None and self.te_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi']['meta_info']


                        class ApplicationOwner(object):
                            """
                            Application owner instance
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.ApplicationOwner']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_owner is not None:
                                for child_ref in self.application_owner:
                                    if child_ref._has_data():
                                        return True

                            if self.fpi is not None and self.fpi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi']['meta_info']


                    class V4Rpf(object):
                        """
                        IPv4 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v4_rpf_neighbor
                        
                        	V4 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v4_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v4_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.V4Rpf']['meta_info']


                    class V6Rpf(object):
                        """
                        IPv6 RPF neighbors
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: v6_rpf_neighbor
                        
                        	V6 RPF Neighbor
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.table_id = None
                            self.v6_rpf_neighbor = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.table_id is not None:
                                return True

                            if self.v6_rpf_neighbor is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.V6Rpf']['meta_info']


                    class Mois(object):
                        """
                        Mois
                        
                        .. attribute:: application_resource
                        
                        	Application state
                        	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource>`
                        
                        .. attribute:: moi_array
                        
                        	moi array
                        	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_resource = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource()
                            self.application_resource.parent = self
                            self.moi_array = YList()
                            self.moi_array.parent = self
                            self.moi_array.name = 'moi_array'


                        class ApplicationResource(object):
                            """
                            Application state
                            
                            .. attribute:: application_instance
                            
                            	Application instance Name
                            	**type**\:  str
                            
                            .. attribute:: application_name
                            
                            	Application name
                            	**type**\:  str
                            
                            .. attribute:: application_role_primary
                            
                            	Primary/Backup role
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: application_type
                            
                            	Application type
                            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                            
                            .. attribute:: resource_state
                            
                            	Application resource state
                            	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.application_instance = None
                                self.application_name = None
                                self.application_role_primary = None
                                self.application_type = None
                                self.resource_state = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.application_instance is not None:
                                    return True

                                if self.application_name is not None:
                                    return True

                                if self.application_role_primary is not None:
                                    return True

                                if self.application_type is not None:
                                    return True

                                if self.resource_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource']['meta_info']


                        class MoiArray(object):
                            """
                            moi array
                            
                            .. attribute:: moi
                            
                            	Moi
                            	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.moi = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi()
                                self.moi.parent = self


                            class Moi(object):
                                """
                                Moi
                                
                                .. attribute:: dmtc_data
                                
                                	dmtc data
                                	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData>`
                                
                                .. attribute:: ip_sub_data
                                
                                	ip sub data
                                	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData>`
                                
                                .. attribute:: ipv4_data
                                
                                	ipv4 data
                                	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data>`
                                
                                .. attribute:: ipv6_data
                                
                                	ipv6 data
                                	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data>`
                                
                                .. attribute:: moi_type
                                
                                	MoiType
                                	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                                
                                .. attribute:: pop_and_lookup_ipv4
                                
                                	pop and lookup ipv4
                                	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                                
                                .. attribute:: pop_and_lookup_ipv6
                                
                                	pop and lookup ipv6
                                	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                                
                                .. attribute:: pop_and_lookup_tp
                                
                                	pop and lookup tp
                                	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp>`
                                
                                .. attribute:: pseudowire_data
                                
                                	pseudowire data
                                	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData>`
                                
                                .. attribute:: pseudowire_head_end_data
                                
                                	pseudowire head end data
                                	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                                
                                .. attribute:: pw_list_data
                                
                                	pw list data
                                	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData>`
                                
                                .. attribute:: stackv4_data
                                
                                	stackv4 data
                                	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data>`
                                
                                .. attribute:: stackv6_data
                                
                                	stackv6 data
                                	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data>`
                                
                                .. attribute:: te_head_data
                                
                                	te head data
                                	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData>`
                                
                                .. attribute:: tev4_data
                                
                                	tev4 data
                                	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData()
                                    self.dmtc_data.parent = self
                                    self.ip_sub_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData()
                                    self.ip_sub_data.parent = self
                                    self.ipv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data()
                                    self.ipv4_data.parent = self
                                    self.ipv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data()
                                    self.ipv6_data.parent = self
                                    self.moi_type = None
                                    self.pop_and_lookup_ipv4 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                    self.pop_and_lookup_ipv4.parent = self
                                    self.pop_and_lookup_ipv6 = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                    self.pop_and_lookup_ipv6.parent = self
                                    self.pop_and_lookup_tp = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp()
                                    self.pop_and_lookup_tp.parent = self
                                    self.pseudowire_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData()
                                    self.pseudowire_data.parent = self
                                    self.pseudowire_head_end_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                    self.pseudowire_head_end_data.parent = self
                                    self.pw_list_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData()
                                    self.pw_list_data.parent = self
                                    self.stackv4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data()
                                    self.stackv4_data.parent = self
                                    self.stackv6_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data()
                                    self.stackv6_data.parent = self
                                    self.te_head_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData()
                                    self.te_head_data.parent = self
                                    self.tev4_data = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data()
                                    self.tev4_data.parent = self


                                class PopAndLookupIpv4(object):
                                    """
                                    pop and lookup ipv4
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                                class PopAndLookupTp(object):
                                    """
                                    pop and lookup tp
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                                class PopAndLookupIpv6(object):
                                    """
                                    pop and lookup ipv6
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                                class Ipv4Data(object):
                                    """
                                    ipv4 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                                class Ipv6Data(object):
                                    """
                                    ipv6 data
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                                class Tev4Data(object):
                                    """
                                    tev4 data
                                    
                                    .. attribute:: backup_interface
                                    
                                    	Backup interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: backup_ipv4_next_hop
                                    
                                    	Backup IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: backup_local_label
                                    
                                    	Backup local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: data_out_parent_interface
                                    
                                    	Outgoing data parent interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: merge_point_label
                                    
                                    	Merge point label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_class
                                    
                                    	Tunnel class
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_interface
                                    
                                    	Tunnel interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: tunnel_weight
                                    
                                    	Tunnel weight
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_interface = None
                                        self.backup_ipv4_next_hop = None
                                        self.backup_local_label = None
                                        self.data_out_parent_interface = None
                                        self.ipv4_next_hop = None
                                        self.merge_point_label = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_class = None
                                        self.tunnel_interface = None
                                        self.tunnel_weight = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_interface is not None:
                                            return True

                                        if self.backup_ipv4_next_hop is not None:
                                            return True

                                        if self.backup_local_label is not None:
                                            return True

                                        if self.data_out_parent_interface is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.merge_point_label is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_class is not None:
                                            return True

                                        if self.tunnel_interface is not None:
                                            return True

                                        if self.tunnel_weight is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                                class PseudowireData(object):
                                    """
                                    pseudowire data
                                    
                                    .. attribute:: bridge_id
                                    
                                    	Bridge ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: cross_connect_id
                                    
                                    	Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pseuodo_wire_connect_id
                                    
                                    	PseudoWire Cross\-connect ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: split_horizon_id
                                    
                                    	Split horizon group ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.bridge_id = None
                                        self.cross_connect_id = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pseuodo_wire_connect_id = None
                                        self.split_horizon_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.bridge_id is not None:
                                            return True

                                        if self.cross_connect_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pseuodo_wire_connect_id is not None:
                                            return True

                                        if self.split_horizon_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                                class IpSubData(object):
                                    """
                                    ip sub data
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	VRF table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.out_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.out_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData']['meta_info']


                                class PseudowireHeadEndData(object):
                                    """
                                    pseudowire head end data
                                    
                                    .. attribute:: control_word
                                    
                                    	Is control word present
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: imposition
                                    
                                    	Is PWHE IMposition
                                    	**type**\:  int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: pw_list_id
                                    
                                    	Pseudo\-wire List Identifier
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: pwhe_interface
                                    
                                    	Pseudo\-wire Head\-end interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: vctype
                                    
                                    	Virtual Circuit Type
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.control_word = None
                                        self.imposition = None
                                        self.ipv4_next_hop = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.path_flags_decode = None
                                        self.pw_list_id = None
                                        self.pwhe_interface = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.vctype = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.control_word is not None:
                                            return True

                                        if self.imposition is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.pw_list_id is not None:
                                            return True

                                        if self.pwhe_interface is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.vctype is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                                class PwListData(object):
                                    """
                                    pw list data
                                    
                                    .. attribute:: l2_interface
                                    
                                    	Pseudo\-wire Layer 2 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: l3_interface
                                    
                                    	Pseudo\-wire Layer 3 interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.l2_interface = None
                                        self.l3_interface = None
                                        self.path_flags_decode = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.l2_interface is not None:
                                            return True

                                        if self.l3_interface is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData']['meta_info']


                                class Stackv4Data(object):
                                    """
                                    stackv4 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                    
                                    .. attribute:: owner_application_type
                                    
                                    	Owner application type
                                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                        self.nexthop.parent = self
                                        self.owner_application_type = None


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv4_next_hop
                                        
                                        	IPv4 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: load_metric
                                        
                                        	Routing path's load metric
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: local_label
                                        
                                        	TE backup path local label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing Interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_interface_parent
                                        
                                        	Outgoing Interface's parent
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        .. attribute:: tunnel_id
                                        
                                        	Tunnel ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv4_next_hop = None
                                            self.load_metric = None
                                            self.local_label = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_interface_parent = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None
                                            self.tunnel_id = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv4_next_hop is not None:
                                                return True

                                            if self.load_metric is not None:
                                                return True

                                            if self.local_label is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_interface_parent is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            if self.tunnel_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        if self.owner_application_type is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                                class Stackv6Data(object):
                                    """
                                    stackv6 data
                                    
                                    .. attribute:: inner_stack
                                    
                                    	Inner stack
                                    	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Nexthop
                                    	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.inner_stack = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                        self.inner_stack.parent = self
                                        self.nexthop = MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                        self.nexthop.parent = self


                                    class Nexthop(object):
                                        """
                                        Nexthop
                                        
                                        .. attribute:: backup_path_id
                                        
                                        	Routing path backup id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: ipv6_next_hop
                                        
                                        	IPv6 nexthop
                                        	**type**\:  str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: next_hop_id
                                        
                                        	Next hop ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_interface
                                        
                                        	Outgoing interface
                                        	**type**\:  str
                                        
                                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                        
                                        .. attribute:: out_label
                                        
                                        	Outgoing label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: out_label_name
                                        
                                        	Outgoing label name
                                        	**type**\:  str
                                        
                                        .. attribute:: path_flags_decode
                                        
                                        	Path flag decoded string
                                        	**type**\:  str
                                        
                                        .. attribute:: path_id
                                        
                                        	Routing path id
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_name
                                        
                                        	VRF table name
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.backup_path_id = None
                                            self.ipv6_next_hop = None
                                            self.next_hop_id = None
                                            self.out_interface = None
                                            self.out_label = None
                                            self.out_label_name = None
                                            self.path_flags_decode = None
                                            self.path_id = None
                                            self.table_id = None
                                            self.table_name = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.backup_path_id is not None:
                                                return True

                                            if self.ipv6_next_hop is not None:
                                                return True

                                            if self.next_hop_id is not None:
                                                return True

                                            if self.out_interface is not None:
                                                return True

                                            if self.out_label is not None:
                                                return True

                                            if self.out_label_name is not None:
                                                return True

                                            if self.path_flags_decode is not None:
                                                return True

                                            if self.path_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.table_name is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                    class InnerStack(object):
                                        """
                                        Inner stack
                                        
                                        .. attribute:: label
                                        
                                        	Info related to outgoing labels
                                        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                        
                                        .. attribute:: nexthop
                                        
                                        	Remote nexthop addresses
                                        	**type**\:  list of str
                                        
                                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                        
                                        .. attribute:: num_lbls
                                        
                                        	Depth of inner label stack
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: num_nexthops
                                        
                                        	Number of remote nexthop addresses
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.label = YList()
                                            self.label.parent = self
                                            self.label.name = 'label'
                                            self.nexthop = YLeafList()
                                            self.nexthop.parent = self
                                            self.nexthop.name = 'nexthop'
                                            self.num_lbls = None
                                            self.num_nexthops = None


                                        class Label(object):
                                            """
                                            Info related to outgoing labels
                                            
                                            .. attribute:: outgoing_label
                                            
                                            	Remote Label
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: outgoing_label_str
                                            
                                            	Remote Label string
                                            	**type**\:  str
                                            
                                            

                                            """

                                            _prefix = 'mpls-lsd-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.outgoing_label = None
                                                self.outgoing_label_str = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.outgoing_label is not None:
                                                    return True

                                                if self.outgoing_label_str is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.label is not None:
                                                for child_ref in self.label:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.nexthop is not None:
                                                for child in self.nexthop:
                                                    if child is not None:
                                                        return True

                                            if self.num_lbls is not None:
                                                return True

                                            if self.num_nexthops is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.inner_stack is not None and self.inner_stack._has_data():
                                            return True

                                        if self.nexthop is not None and self.nexthop._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                                class TeHeadData(object):
                                    """
                                    te head data
                                    
                                    .. attribute:: flags_decode
                                    
                                    	Flags decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_fwd_class
                                    
                                    	Tunnel forwarding class
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: tunnel_load_metric
                                    
                                    	Tunnel Load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label
                                    
                                    	Tunnel local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: tunnel_local_label_str
                                    
                                    	Tunnel local label stringified
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.flags_decode = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_fwd_class = None
                                        self.tunnel_load_metric = None
                                        self.tunnel_local_label = None
                                        self.tunnel_local_label_str = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.flags_decode is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_fwd_class is not None:
                                            return True

                                        if self.tunnel_load_metric is not None:
                                            return True

                                        if self.tunnel_local_label is not None:
                                            return True

                                        if self.tunnel_local_label_str is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                                class DmtcData(object):
                                    """
                                    dmtc data
                                    
                                    .. attribute:: dmtc_ext_ifh
                                    
                                    	DMTC External Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.dmtc_ext_ifh = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.dmtc_ext_ifh is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_data is not None and self.dmtc_data._has_data():
                                        return True

                                    if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                        return True

                                    if self.ipv4_data is not None and self.ipv4_data._has_data():
                                        return True

                                    if self.ipv6_data is not None and self.ipv6_data._has_data():
                                        return True

                                    if self.moi_type is not None:
                                        return True

                                    if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                        return True

                                    if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                        return True

                                    if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                        return True

                                    if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                        return True

                                    if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                        return True

                                    if self.pw_list_data is not None and self.pw_list_data._has_data():
                                        return True

                                    if self.stackv4_data is not None and self.stackv4_data._has_data():
                                        return True

                                    if self.stackv6_data is not None and self.stackv6_data._has_data():
                                        return True

                                    if self.te_head_data is not None and self.te_head_data._has_data():
                                        return True

                                    if self.tev4_data is not None and self.tev4_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.moi is not None and self.moi._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_resource is not None and self.application_resource._has_data():
                                return True

                            if self.moi_array is not None:
                                for child_ref in self.moi_array:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel.Mois']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.label_id is None:
                            raise YPYModelError('Key property label_id is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-label[Cisco-IOS-XR-mpls-lsd-oper:label-id = ' + str(self.label_id) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.label_id is not None:
                            return True

                        if self.associated_fpi is not None:
                            for child_ref in self.associated_fpi:
                                if child_ref._has_data():
                                    return True

                        if self.bcdl_priority is not None:
                            return True

                        if self.fpi_key is not None and self.fpi_key._has_data():
                            return True

                        if self.lsd_queue is not None:
                            return True

                        if self.mois is not None:
                            for child_ref in self.mois:
                                if child_ref._has_data():
                                    return True

                        if self.priority_updated is not None:
                            return True

                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        if self.rewrite_version is not None:
                            return True

                        if self.rw_install_age is not None:
                            return True

                        if self.rw_install_time is not None:
                            return True

                        if self.rw_updated is not None:
                            return True

                        if self.v4_rpf is not None:
                            for child_ref in self.v4_rpf:
                                if child_ref._has_data():
                                    return True

                        if self.v6_rpf is not None:
                            for child_ref in self.v6_rpf:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels.RewriteLabel']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-labels'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.rewrite_label is not None:
                        for child_ref in self.rewrite_label:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite.RewriteLabels']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_ipv4s is not None and self.rewrite_ipv4s._has_data():
                    return True

                if self.rewrite_labels is not None and self.rewrite_labels._has_data():
                    return True

                if self.rewrite_pws is not None and self.rewrite_pws._has_data():
                    return True

                if self.rewrite_tes is not None and self.rewrite_tes._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Rewrite']['meta_info']


        class RewriteSummary(object):
            """
            Rewrite Summary 
            
            .. attribute:: ipv4_paths
            
            	Count for IPv4 paths
            	**type**\:   :py:class:`Ipv4Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv4Paths>`
            
            .. attribute:: ipv6_paths
            
            	Count for IPv6 paths
            	**type**\:   :py:class:`Ipv6Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv6Paths>`
            
            .. attribute:: num_dmtctefpi
            
            	Number of DMTC FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_ipv4fpi
            
            	Number of IPv4 FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_ipv6fpi
            
            	Number of IPv6 FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_label_fpi
            
            	Number of label FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_pw_list_tefpi
            
            	Number of PW List FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_rewrite
            
            	Number of rewrites
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_rewrite_rpf_neighbors
            
            	Number of rewrites with RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_tefpi
            
            	Number of TE FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_dmtc_intf
            
            	Total number of DMTC External Interfaces
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_forwad_update_message
            
            	Total number of forward update messages
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_forward_update
            
            	Total number of forward updates
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ip_sub_paths
            
            	Total number of IP Subscriber paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ipv4rpf_neighbors
            
            	Total number of IPv4 RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ipv6rpf_neighbors
            
            	Total number of IPv6 RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_paths
            
            	Total paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_pw_paths
            
            	Total number of Pseudo\-wire paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_t_ev4_paths
            
            	Total number of Traffic Eng IPv4 paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_te_head_paths
            
            	Total number of Traffic Eng Head paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: vrf_name_xr
            
            	VRF Name
            	**type**\:  str
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.ipv4_paths = MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv4Paths()
                self.ipv4_paths.parent = self
                self.ipv6_paths = MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv6Paths()
                self.ipv6_paths.parent = self
                self.num_dmtctefpi = None
                self.num_ipv4fpi = None
                self.num_ipv6fpi = None
                self.num_label_fpi = None
                self.num_pw_list_tefpi = None
                self.num_rewrite = None
                self.num_rewrite_rpf_neighbors = None
                self.num_tefpi = None
                self.total_dmtc_intf = None
                self.total_forwad_update_message = None
                self.total_forward_update = None
                self.total_ip_sub_paths = None
                self.total_ipv4rpf_neighbors = None
                self.total_ipv6rpf_neighbors = None
                self.total_paths = None
                self.total_pw_paths = None
                self.total_t_ev4_paths = None
                self.total_te_head_paths = None
                self.vrf_name_xr = None


            class Ipv4Paths(object):
                """
                Count for IPv4 paths
                
                .. attribute:: total_backup_paths
                
                	Total number of non\-primary backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_paths
                
                	Total number of IP paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_pop_lkup_paths
                
                	Total number of Pop\-and\-Lookup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_protected_paths
                
                	Total number of protected paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_remote_backup_paths
                
                	Total number of remote backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.total_backup_paths = None
                    self.total_paths = None
                    self.total_pop_lkup_paths = None
                    self.total_protected_paths = None
                    self.total_remote_backup_paths = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-paths'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.total_backup_paths is not None:
                        return True

                    if self.total_paths is not None:
                        return True

                    if self.total_pop_lkup_paths is not None:
                        return True

                    if self.total_protected_paths is not None:
                        return True

                    if self.total_remote_backup_paths is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv4Paths']['meta_info']


            class Ipv6Paths(object):
                """
                Count for IPv6 paths
                
                .. attribute:: total_backup_paths
                
                	Total number of non\-primary backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_paths
                
                	Total number of IP paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_pop_lkup_paths
                
                	Total number of Pop\-and\-Lookup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_protected_paths
                
                	Total number of protected paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_remote_backup_paths
                
                	Total number of remote backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.total_backup_paths = None
                    self.total_paths = None
                    self.total_pop_lkup_paths = None
                    self.total_protected_paths = None
                    self.total_remote_backup_paths = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-paths'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.total_backup_paths is not None:
                        return True

                    if self.total_paths is not None:
                        return True

                    if self.total_pop_lkup_paths is not None:
                        return True

                    if self.total_protected_paths is not None:
                        return True

                    if self.total_remote_backup_paths is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummary.Ipv6Paths']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.ipv4_paths is not None and self.ipv4_paths._has_data():
                    return True

                if self.ipv6_paths is not None and self.ipv6_paths._has_data():
                    return True

                if self.num_dmtctefpi is not None:
                    return True

                if self.num_ipv4fpi is not None:
                    return True

                if self.num_ipv6fpi is not None:
                    return True

                if self.num_label_fpi is not None:
                    return True

                if self.num_pw_list_tefpi is not None:
                    return True

                if self.num_rewrite is not None:
                    return True

                if self.num_rewrite_rpf_neighbors is not None:
                    return True

                if self.num_tefpi is not None:
                    return True

                if self.total_dmtc_intf is not None:
                    return True

                if self.total_forwad_update_message is not None:
                    return True

                if self.total_forward_update is not None:
                    return True

                if self.total_ip_sub_paths is not None:
                    return True

                if self.total_ipv4rpf_neighbors is not None:
                    return True

                if self.total_ipv6rpf_neighbors is not None:
                    return True

                if self.total_paths is not None:
                    return True

                if self.total_pw_paths is not None:
                    return True

                if self.total_t_ev4_paths is not None:
                    return True

                if self.total_te_head_paths is not None:
                    return True

                if self.vrf_name_xr is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummary']['meta_info']


        class Applications(object):
            """
            Table of MPLS applications using LSD
            
            .. attribute:: application
            
            	Data for MPLS application using LSD
            	**type**\: list of    :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Applications.Application>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.application = YList()
                self.application.parent = self
                self.application.name = 'application'


            class Application(object):
                """
                Data for MPLS application using LSD
                
                .. attribute:: application_name  <key>
                
                	Application Instance name in the form of '<app\_type\_name>[\:<instance>]'
                	**type**\:  str
                
                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                
                .. attribute:: app_disconnect_time
                
                	App disconnect ts
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: app_flow_controlled
                
                	App flow control status
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: app_reg_time
                
                	App reg ts
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: application_instance
                
                	client\-app instance
                	**type**\:  str
                
                .. attribute:: application_name_xr
                
                	Application name
                	**type**\:  str
                
                .. attribute:: application_role_primary
                
                	Primary/Backup role
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_state
                
                	Application state
                	**type**\:   :py:class:`MgmtLsdAppStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppStateEnum>`
                
                .. attribute:: application_statistics
                
                	Application Statistics
                	**type**\:   :py:class:`ApplicationStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics>`
                
                .. attribute:: application_type
                
                	Application type
                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                
                .. attribute:: flow_ctrl_clr_time
                
                	Flow Ctrl Clr ts
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: flow_ctrl_time
                
                	Flow Ctrl ts
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: go_act_ts
                
                	App go active timestamp
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: node_id
                
                	Node ID where application is/was running
                	**type**\:  str
                
                	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
                
                .. attribute:: recovery_time_elapsed_seconds
                
                	Recovery time [secs] elapsed if client is timing out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: recovery_time_register_seconds
                
                	Recovery time [secs] specified at registration or set explicitly
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: recovery_time_remaining_seconds
                
                	Recovery time [secs] remaining if client is timing out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_name = None
                    self.app_disconnect_time = None
                    self.app_flow_controlled = None
                    self.app_reg_time = None
                    self.application_instance = None
                    self.application_name_xr = None
                    self.application_role_primary = None
                    self.application_state = None
                    self.application_statistics = MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics()
                    self.application_statistics.parent = self
                    self.application_type = None
                    self.flow_ctrl_clr_time = None
                    self.flow_ctrl_time = None
                    self.go_act_ts = None
                    self.node_id = None
                    self.recovery_time_elapsed_seconds = None
                    self.recovery_time_register_seconds = None
                    self.recovery_time_remaining_seconds = None


                class ApplicationStatistics(object):
                    """
                    Application Statistics
                    
                    .. attribute:: connect_count
                    
                    	Connect count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: connected
                    
                    	Connected statistics
                    	**type**\:   :py:class:`Connected <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics.Connected>`
                    
                    .. attribute:: interface_enable
                    
                    	Number of interface enabled
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_enable_pending
                    
                    	Number of interface enable pending
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: label_context_count
                    
                    	Label context count
                    	**type**\:  list of int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: label_context_pending_count
                    
                    	Label context pending count
                    	**type**\:  list of int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.connect_count = None
                        self.connected = MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics.Connected()
                        self.connected.parent = self
                        self.interface_enable = None
                        self.interface_enable_pending = None
                        self.label_context_count = YLeafList()
                        self.label_context_count.parent = self
                        self.label_context_count.name = 'label_context_count'
                        self.label_context_pending_count = YLeafList()
                        self.label_context_pending_count.parent = self
                        self.label_context_pending_count.name = 'label_context_pending_count'


                    class Connected(object):
                        """
                        Connected statistics
                        
                        .. attribute:: error_msg_count
                        
                        	Error count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: oor_label_count
                        
                        	Label OOR count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: operation_msg_count
                        
                        	Operation count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rt_set_msg_count
                        
                        	RT set count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.error_msg_count = None
                            self.oor_label_count = None
                            self.operation_msg_count = None
                            self.rt_set_msg_count = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:connected'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.error_msg_count is not None:
                                return True

                            if self.oor_label_count is not None:
                                return True

                            if self.operation_msg_count is not None:
                                return True

                            if self.rt_set_msg_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics.Connected']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-statistics'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.connect_count is not None:
                            return True

                        if self.connected is not None and self.connected._has_data():
                            return True

                        if self.interface_enable is not None:
                            return True

                        if self.interface_enable_pending is not None:
                            return True

                        if self.label_context_count is not None:
                            for child in self.label_context_count:
                                if child is not None:
                                    return True

                        if self.label_context_pending_count is not None:
                            for child in self.label_context_pending_count:
                                if child is not None:
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Applications.Application.ApplicationStatistics']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.application_name is None:
                        raise YPYModelError('Key property application_name is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application[Cisco-IOS-XR-mpls-lsd-oper:application-name = ' + str(self.application_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_name is not None:
                        return True

                    if self.app_disconnect_time is not None:
                        return True

                    if self.app_flow_controlled is not None:
                        return True

                    if self.app_reg_time is not None:
                        return True

                    if self.application_instance is not None:
                        return True

                    if self.application_name_xr is not None:
                        return True

                    if self.application_role_primary is not None:
                        return True

                    if self.application_state is not None:
                        return True

                    if self.application_statistics is not None and self.application_statistics._has_data():
                        return True

                    if self.application_type is not None:
                        return True

                    if self.flow_ctrl_clr_time is not None:
                        return True

                    if self.flow_ctrl_time is not None:
                        return True

                    if self.go_act_ts is not None:
                        return True

                    if self.node_id is not None:
                        return True

                    if self.recovery_time_elapsed_seconds is not None:
                        return True

                    if self.recovery_time_register_seconds is not None:
                        return True

                    if self.recovery_time_remaining_seconds is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Applications.Application']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:applications'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.application is not None:
                    for child_ref in self.application:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Applications']['meta_info']


        class LabelSummaryVrfs(object):
            """
            Dynamic label range summary by VRF
            
            .. attribute:: label_summary_vrf
            
            	Dynamic label range summary by VRF
            	**type**\: list of    :py:class:`LabelSummaryVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs.LabelSummaryVrf>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.label_summary_vrf = YList()
                self.label_summary_vrf.parent = self
                self.label_summary_vrf.name = 'label_summary_vrf'


            class LabelSummaryVrf(object):
                """
                Dynamic label range summary by VRF
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                
                .. attribute:: owner_count
                
                	Owner counts
                	**type**\: list of    :py:class:`OwnerCount <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs.LabelSummaryVrf.OwnerCount>`
                
                .. attribute:: rsi_connected
                
                	Rsi connected
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: total_labels
                
                	Total labels
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: vrf_name_xr
                
                	VRF Name
                	**type**\:  str
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.owner_count = YList()
                    self.owner_count.parent = self
                    self.owner_count.name = 'owner_count'
                    self.rsi_connected = None
                    self.total_labels = None
                    self.vrf_name_xr = None


                class OwnerCount(object):
                    """
                    Owner counts
                    
                    .. attribute:: application_instance
                    
                    	client\-app identifier
                    	**type**\:  str
                    
                    .. attribute:: application_name
                    
                    	Application name
                    	**type**\:  str
                    
                    .. attribute:: application_role_primary
                    
                    	Primary/Backup role
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: application_type
                    
                    	Application type
                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                    
                    .. attribute:: number_of_labels
                    
                    	Number of labels
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_instance = None
                        self.application_name = None
                        self.application_role_primary = None
                        self.application_type = None
                        self.number_of_labels = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:owner-count'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_instance is not None:
                            return True

                        if self.application_name is not None:
                            return True

                        if self.application_role_primary is not None:
                            return True

                        if self.application_type is not None:
                            return True

                        if self.number_of_labels is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs.LabelSummaryVrf.OwnerCount']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-summary-vrf[Cisco-IOS-XR-mpls-lsd-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrf_name is not None:
                        return True

                    if self.owner_count is not None:
                        for child_ref in self.owner_count:
                            if child_ref._has_data():
                                return True

                    if self.rsi_connected is not None:
                        return True

                    if self.total_labels is not None:
                        return True

                    if self.vrf_name_xr is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs.LabelSummaryVrf']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-summary-vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.label_summary_vrf is not None:
                    for child_ref in self.label_summary_vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelSummaryVrfs']['meta_info']


        class LabelRange(object):
            """
            Label range
            
            .. attribute:: max_dynamic_label_value
            
            	Maximum dynamic label value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: max_static_label_value
            
            	Maximum static label value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: min_dynamic_label_value
            
            	Minimum dynamic label value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: min_static_label_value
            
            	Minimum static label value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.max_dynamic_label_value = None
                self.max_static_label_value = None
                self.min_dynamic_label_value = None
                self.min_static_label_value = None

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-range'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.max_dynamic_label_value is not None:
                    return True

                if self.max_static_label_value is not None:
                    return True

                if self.min_dynamic_label_value is not None:
                    return True

                if self.min_static_label_value is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.LabelRange']['meta_info']


        class RewriteSummaryVrfs(object):
            """
            Rewrite Summary by VRF
            
            .. attribute:: rewrite_summary_vrf
            
            	Rewrite summary by VRF VRF\-name
            	**type**\: list of    :py:class:`RewriteSummaryVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_summary_vrf = YList()
                self.rewrite_summary_vrf.parent = self
                self.rewrite_summary_vrf.name = 'rewrite_summary_vrf'


            class RewriteSummaryVrf(object):
                """
                Rewrite summary by VRF VRF\-name
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                
                .. attribute:: ipv4_paths
                
                	Count for IPv4 paths
                	**type**\:   :py:class:`Ipv4Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths>`
                
                .. attribute:: ipv6_paths
                
                	Count for IPv6 paths
                	**type**\:   :py:class:`Ipv6Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths>`
                
                .. attribute:: num_dmtctefpi
                
                	Number of DMTC FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_ipv4fpi
                
                	Number of IPv4 FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_ipv6fpi
                
                	Number of IPv6 FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_label_fpi
                
                	Number of label FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_pw_list_tefpi
                
                	Number of PW List FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_rewrite
                
                	Number of rewrites
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_rewrite_rpf_neighbors
                
                	Number of rewrites with RPF Neighbors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: num_tefpi
                
                	Number of TE FPI
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_dmtc_intf
                
                	Total number of DMTC External Interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forwad_update_message
                
                	Total number of forward update messages
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_forward_update
                
                	Total number of forward updates
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_ip_sub_paths
                
                	Total number of IP Subscriber paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_ipv4rpf_neighbors
                
                	Total number of IPv4 RPF Neighbors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_ipv6rpf_neighbors
                
                	Total number of IPv6 RPF Neighbors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_paths
                
                	Total paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_pw_paths
                
                	Total number of Pseudo\-wire paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_t_ev4_paths
                
                	Total number of Traffic Eng IPv4 paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_te_head_paths
                
                	Total number of Traffic Eng Head paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: vrf_name_xr
                
                	VRF Name
                	**type**\:  str
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.ipv4_paths = MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths()
                    self.ipv4_paths.parent = self
                    self.ipv6_paths = MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths()
                    self.ipv6_paths.parent = self
                    self.num_dmtctefpi = None
                    self.num_ipv4fpi = None
                    self.num_ipv6fpi = None
                    self.num_label_fpi = None
                    self.num_pw_list_tefpi = None
                    self.num_rewrite = None
                    self.num_rewrite_rpf_neighbors = None
                    self.num_tefpi = None
                    self.total_dmtc_intf = None
                    self.total_forwad_update_message = None
                    self.total_forward_update = None
                    self.total_ip_sub_paths = None
                    self.total_ipv4rpf_neighbors = None
                    self.total_ipv6rpf_neighbors = None
                    self.total_paths = None
                    self.total_pw_paths = None
                    self.total_t_ev4_paths = None
                    self.total_te_head_paths = None
                    self.vrf_name_xr = None


                class Ipv4Paths(object):
                    """
                    Count for IPv4 paths
                    
                    .. attribute:: total_backup_paths
                    
                    	Total number of non\-primary backup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_paths
                    
                    	Total number of IP paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_pop_lkup_paths
                    
                    	Total number of Pop\-and\-Lookup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_protected_paths
                    
                    	Total number of protected paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_remote_backup_paths
                    
                    	Total number of remote backup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.total_backup_paths = None
                        self.total_paths = None
                        self.total_pop_lkup_paths = None
                        self.total_protected_paths = None
                        self.total_remote_backup_paths = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-paths'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.total_backup_paths is not None:
                            return True

                        if self.total_paths is not None:
                            return True

                        if self.total_pop_lkup_paths is not None:
                            return True

                        if self.total_protected_paths is not None:
                            return True

                        if self.total_remote_backup_paths is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths']['meta_info']


                class Ipv6Paths(object):
                    """
                    Count for IPv6 paths
                    
                    .. attribute:: total_backup_paths
                    
                    	Total number of non\-primary backup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_paths
                    
                    	Total number of IP paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_pop_lkup_paths
                    
                    	Total number of Pop\-and\-Lookup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_protected_paths
                    
                    	Total number of protected paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_remote_backup_paths
                    
                    	Total number of remote backup paths
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.total_backup_paths = None
                        self.total_paths = None
                        self.total_pop_lkup_paths = None
                        self.total_protected_paths = None
                        self.total_remote_backup_paths = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-paths'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.total_backup_paths is not None:
                            return True

                        if self.total_paths is not None:
                            return True

                        if self.total_pop_lkup_paths is not None:
                            return True

                        if self.total_protected_paths is not None:
                            return True

                        if self.total_remote_backup_paths is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary-vrf[Cisco-IOS-XR-mpls-lsd-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.vrf_name is not None:
                        return True

                    if self.ipv4_paths is not None and self.ipv4_paths._has_data():
                        return True

                    if self.ipv6_paths is not None and self.ipv6_paths._has_data():
                        return True

                    if self.num_dmtctefpi is not None:
                        return True

                    if self.num_ipv4fpi is not None:
                        return True

                    if self.num_ipv6fpi is not None:
                        return True

                    if self.num_label_fpi is not None:
                        return True

                    if self.num_pw_list_tefpi is not None:
                        return True

                    if self.num_rewrite is not None:
                        return True

                    if self.num_rewrite_rpf_neighbors is not None:
                        return True

                    if self.num_tefpi is not None:
                        return True

                    if self.total_dmtc_intf is not None:
                        return True

                    if self.total_forwad_update_message is not None:
                        return True

                    if self.total_forward_update is not None:
                        return True

                    if self.total_ip_sub_paths is not None:
                        return True

                    if self.total_ipv4rpf_neighbors is not None:
                        return True

                    if self.total_ipv6rpf_neighbors is not None:
                        return True

                    if self.total_paths is not None:
                        return True

                    if self.total_pw_paths is not None:
                        return True

                    if self.total_t_ev4_paths is not None:
                        return True

                    if self.total_te_head_paths is not None:
                        return True

                    if self.vrf_name_xr is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs.RewriteSummaryVrf']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary-vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_summary_vrf is not None:
                    for child_ref in self.rewrite_summary_vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.RewriteSummaryVrfs']['meta_info']


        class Interfaces(object):
            """
            Table of MPLS interfaces
            
            .. attribute:: interface
            
            	Data for MPLS interface
            	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Interfaces.Interface>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.interface = YList()
                self.interface.parent = self
                self.interface.name = 'interface'


            class Interface(object):
                """
                Data for MPLS interface
                
                .. attribute:: interface_name  <key>
                
                	Interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: application_owner
                
                	Application Owner
                	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsdNodes.MplsLsdNode.Interfaces.Interface.ApplicationOwner>`
                
                .. attribute:: interface
                
                	Interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: interface_state
                
                	Interface state
                	**type**\:   :py:class:`MgmtLsdIntfStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdIntfStateEnum>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_name = None
                    self.application_owner = YList()
                    self.application_owner.parent = self
                    self.application_owner.name = 'application_owner'
                    self.interface = None
                    self.interface_state = None


                class ApplicationOwner(object):
                    """
                    Application Owner
                    
                    .. attribute:: application_instance
                    
                    	Application instance Name
                    	**type**\:  str
                    
                    .. attribute:: application_name
                    
                    	Application name
                    	**type**\:  str
                    
                    .. attribute:: application_role_primary
                    
                    	Primary/Backup role
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: application_type
                    
                    	Application type
                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                    
                    .. attribute:: resource_state
                    
                    	Application resource state
                    	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_instance = None
                        self.application_name = None
                        self.application_role_primary = None
                        self.application_type = None
                        self.resource_state = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_instance is not None:
                            return True

                        if self.application_name is not None:
                            return True

                        if self.application_role_primary is not None:
                            return True

                        if self.application_type is not None:
                            return True

                        if self.resource_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsdNodes.MplsLsdNode.Interfaces.Interface.ApplicationOwner']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')
                    if self.interface_name is None:
                        raise YPYModelError('Key property interface_name is None')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:interface[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface_name is not None:
                        return True

                    if self.application_owner is not None:
                        for child_ref in self.application_owner:
                            if child_ref._has_data():
                                return True

                    if self.interface is not None:
                        return True

                    if self.interface_state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsdNodes.MplsLsdNode.Interfaces.Interface']['meta_info']

            @property
            def _common_path(self):
                if self.parent is None:
                    raise YPYModelError('parent is not set . Cannot derive path.')

                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:interfaces'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.interface is not None:
                    for child_ref in self.interface:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsdNodes.MplsLsdNode.Interfaces']['meta_info']

        @property
        def _common_path(self):
            if self.node_name is None:
                raise YPYModelError('Key property node_name is None')

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd-nodes/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd-node[Cisco-IOS-XR-mpls-lsd-oper:node-name = ' + str(self.node_name) + ']'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node_name is not None:
                return True

            if self.applications is not None and self.applications._has_data():
                return True

            if self.clients is not None and self.clients._has_data():
                return True

            if self.frr_database is not None and self.frr_database._has_data():
                return True

            if self.interfaces is not None and self.interfaces._has_data():
                return True

            if self.label_range is not None and self.label_range._has_data():
                return True

            if self.label_summary is not None and self.label_summary._has_data():
                return True

            if self.label_summary_vrfs is not None and self.label_summary_vrfs._has_data():
                return True

            if self.labels is not None and self.labels._has_data():
                return True

            if self.rewrite is not None and self.rewrite._has_data():
                return True

            if self.rewrite_summary is not None and self.rewrite_summary._has_data():
                return True

            if self.rewrite_summary_vrfs is not None and self.rewrite_summary_vrfs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsdNodes.MplsLsdNode']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd-nodes'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.mpls_lsd_node is not None:
            for child_ref in self.mpls_lsd_node:
                if child_ref._has_data():
                    return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MplsLsdNodes']['meta_info']


class MplsLsd(object):
    """
    mpls lsd
    
    .. attribute:: applications
    
    	Table of MPLS applications using LSD
    	**type**\:   :py:class:`Applications <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Applications>`
    
    .. attribute:: clients
    
    	Table of MPLS clients using LSD
    	**type**\:   :py:class:`Clients <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Clients>`
    
    .. attribute:: frr_database
    
    	FRR database
    	**type**\:   :py:class:`FrrDatabase <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase>`
    
    .. attribute:: interfaces
    
    	Table of MPLS interfaces
    	**type**\:   :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Interfaces>`
    
    .. attribute:: label_range
    
    	Label range
    	**type**\:   :py:class:`LabelRange <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelRange>`
    
    .. attribute:: label_summary
    
    	Dynamic label range
    	**type**\:   :py:class:`LabelSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelSummary>`
    
    .. attribute:: label_summary_vrfs
    
    	Dynamic label range summary by VRF
    	**type**\:   :py:class:`LabelSummaryVrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelSummaryVrfs>`
    
    .. attribute:: labels
    
    	Table of labels
    	**type**\:   :py:class:`Labels <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels>`
    
    .. attribute:: rewrite
    
    	Table of rewrites
    	**type**\:   :py:class:`Rewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite>`
    
    .. attribute:: rewrite_summary
    
    	Rewrite Summary 
    	**type**\:   :py:class:`RewriteSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummary>`
    
    .. attribute:: rewrite_summary_vrfs
    
    	Rewrite Summary by VRF
    	**type**\:   :py:class:`RewriteSummaryVrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummaryVrfs>`
    
    

    """

    _prefix = 'mpls-lsd-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.applications = MplsLsd.Applications()
        self.applications.parent = self
        self.clients = MplsLsd.Clients()
        self.clients.parent = self
        self.frr_database = MplsLsd.FrrDatabase()
        self.frr_database.parent = self
        self.interfaces = MplsLsd.Interfaces()
        self.interfaces.parent = self
        self.label_range = MplsLsd.LabelRange()
        self.label_range.parent = self
        self.label_summary = MplsLsd.LabelSummary()
        self.label_summary.parent = self
        self.label_summary_vrfs = MplsLsd.LabelSummaryVrfs()
        self.label_summary_vrfs.parent = self
        self.labels = MplsLsd.Labels()
        self.labels.parent = self
        self.rewrite = MplsLsd.Rewrite()
        self.rewrite.parent = self
        self.rewrite_summary = MplsLsd.RewriteSummary()
        self.rewrite_summary.parent = self
        self.rewrite_summary_vrfs = MplsLsd.RewriteSummaryVrfs()
        self.rewrite_summary_vrfs.parent = self


    class Clients(object):
        """
        Table of MPLS clients using LSD
        
        .. attribute:: client
        
        	Data for MPLS client using LSD
        	**type**\: list of    :py:class:`Client <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Clients.Client>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.client = YList()
            self.client.parent = self
            self.client.name = 'client'


        class Client(object):
            """
            Data for MPLS client using LSD
            
            .. attribute:: client_name  <key>
            
            	Client Instance name in the form of     'Application\-<client\_name>' or      'BCDL\_Agent\-<index\:parent\_index>'
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: client_index
            
            	Client Index Value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: client_union
            
            	Client union
            	**type**\:   :py:class:`ClientUnion <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Clients.Client.ClientUnion>`
            
            .. attribute:: node_id
            
            	Node ID
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.client_name = None
                self.client_index = None
                self.client_union = MplsLsd.Clients.Client.ClientUnion()
                self.client_union.parent = self
                self.node_id = None


            class ClientUnion(object):
                """
                Client union
                
                .. attribute:: application
                
                	Application client
                	**type**\:   :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Clients.Client.ClientUnion.Application>`
                
                .. attribute:: bcdl_agent
                
                	BCDL agent client
                	**type**\:   :py:class:`BcdlAgent <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Clients.Client.ClientUnion.BcdlAgent>`
                
                .. attribute:: lsd_client_type
                
                	LSDClientType
                	**type**\:   :py:class:`MgmtLsdClientEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdClientEnum>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application = MplsLsd.Clients.Client.ClientUnion.Application()
                    self.application.parent = self
                    self.bcdl_agent = MplsLsd.Clients.Client.ClientUnion.BcdlAgent()
                    self.bcdl_agent.parent = self
                    self.lsd_client_type = None


                class Application(object):
                    """
                    Application client
                    
                    .. attribute:: application_instance
                    
                    	client\-app instance
                    	**type**\:  str
                    
                    .. attribute:: application_name
                    
                    	Application name
                    	**type**\:  str
                    
                    .. attribute:: application_role_primary
                    
                    	Primary/Backup role
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: application_type
                    
                    	Application type
                    	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_instance = None
                        self.application_name = None
                        self.application_role_primary = None
                        self.application_type = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_instance is not None:
                            return True

                        if self.application_name is not None:
                            return True

                        if self.application_role_primary is not None:
                            return True

                        if self.application_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Clients.Client.ClientUnion.Application']['meta_info']


                class BcdlAgent(object):
                    """
                    BCDL agent client
                    
                    .. attribute:: client_conn_index
                    
                    	BCDL Agent client connection index
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: parent_client_conn_index
                    
                    	BCDL Agent parent client connection index
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.client_conn_index = None
                        self.parent_client_conn_index = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:bcdl-agent'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.client_conn_index is not None:
                            return True

                        if self.parent_client_conn_index is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Clients.Client.ClientUnion.BcdlAgent']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:client-union'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application is not None and self.application._has_data():
                        return True

                    if self.bcdl_agent is not None and self.bcdl_agent._has_data():
                        return True

                    if self.lsd_client_type is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Clients.Client.ClientUnion']['meta_info']

            @property
            def _common_path(self):
                if self.client_name is None:
                    raise YPYModelError('Key property client_name is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:clients/Cisco-IOS-XR-mpls-lsd-oper:client[Cisco-IOS-XR-mpls-lsd-oper:client-name = ' + str(self.client_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.client_name is not None:
                    return True

                if self.client_index is not None:
                    return True

                if self.client_union is not None and self.client_union._has_data():
                    return True

                if self.node_id is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Clients.Client']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:clients'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.client is not None:
                for child_ref in self.client:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.Clients']['meta_info']


    class LabelSummary(object):
        """
        Dynamic label range
        
        .. attribute:: owner_count
        
        	Owner counts
        	**type**\: list of    :py:class:`OwnerCount <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelSummary.OwnerCount>`
        
        .. attribute:: rsi_connected
        
        	Rsi connected
        	**type**\:  int
        
        	**range:** \-2147483648..2147483647
        
        .. attribute:: total_labels
        
        	Total labels
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: vrf_name_xr
        
        	VRF Name
        	**type**\:  str
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.owner_count = YList()
            self.owner_count.parent = self
            self.owner_count.name = 'owner_count'
            self.rsi_connected = None
            self.total_labels = None
            self.vrf_name_xr = None


        class OwnerCount(object):
            """
            Owner counts
            
            .. attribute:: application_instance
            
            	client\-app identifier
            	**type**\:  str
            
            .. attribute:: application_name
            
            	Application name
            	**type**\:  str
            
            .. attribute:: application_role_primary
            
            	Primary/Backup role
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: application_type
            
            	Application type
            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
            
            .. attribute:: number_of_labels
            
            	Number of labels
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.application_instance = None
                self.application_name = None
                self.application_role_primary = None
                self.application_type = None
                self.number_of_labels = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:label-summary/Cisco-IOS-XR-mpls-lsd-oper:owner-count'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.application_instance is not None:
                    return True

                if self.application_name is not None:
                    return True

                if self.application_role_primary is not None:
                    return True

                if self.application_type is not None:
                    return True

                if self.number_of_labels is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.LabelSummary.OwnerCount']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:label-summary'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.owner_count is not None:
                for child_ref in self.owner_count:
                    if child_ref._has_data():
                        return True

            if self.rsi_connected is not None:
                return True

            if self.total_labels is not None:
                return True

            if self.vrf_name_xr is not None:
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.LabelSummary']['meta_info']


    class Labels(object):
        """
        Table of labels
        
        .. attribute:: label
        
        	Data for label
        	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.label = YList()
            self.label.parent = self
            self.label.name = 'label'


        class Label(object):
            """
            Data for label
            
            .. attribute:: label_id  <key>
            
            	Label value
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: application_owner
            
            	Application owner
            	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.ApplicationOwner>`
            
            .. attribute:: label
            
            	Label value
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: label_context
            
            	Label context
            	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext>`
            
            .. attribute:: rewrite_is_bound
            
            	Rewrite bound to label
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: rewrite_owners
            
            	Rewrite owner
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: rs_iconnected
            
            	RSI connected
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: vrf_name
            
            	VRF Name
            	**type**\:  str
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.label_id = None
                self.application_owner = YList()
                self.application_owner.parent = self
                self.application_owner.name = 'application_owner'
                self.label = None
                self.label_context = MplsLsd.Labels.Label.LabelContext()
                self.label_context.parent = self
                self.rewrite_is_bound = None
                self.rewrite_owners = None
                self.rs_iconnected = None
                self.vrf_name = None


            class LabelContext(object):
                """
                Label context
                
                .. attribute:: application_data
                
                	Application opaque data
                	**type**\:  str
                
                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                
                .. attribute:: key
                
                	Label Key
                	**type**\:   :py:class:`Key <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_data = None
                    self.key = MplsLsd.Labels.Label.LabelContext.Key()
                    self.key.parent = self


                class Key(object):
                    """
                    Label Key
                    
                    .. attribute:: cev4l3vpn_data
                    
                    	L3VPN CEv4 label context
                    	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Cev4L3VpnData>`
                    
                    .. attribute:: cev6l3vpn_data
                    
                    	L3VPN CEv6 label context
                    	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Cev6L3VpnData>`
                    
                    .. attribute:: evpn_data
                    
                    	EVPN context
                    	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.EvpnData>`
                    
                    .. attribute:: generic_routing_encapsulation
                    
                    	Generic routing encapsulation context
                    	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation>`
                    
                    .. attribute:: ip_sub_data
                    
                    	IP Subscriber context
                    	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.IpSubData>`
                    
                    .. attribute:: ipv4_data
                    
                    	IPv4 label context
                    	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv4Data>`
                    
                    .. attribute:: ipv4blb_data
                    
                    	BFD BLB label context
                    	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv4BlbData>`
                    
                    .. attribute:: ipv4l3vpn_data
                    
                    	L3VPN IPv4 label context
                    	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv4L3VpnData>`
                    
                    .. attribute:: ipv6_data
                    
                    	IPv6 label context
                    	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv6Data>`
                    
                    .. attribute:: ipv6_generic_routing_encapsulation
                    
                    	Generic routing encapsulation context
                    	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation>`
                    
                    .. attribute:: ipv6blb_data
                    
                    	BFD BLB label context
                    	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv6BlbData>`
                    
                    .. attribute:: ipv6l3vpn_data
                    
                    	L3VPN IPv6 label context
                    	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Ipv6L3VpnData>`
                    
                    .. attribute:: label_block_data
                    
                    	Label block context
                    	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.LabelBlockData>`
                    
                    .. attribute:: label_block_srgb_data
                    
                    	Label block SRGB context
                    	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.LabelBlockSrgbData>`
                    
                    .. attribute:: label_context_type
                    
                    	LabelContextType
                    	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                    
                    .. attribute:: mld_pv4_data
                    
                    	MLDPv4 LSM\-ID context
                    	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.MldPv4Data>`
                    
                    .. attribute:: next_hop_set_l3vpn
                    
                    	L3VPN NH SET label context
                    	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.NextHopSetL3Vpn>`
                    
                    .. attribute:: pi_mi_pmsi_data
                    
                    	PIM I\-PMSI label conext
                    	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.PiMiPmsiData>`
                    
                    .. attribute:: pi_ms_pmsi_data
                    
                    	PIM S\-PMSI label conext
                    	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.PiMsPmsiData>`
                    
                    .. attribute:: pseudowire_data
                    
                    	Pseudowire label context
                    	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.PseudowireData>`
                    
                    .. attribute:: pseudowire_head_end_data
                    
                    	Pseudowire Head\-end label context
                    	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.PseudowireHeadEndData>`
                    
                    .. attribute:: sr_adj_segment_ipv4
                    
                    	SR Adj Segment ipv4 context
                    	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4>`
                    
                    .. attribute:: sr_adj_segment_ipv6
                    
                    	SR Adj Segment ipv6 context
                    	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6>`
                    
                    .. attribute:: sr_prefix_segment
                    
                    	SR Prefix Segment context
                    	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.SrPrefixSegment>`
                    
                    .. attribute:: te_binding
                    
                    	MPLS TE tunnel binding context
                    	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.TeBinding>`
                    
                    .. attribute:: tev4_data
                    
                    	TEv4 label context
                    	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Tev4Data>`
                    
                    .. attribute:: tev4p2mp_data
                    
                    	TEv4 P2MP context
                    	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.Tev4P2MpData>`
                    
                    .. attribute:: tp_data
                    
                    	TP context
                    	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.TpData>`
                    
                    .. attribute:: vrf_l3vpn_data
                    
                    	L3VPN VRF label context
                    	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Labels.Label.LabelContext.Key.VrfL3VpnData>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.cev4l3vpn_data = MplsLsd.Labels.Label.LabelContext.Key.Cev4L3VpnData()
                        self.cev4l3vpn_data.parent = self
                        self.cev6l3vpn_data = MplsLsd.Labels.Label.LabelContext.Key.Cev6L3VpnData()
                        self.cev6l3vpn_data.parent = self
                        self.evpn_data = MplsLsd.Labels.Label.LabelContext.Key.EvpnData()
                        self.evpn_data.parent = self
                        self.generic_routing_encapsulation = MplsLsd.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation()
                        self.generic_routing_encapsulation.parent = self
                        self.ip_sub_data = MplsLsd.Labels.Label.LabelContext.Key.IpSubData()
                        self.ip_sub_data.parent = self
                        self.ipv4_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv4Data()
                        self.ipv4_data.parent = self
                        self.ipv4blb_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv4BlbData()
                        self.ipv4blb_data.parent = self
                        self.ipv4l3vpn_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv4L3VpnData()
                        self.ipv4l3vpn_data.parent = self
                        self.ipv6_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv6Data()
                        self.ipv6_data.parent = self
                        self.ipv6_generic_routing_encapsulation = MplsLsd.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation()
                        self.ipv6_generic_routing_encapsulation.parent = self
                        self.ipv6blb_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv6BlbData()
                        self.ipv6blb_data.parent = self
                        self.ipv6l3vpn_data = MplsLsd.Labels.Label.LabelContext.Key.Ipv6L3VpnData()
                        self.ipv6l3vpn_data.parent = self
                        self.label_block_data = MplsLsd.Labels.Label.LabelContext.Key.LabelBlockData()
                        self.label_block_data.parent = self
                        self.label_block_srgb_data = MplsLsd.Labels.Label.LabelContext.Key.LabelBlockSrgbData()
                        self.label_block_srgb_data.parent = self
                        self.label_context_type = None
                        self.mld_pv4_data = MplsLsd.Labels.Label.LabelContext.Key.MldPv4Data()
                        self.mld_pv4_data.parent = self
                        self.next_hop_set_l3vpn = MplsLsd.Labels.Label.LabelContext.Key.NextHopSetL3Vpn()
                        self.next_hop_set_l3vpn.parent = self
                        self.pi_mi_pmsi_data = MplsLsd.Labels.Label.LabelContext.Key.PiMiPmsiData()
                        self.pi_mi_pmsi_data.parent = self
                        self.pi_ms_pmsi_data = MplsLsd.Labels.Label.LabelContext.Key.PiMsPmsiData()
                        self.pi_ms_pmsi_data.parent = self
                        self.pseudowire_data = MplsLsd.Labels.Label.LabelContext.Key.PseudowireData()
                        self.pseudowire_data.parent = self
                        self.pseudowire_head_end_data = MplsLsd.Labels.Label.LabelContext.Key.PseudowireHeadEndData()
                        self.pseudowire_head_end_data.parent = self
                        self.sr_adj_segment_ipv4 = MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4()
                        self.sr_adj_segment_ipv4.parent = self
                        self.sr_adj_segment_ipv6 = MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6()
                        self.sr_adj_segment_ipv6.parent = self
                        self.sr_prefix_segment = MplsLsd.Labels.Label.LabelContext.Key.SrPrefixSegment()
                        self.sr_prefix_segment.parent = self
                        self.te_binding = MplsLsd.Labels.Label.LabelContext.Key.TeBinding()
                        self.te_binding.parent = self
                        self.tev4_data = MplsLsd.Labels.Label.LabelContext.Key.Tev4Data()
                        self.tev4_data.parent = self
                        self.tev4p2mp_data = MplsLsd.Labels.Label.LabelContext.Key.Tev4P2MpData()
                        self.tev4p2mp_data.parent = self
                        self.tp_data = MplsLsd.Labels.Label.LabelContext.Key.TpData()
                        self.tp_data.parent = self
                        self.vrf_l3vpn_data = MplsLsd.Labels.Label.LabelContext.Key.VrfL3VpnData()
                        self.vrf_l3vpn_data.parent = self


                    class Ipv4Data(object):
                        """
                        IPv4 label context
                        
                        .. attribute:: prefix
                        
                        	IPv4 prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	IPv4 prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: security_id
                        
                        	Security ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_name
                        
                        	VRF Name
                        	**type**\:  str
                        
                        	**length:** 0..33
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.security_id = None
                            self.table_id = None
                            self.vrf_name = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.security_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            if self.vrf_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv4Data']['meta_info']


                    class Ipv6Data(object):
                        """
                        IPv6 label context
                        
                        .. attribute:: prefix
                        
                        	Prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: security_id
                        
                        	Security ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_name
                        
                        	VRF Name
                        	**type**\:  str
                        
                        	**length:** 0..33
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.security_id = None
                            self.table_id = None
                            self.vrf_name = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.security_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            if self.vrf_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv6Data']['meta_info']


                    class Tev4Data(object):
                        """
                        TEv4 label context
                        
                        .. attribute:: is_srte
                        
                        	Is this an SRTE head tunnel
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_dest
                        
                        	Tunnel destination
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: tunnel_id
                        
                        	Tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_id_extension
                        
                        	Extended tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_lsp_id
                        
                        	Tunnel LSP ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_source
                        
                        	Tunnel source
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.is_srte = None
                            self.table_id = None
                            self.tunnel_dest = None
                            self.tunnel_id = None
                            self.tunnel_id_extension = None
                            self.tunnel_lsp_id = None
                            self.tunnel_source = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.is_srte is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            if self.tunnel_dest is not None:
                                return True

                            if self.tunnel_id is not None:
                                return True

                            if self.tunnel_id_extension is not None:
                                return True

                            if self.tunnel_lsp_id is not None:
                                return True

                            if self.tunnel_source is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Tev4Data']['meta_info']


                    class Ipv4L3VpnData(object):
                        """
                        L3VPN IPv4 label context
                        
                        .. attribute:: prefix
                        
                        	IPv4 prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: route_distinguisher
                        
                        	Route distinguisher
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.route_distinguisher = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.route_distinguisher is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv4L3VpnData']['meta_info']


                    class Ipv6L3VpnData(object):
                        """
                        L3VPN IPv6 label context
                        
                        .. attribute:: prefix
                        
                        	IPv6 prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: route_distinguisher
                        
                        	Route distinguisher
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.prefix_length = None
                            self.route_distinguisher = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.route_distinguisher is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv6L3VpnData']['meta_info']


                    class VrfL3VpnData(object):
                        """
                        L3VPN VRF label context
                        
                        .. attribute:: security_id
                        
                        	Security ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.security_id = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.security_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.VrfL3VpnData']['meta_info']


                    class Cev4L3VpnData(object):
                        """
                        L3VPN CEv4 label context
                        
                        .. attribute:: ipv4_next_hop
                        
                        	IPv4 nexthop
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: security_id
                        
                        	Security ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.ipv4_next_hop = None
                            self.security_id = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.ipv4_next_hop is not None:
                                return True

                            if self.security_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Cev4L3VpnData']['meta_info']


                    class Cev6L3VpnData(object):
                        """
                        L3VPN CEv6 label context
                        
                        .. attribute:: ipv6_next_hop
                        
                        	IPv6 nexthop
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: security_id
                        
                        	Security ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.ipv6_next_hop = None
                            self.security_id = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.ipv6_next_hop is not None:
                                return True

                            if self.security_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Cev6L3VpnData']['meta_info']


                    class PseudowireData(object):
                        """
                        Pseudowire label context
                        
                        .. attribute:: prefix
                        
                        	Address prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: pseudowire_id
                        
                        	Pseudo\-wire ID
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: remote_l2_router_id
                        
                        	Remote L2 Router ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subinterface
                        
                        	Subinterface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.prefix = None
                            self.pseudowire_id = None
                            self.remote_l2_router_id = None
                            self.subinterface = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.prefix is not None:
                                return True

                            if self.pseudowire_id is not None:
                                return True

                            if self.remote_l2_router_id is not None:
                                return True

                            if self.subinterface is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.PseudowireData']['meta_info']


                    class LabelBlockData(object):
                        """
                        Label block context
                        
                        .. attribute:: edge_id
                        
                        	Edge ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: offset
                        
                        	Offset
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: service
                        
                        	Service
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: size
                        
                        	Number of labels
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vpn_id
                        
                        	VPN ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.edge_id = None
                            self.offset = None
                            self.service = None
                            self.size = None
                            self.vpn_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.edge_id is not None:
                                return True

                            if self.offset is not None:
                                return True

                            if self.service is not None:
                                return True

                            if self.size is not None:
                                return True

                            if self.vpn_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.LabelBlockData']['meta_info']


                    class IpSubData(object):
                        """
                        IP Subscriber context
                        
                        .. attribute:: parent_interface
                        
                        	Parent interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: table_id
                        
                        	Table Id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.parent_interface = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.parent_interface is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.IpSubData']['meta_info']


                    class Tev4P2MpData(object):
                        """
                        TEv4 P2MP context
                        
                        .. attribute:: p2mp_id
                        
                        	Point to multipoint ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: previous_hop
                        
                        	Previous hop
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_id
                        
                        	Tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_id_extension
                        
                        	Tunnel ID extension
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_lsp_id
                        
                        	Tunnel LSP ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: tunnel_source
                        
                        	Tunnel source
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.p2mp_id = None
                            self.previous_hop = None
                            self.table_id = None
                            self.tunnel_id = None
                            self.tunnel_id_extension = None
                            self.tunnel_lsp_id = None
                            self.tunnel_source = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.p2mp_id is not None:
                                return True

                            if self.previous_hop is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            if self.tunnel_id is not None:
                                return True

                            if self.tunnel_id_extension is not None:
                                return True

                            if self.tunnel_lsp_id is not None:
                                return True

                            if self.tunnel_source is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Tev4P2MpData']['meta_info']


                    class MldPv4Data(object):
                        """
                        MLDPv4 LSM\-ID context
                        
                        .. attribute:: lsm_id
                        
                        	LSM ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: peer_label_space_id
                        
                        	Peer Label Space Id
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: peer_lsrid
                        
                        	Peer LSR Id
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: type
                        
                        	LSM ID Type
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.lsm_id = None
                            self.peer_label_space_id = None
                            self.peer_lsrid = None
                            self.table_id = None
                            self.type = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.lsm_id is not None:
                                return True

                            if self.peer_label_space_id is not None:
                                return True

                            if self.peer_lsrid is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            if self.type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.MldPv4Data']['meta_info']


                    class PseudowireHeadEndData(object):
                        """
                        Pseudowire Head\-end label context
                        
                        .. attribute:: pwhe_intf
                        
                        	Pseudo\-wire Head\-end interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.pwhe_intf = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.pwhe_intf is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.PseudowireHeadEndData']['meta_info']


                    class TpData(object):
                        """
                        TP context
                        
                        .. attribute:: dest_global_id
                        
                        	TP destination global ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: dest_node_id
                        
                        	TP destination node ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: dest_tunnel_id
                        
                        	TP destination tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: lsp_id
                        
                        	TP LSP ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: source_global_id
                        
                        	TP source global ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_node_id
                        
                        	TP source node ID
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: source_tunnel_id
                        
                        	TP source tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dest_global_id = None
                            self.dest_node_id = None
                            self.dest_tunnel_id = None
                            self.lsp_id = None
                            self.source_global_id = None
                            self.source_node_id = None
                            self.source_tunnel_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dest_global_id is not None:
                                return True

                            if self.dest_node_id is not None:
                                return True

                            if self.dest_tunnel_id is not None:
                                return True

                            if self.lsp_id is not None:
                                return True

                            if self.source_global_id is not None:
                                return True

                            if self.source_node_id is not None:
                                return True

                            if self.source_tunnel_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.TpData']['meta_info']


                    class GenericRoutingEncapsulation(object):
                        """
                        Generic routing encapsulation context
                        
                        .. attribute:: gre_interface
                        
                        	Generic routing encapsulation interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.gre_interface = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.gre_interface is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.GenericRoutingEncapsulation']['meta_info']


                    class Ipv6GenericRoutingEncapsulation(object):
                        """
                        Generic routing encapsulation context
                        
                        .. attribute:: greipv6_interface
                        
                        	Generic routing encapsulation IPv6 interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.greipv6_interface = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.greipv6_interface is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv6GenericRoutingEncapsulation']['meta_info']


                    class EvpnData(object):
                        """
                        EVPN context
                        
                        .. attribute:: ethernet_segment
                        
                        	Ethernet Segment ID
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        .. attribute:: evpn_id
                        
                        	EVPN ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: evpn_tag
                        
                        	EVPN TAG
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.ethernet_segment = None
                            self.evpn_id = None
                            self.evpn_tag = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.ethernet_segment is not None:
                                return True

                            if self.evpn_id is not None:
                                return True

                            if self.evpn_tag is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.EvpnData']['meta_info']


                    class Ipv4BlbData(object):
                        """
                        BFD BLB label context
                        
                        .. attribute:: blb_intf
                        
                        	BFD BLB interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix
                        
                        	IPv4 prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.blb_intf = None
                            self.prefix = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.blb_intf is not None:
                                return True

                            if self.prefix is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv4BlbData']['meta_info']


                    class Ipv6BlbData(object):
                        """
                        BFD BLB label context
                        
                        .. attribute:: blb_intf
                        
                        	BFD BLB interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix
                        
                        	IPv6 prefix
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.blb_intf = None
                            self.prefix = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.blb_intf is not None:
                                return True

                            if self.prefix is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.Ipv6BlbData']['meta_info']


                    class PiMiPmsiData(object):
                        """
                        PIM I\-PMSI label conext
                        
                        .. attribute:: head
                        
                        	Head
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: v6
                        
                        	PIM6
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: vrf_id
                        
                        	VRF ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.head = None
                            self.v6 = None
                            self.vrf_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.head is not None:
                                return True

                            if self.v6 is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.PiMiPmsiData']['meta_info']


                    class PiMsPmsiData(object):
                        """
                        PIM S\-PMSI label conext
                        
                        .. attribute:: head
                        
                        	Head
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: hli
                        
                        	Head LSM\-ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: seg
                        
                        	Segmented Multicast
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: source
                        
                        	Originating Router
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: v6
                        
                        	PIM6
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: vrf_id
                        
                        	VRF ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.head = None
                            self.hli = None
                            self.seg = None
                            self.source = None
                            self.v6 = None
                            self.vrf_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.head is not None:
                                return True

                            if self.hli is not None:
                                return True

                            if self.seg is not None:
                                return True

                            if self.source is not None:
                                return True

                            if self.v6 is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.PiMsPmsiData']['meta_info']


                    class NextHopSetL3Vpn(object):
                        """
                        L3VPN NH SET label context
                        
                        .. attribute:: next_hop_set_id
                        
                        	Next Hop Set ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.next_hop_set_id = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.next_hop_set_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.NextHopSetL3Vpn']['meta_info']


                    class SrPrefixSegment(object):
                        """
                        SR Prefix Segment context
                        
                        .. attribute:: segment_id
                        
                        	Prefix Segment ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: table_id
                        
                        	Table ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.segment_id = None
                            self.table_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.segment_id is not None:
                                return True

                            if self.table_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.SrPrefixSegment']['meta_info']


                    class SrAdjSegmentIpv4(object):
                        """
                        SR Adj Segment ipv4 context
                        
                        .. attribute:: addr
                        
                        	Adjacency nexthop IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: index
                        
                        	Adjacency index
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: intf
                        
                        	Adjacency interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: type
                        
                        	Adjacency type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.addr = None
                            self.index = None
                            self.intf = None
                            self.type = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.addr is not None:
                                return True

                            if self.index is not None:
                                return True

                            if self.intf is not None:
                                return True

                            if self.type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv4']['meta_info']


                    class SrAdjSegmentIpv6(object):
                        """
                        SR Adj Segment ipv6 context
                        
                        .. attribute:: addr
                        
                        	Adjacency nexthop IPv6 address
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: index
                        
                        	Adjacency index
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: intf
                        
                        	Adjacency interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: type
                        
                        	Adjacency type
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.addr = None
                            self.index = None
                            self.intf = None
                            self.type = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.addr is not None:
                                return True

                            if self.index is not None:
                                return True

                            if self.intf is not None:
                                return True

                            if self.type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.SrAdjSegmentIpv6']['meta_info']


                    class LabelBlockSrgbData(object):
                        """
                        Label block SRGB context
                        
                        .. attribute:: offset
                        
                        	Offset
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: size
                        
                        	Number of labels
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: start_label
                        
                        	Start Label
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.offset = None
                            self.size = None
                            self.start_label = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.offset is not None:
                                return True

                            if self.size is not None:
                                return True

                            if self.start_label is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.LabelBlockSrgbData']['meta_info']


                    class TeBinding(object):
                        """
                        MPLS TE tunnel binding context
                        
                        .. attribute:: te_identifier
                        
                        	MPLS Traffic Engineering Tunnel or Group ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: te_type
                        
                        	Type of identifier for the binding
                        	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.te_identifier = None
                            self.te_type = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.te_identifier is not None:
                                return True

                            if self.te_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key.TeBinding']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:key'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                            return True

                        if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                            return True

                        if self.evpn_data is not None and self.evpn_data._has_data():
                            return True

                        if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                            return True

                        if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                            return True

                        if self.ipv4_data is not None and self.ipv4_data._has_data():
                            return True

                        if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                            return True

                        if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                            return True

                        if self.ipv6_data is not None and self.ipv6_data._has_data():
                            return True

                        if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                            return True

                        if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                            return True

                        if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                            return True

                        if self.label_block_data is not None and self.label_block_data._has_data():
                            return True

                        if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                            return True

                        if self.label_context_type is not None:
                            return True

                        if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                            return True

                        if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                            return True

                        if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                            return True

                        if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                            return True

                        if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                            return True

                        if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                            return True

                        if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                            return True

                        if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                            return True

                        if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                            return True

                        if self.te_binding is not None and self.te_binding._has_data():
                            return True

                        if self.tev4_data is not None and self.tev4_data._has_data():
                            return True

                        if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                            return True

                        if self.tp_data is not None and self.tp_data._has_data():
                            return True

                        if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Labels.Label.LabelContext.Key']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_data is not None:
                        return True

                    if self.key is not None and self.key._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Labels.Label.LabelContext']['meta_info']


            class ApplicationOwner(object):
                """
                Application owner
                
                .. attribute:: application_instance
                
                	Application instance Name
                	**type**\:  str
                
                .. attribute:: application_name
                
                	Application name
                	**type**\:  str
                
                .. attribute:: application_role_primary
                
                	Primary/Backup role
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_type
                
                	Application type
                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                
                .. attribute:: resource_state
                
                	Application resource state
                	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_instance = None
                    self.application_name = None
                    self.application_role_primary = None
                    self.application_type = None
                    self.resource_state = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_instance is not None:
                        return True

                    if self.application_name is not None:
                        return True

                    if self.application_role_primary is not None:
                        return True

                    if self.application_type is not None:
                        return True

                    if self.resource_state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Labels.Label.ApplicationOwner']['meta_info']

            @property
            def _common_path(self):
                if self.label_id is None:
                    raise YPYModelError('Key property label_id is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:labels/Cisco-IOS-XR-mpls-lsd-oper:label[Cisco-IOS-XR-mpls-lsd-oper:label-id = ' + str(self.label_id) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.label_id is not None:
                    return True

                if self.application_owner is not None:
                    for child_ref in self.application_owner:
                        if child_ref._has_data():
                            return True

                if self.label is not None:
                    return True

                if self.label_context is not None and self.label_context._has_data():
                    return True

                if self.rewrite_is_bound is not None:
                    return True

                if self.rewrite_owners is not None:
                    return True

                if self.rs_iconnected is not None:
                    return True

                if self.vrf_name is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Labels.Label']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:labels'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.label is not None:
                for child_ref in self.label:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.Labels']['meta_info']


    class FrrDatabase(object):
        """
        FRR database
        
        .. attribute:: summary_protected_interfaces
        
        	Sumary table of Protected Interfaces
        	**type**\:   :py:class:`SummaryProtectedInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.SummaryProtectedInterfaces>`
        
        .. attribute:: tunnel_head_summary
        
        	Summary data for FRR database entry \- Tunnel head
        	**type**\:   :py:class:`TunnelHeadSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeadSummary>`
        
        .. attribute:: tunnel_heads
        
        	Table of FRR database entries \- Tunnel heads
        	**type**\:   :py:class:`TunnelHeads <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads>`
        
        .. attribute:: tunnel_midpoint_summary
        
        	Summary data for FRR database entry \- Tunnel midpoint
        	**type**\:   :py:class:`TunnelMidpointSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpointSummary>`
        
        .. attribute:: tunnel_midpoints
        
        	Table of FRR database entries \- Tunnel midpoints
        	**type**\:   :py:class:`TunnelMidpoints <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints>`
        
        .. attribute:: tunnel_summary
        
        	Summary data for FRR database entry
        	**type**\:   :py:class:`TunnelSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelSummary>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.summary_protected_interfaces = MplsLsd.FrrDatabase.SummaryProtectedInterfaces()
            self.summary_protected_interfaces.parent = self
            self.tunnel_head_summary = MplsLsd.FrrDatabase.TunnelHeadSummary()
            self.tunnel_head_summary.parent = self
            self.tunnel_heads = MplsLsd.FrrDatabase.TunnelHeads()
            self.tunnel_heads.parent = self
            self.tunnel_midpoint_summary = MplsLsd.FrrDatabase.TunnelMidpointSummary()
            self.tunnel_midpoint_summary.parent = self
            self.tunnel_midpoints = MplsLsd.FrrDatabase.TunnelMidpoints()
            self.tunnel_midpoints.parent = self
            self.tunnel_summary = MplsLsd.FrrDatabase.TunnelSummary()
            self.tunnel_summary.parent = self


        class TunnelMidpoints(object):
            """
            Table of FRR database entries \- Tunnel
            midpoints
            
            .. attribute:: tunnel_midpoint
            
            	Data for FRR database entry \- Tunnel midpoint
            	**type**\: list of    :py:class:`TunnelMidpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.tunnel_midpoint = YList()
                self.tunnel_midpoint.parent = self
                self.tunnel_midpoint.name = 'tunnel_midpoint'


            class TunnelMidpoint(object):
                """
                Data for FRR database entry \- Tunnel midpoint
                
                .. attribute:: label  <key>
                
                	Label value
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: entry_frr_state
                
                	MPLS FRR entry state
                	**type**\:   :py:class:`MgmtLsdFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFrrStateEnum>`
                
                .. attribute:: frr_entry_id
                
                	FRR entry ID
                	**type**\:   :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId>`
                
                .. attribute:: input_label
                
                	Input label
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: out_path
                
                	Out Path List
                	**type**\: list of    :py:class:`OutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.OutPath>`
                
                .. attribute:: tunnel_interface
                
                	Tunnel interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.label = None
                    self.entry_frr_state = None
                    self.frr_entry_id = MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId()
                    self.frr_entry_id.parent = self
                    self.input_label = None
                    self.out_path = YList()
                    self.out_path.parent = self
                    self.out_path.name = 'out_path'
                    self.tunnel_interface = None


                class FrrEntryId(object):
                    """
                    FRR entry ID
                    
                    .. attribute:: head
                    
                    	head
                    	**type**\:   :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head>`
                    
                    .. attribute:: midpoint
                    
                    	midpoint
                    	**type**\:   :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint>`
                    
                    .. attribute:: role
                    
                    	Role
                    	**type**\:   :py:class:`MgmtLsdLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLspRoleEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.head = MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head()
                        self.head.parent = self
                        self.midpoint = MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint()
                        self.midpoint.parent = self
                        self.role = None


                    class Head(object):
                        """
                        head
                        
                        .. attribute:: destination_prefix
                        
                        	Destination prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: destination_prefix_length
                        
                        	Destination prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.destination_prefix = None
                            self.destination_prefix_length = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:head'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.destination_prefix is not None:
                                return True

                            if self.destination_prefix_length is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Head']['meta_info']


                    class Midpoint(object):
                        """
                        midpoint
                        
                        .. attribute:: lspid
                        
                        	LSP ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_address
                        
                        	Source IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: tunnel_id
                        
                        	Tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.lspid = None
                            self.source_address = None
                            self.tunnel_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:midpoint'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.lspid is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            if self.tunnel_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId.Midpoint']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:frr-entry-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.head is not None and self.head._has_data():
                            return True

                        if self.midpoint is not None and self.midpoint._has_data():
                            return True

                        if self.role is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.FrrEntryId']['meta_info']


                class OutPath(object):
                    """
                    Out Path List
                    
                    .. attribute:: frr_interface
                    
                    	FRR interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: frr_label
                    
                    	FRR output label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ipv4_next_hop
                    
                    	Next hop IPv4 address
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: out_interface
                    
                    	Outgoing interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: out_label
                    
                    	Outgoing label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frr_interface = None
                        self.frr_label = None
                        self.ipv4_next_hop = None
                        self.out_interface = None
                        self.out_label = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:out-path'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frr_interface is not None:
                            return True

                        if self.frr_label is not None:
                            return True

                        if self.ipv4_next_hop is not None:
                            return True

                        if self.out_interface is not None:
                            return True

                        if self.out_label is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint.OutPath']['meta_info']

                @property
                def _common_path(self):
                    if self.label is None:
                        raise YPYModelError('Key property label is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoints/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoint[Cisco-IOS-XR-mpls-lsd-oper:label = ' + str(self.label) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.label is not None:
                        return True

                    if self.entry_frr_state is not None:
                        return True

                    if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                        return True

                    if self.input_label is not None:
                        return True

                    if self.out_path is not None:
                        for child_ref in self.out_path:
                            if child_ref._has_data():
                                return True

                    if self.tunnel_interface is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints.TunnelMidpoint']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoints'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.tunnel_midpoint is not None:
                    for child_ref in self.tunnel_midpoint:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpoints']['meta_info']


        class TunnelHeads(object):
            """
            Table of FRR database entries \- Tunnel heads
            
            .. attribute:: tunnel_head
            
            	Data for FRR database entry \- Tunnel head
            	**type**\: list of    :py:class:`TunnelHead <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads.TunnelHead>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.tunnel_head = YList()
                self.tunnel_head.parent = self
                self.tunnel_head.name = 'tunnel_head'


            class TunnelHead(object):
                """
                Data for FRR database entry \- Tunnel head
                
                .. attribute:: interface_name  <key>
                
                	Tunnel interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: entry_frr_state
                
                	MPLS FRR entry state
                	**type**\:   :py:class:`MgmtLsdFrrStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFrrStateEnum>`
                
                .. attribute:: frr_entry_id
                
                	FRR entry ID
                	**type**\:   :py:class:`FrrEntryId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId>`
                
                .. attribute:: input_label
                
                	Input label
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: out_path
                
                	Out Path List
                	**type**\: list of    :py:class:`OutPath <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.OutPath>`
                
                .. attribute:: tunnel_interface
                
                	Tunnel interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_name = None
                    self.entry_frr_state = None
                    self.frr_entry_id = MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId()
                    self.frr_entry_id.parent = self
                    self.input_label = None
                    self.out_path = YList()
                    self.out_path.parent = self
                    self.out_path.name = 'out_path'
                    self.tunnel_interface = None


                class FrrEntryId(object):
                    """
                    FRR entry ID
                    
                    .. attribute:: head
                    
                    	head
                    	**type**\:   :py:class:`Head <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head>`
                    
                    .. attribute:: midpoint
                    
                    	midpoint
                    	**type**\:   :py:class:`Midpoint <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint>`
                    
                    .. attribute:: role
                    
                    	Role
                    	**type**\:   :py:class:`MgmtLsdLspRoleEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLspRoleEnum>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.head = MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head()
                        self.head.parent = self
                        self.midpoint = MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint()
                        self.midpoint.parent = self
                        self.role = None


                    class Head(object):
                        """
                        head
                        
                        .. attribute:: destination_prefix
                        
                        	Destination prefix
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: destination_prefix_length
                        
                        	Destination prefix length
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.destination_prefix = None
                            self.destination_prefix_length = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:head'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.destination_prefix is not None:
                                return True

                            if self.destination_prefix_length is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Head']['meta_info']


                    class Midpoint(object):
                        """
                        midpoint
                        
                        .. attribute:: lspid
                        
                        	LSP ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_address
                        
                        	Source IPv4 address
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: tunnel_id
                        
                        	Tunnel ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.lspid = None
                            self.source_address = None
                            self.tunnel_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:midpoint'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.lspid is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            if self.tunnel_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId.Midpoint']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:frr-entry-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.head is not None and self.head._has_data():
                            return True

                        if self.midpoint is not None and self.midpoint._has_data():
                            return True

                        if self.role is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.FrrEntryId']['meta_info']


                class OutPath(object):
                    """
                    Out Path List
                    
                    .. attribute:: frr_interface
                    
                    	FRR interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: frr_label
                    
                    	FRR output label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ipv4_next_hop
                    
                    	Next hop IPv4 address
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: out_interface
                    
                    	Outgoing interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: out_label
                    
                    	Outgoing label
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.frr_interface = None
                        self.frr_label = None
                        self.ipv4_next_hop = None
                        self.out_interface = None
                        self.out_label = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:out-path'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.frr_interface is not None:
                            return True

                        if self.frr_label is not None:
                            return True

                        if self.ipv4_next_hop is not None:
                            return True

                        if self.out_interface is not None:
                            return True

                        if self.out_label is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads.TunnelHead.OutPath']['meta_info']

                @property
                def _common_path(self):
                    if self.interface_name is None:
                        raise YPYModelError('Key property interface_name is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-heads/Cisco-IOS-XR-mpls-lsd-oper:tunnel-head[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface_name is not None:
                        return True

                    if self.entry_frr_state is not None:
                        return True

                    if self.frr_entry_id is not None and self.frr_entry_id._has_data():
                        return True

                    if self.input_label is not None:
                        return True

                    if self.out_path is not None:
                        for child_ref in self.out_path:
                            if child_ref._has_data():
                                return True

                    if self.tunnel_interface is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads.TunnelHead']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-heads'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.tunnel_head is not None:
                    for child_ref in self.tunnel_head:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeads']['meta_info']


        class TunnelHeadSummary(object):
            """
            Summary data for FRR database entry \- Tunnel
            head
            
            .. attribute:: active
            
            	Number of FRR rewrites in Active state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: igp
            
            	Number of FRR rewrites in IGP state for SR\-TE
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: partial
            
            	Number of FRR rewrites in Partial state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: ready
            
            	Number of FRR rewrites in Ready state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.active = None
                self.igp = None
                self.partial = None
                self.ready = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-head-summary'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.active is not None:
                    return True

                if self.igp is not None:
                    return True

                if self.partial is not None:
                    return True

                if self.ready is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.TunnelHeadSummary']['meta_info']


        class SummaryProtectedInterfaces(object):
            """
            Sumary table of Protected Interfaces
            
            .. attribute:: summary_protected_interface
            
            	Data for MPLS interface
            	**type**\: list of    :py:class:`SummaryProtectedInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.FrrDatabase.SummaryProtectedInterfaces.SummaryProtectedInterface>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.summary_protected_interface = YList()
                self.summary_protected_interface.parent = self
                self.summary_protected_interface.name = 'summary_protected_interface'


            class SummaryProtectedInterface(object):
                """
                Data for MPLS interface
                
                .. attribute:: interface_name  <key>
                
                	Interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: active
                
                	Number of FRR rewrites in Active state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: igp
                
                	Number of FRR rewrites in IGP state for SR\-TE
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: partial
                
                	Number of FRR rewrites in Partial state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ready
                
                	Number of FRR rewrites in Ready state
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_name = None
                    self.active = None
                    self.igp = None
                    self.partial = None
                    self.ready = None

                @property
                def _common_path(self):
                    if self.interface_name is None:
                        raise YPYModelError('Key property interface_name is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:summary-protected-interfaces/Cisco-IOS-XR-mpls-lsd-oper:summary-protected-interface[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface_name is not None:
                        return True

                    if self.active is not None:
                        return True

                    if self.igp is not None:
                        return True

                    if self.partial is not None:
                        return True

                    if self.ready is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.FrrDatabase.SummaryProtectedInterfaces.SummaryProtectedInterface']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:summary-protected-interfaces'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.summary_protected_interface is not None:
                    for child_ref in self.summary_protected_interface:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.SummaryProtectedInterfaces']['meta_info']


        class TunnelSummary(object):
            """
            Summary data for FRR database entry
            
            .. attribute:: active
            
            	Number of FRR rewrites in Active state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: igp
            
            	Number of FRR rewrites in IGP state for SR\-TE
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: partial
            
            	Number of FRR rewrites in Partial state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: ready
            
            	Number of FRR rewrites in Ready state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.active = None
                self.igp = None
                self.partial = None
                self.ready = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-summary'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.active is not None:
                    return True

                if self.igp is not None:
                    return True

                if self.partial is not None:
                    return True

                if self.ready is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.TunnelSummary']['meta_info']


        class TunnelMidpointSummary(object):
            """
            Summary data for FRR database entry \- Tunnel
            midpoint
            
            .. attribute:: active
            
            	Number of FRR rewrites in Active state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: igp
            
            	Number of FRR rewrites in IGP state for SR\-TE
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: partial
            
            	Number of FRR rewrites in Partial state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: ready
            
            	Number of FRR rewrites in Ready state
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.active = None
                self.igp = None
                self.partial = None
                self.ready = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database/Cisco-IOS-XR-mpls-lsd-oper:tunnel-midpoint-summary'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.active is not None:
                    return True

                if self.igp is not None:
                    return True

                if self.partial is not None:
                    return True

                if self.ready is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.FrrDatabase.TunnelMidpointSummary']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:frr-database'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.summary_protected_interfaces is not None and self.summary_protected_interfaces._has_data():
                return True

            if self.tunnel_head_summary is not None and self.tunnel_head_summary._has_data():
                return True

            if self.tunnel_heads is not None and self.tunnel_heads._has_data():
                return True

            if self.tunnel_midpoint_summary is not None and self.tunnel_midpoint_summary._has_data():
                return True

            if self.tunnel_midpoints is not None and self.tunnel_midpoints._has_data():
                return True

            if self.tunnel_summary is not None and self.tunnel_summary._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.FrrDatabase']['meta_info']


    class Rewrite(object):
        """
        Table of rewrites
        
        .. attribute:: rewrite_ipv4s
        
        	Table of Rewrites
        	**type**\:   :py:class:`RewriteIpv4S <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S>`
        
        .. attribute:: rewrite_labels
        
        	Table of Rewrites
        	**type**\:   :py:class:`RewriteLabels <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels>`
        
        .. attribute:: rewrite_pws
        
        	Table of Rewrites
        	**type**\:   :py:class:`RewritePws <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws>`
        
        .. attribute:: rewrite_tes
        
        	Table of Traffic Engineering Rewrites
        	**type**\:   :py:class:`RewriteTes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.rewrite_ipv4s = MplsLsd.Rewrite.RewriteIpv4S()
            self.rewrite_ipv4s.parent = self
            self.rewrite_labels = MplsLsd.Rewrite.RewriteLabels()
            self.rewrite_labels.parent = self
            self.rewrite_pws = MplsLsd.Rewrite.RewritePws()
            self.rewrite_pws.parent = self
            self.rewrite_tes = MplsLsd.Rewrite.RewriteTes()
            self.rewrite_tes.parent = self


        class RewritePws(object):
            """
            Table of Rewrites
            
            .. attribute:: rewrite_pw
            
            	FPI rewrite for PW List
            	**type**\: list of    :py:class:`RewritePw <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_pw = YList()
                self.rewrite_pw.parent = self
                self.rewrite_pw.name = 'rewrite_pw'


            class RewritePw(object):
                """
                FPI rewrite for PW List
                
                .. attribute:: pw_list_id  <key>
                
                	PW List ID
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: associated_fpi
                
                	Associated FPI
                	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi>`
                
                .. attribute:: bcdl_priority
                
                	BCDL Priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: fpi_key
                
                	fpi key
                	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey>`
                
                .. attribute:: lsd_queue
                
                	LSD queue
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: mois
                
                	Mois
                	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois>`
                
                .. attribute:: priority_updated
                
                	Is rewrite's BCDL priority updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: rewrite_id
                
                	Rewrite ID
                	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId>`
                
                .. attribute:: rewrite_version
                
                	Rewrite version
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_age
                
                	Rewrite install age
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_time
                
                	Rewrite install timestamp
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_updated
                
                	Is rewrite ever updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: v4_rpf
                
                	IPv4 RPF neighbors
                	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.V4Rpf>`
                
                .. attribute:: v6_rpf
                
                	IPv6 RPF neighbors
                	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.V6Rpf>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.pw_list_id = None
                    self.associated_fpi = YList()
                    self.associated_fpi.parent = self
                    self.associated_fpi.name = 'associated_fpi'
                    self.bcdl_priority = None
                    self.fpi_key = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey()
                    self.fpi_key.parent = self
                    self.lsd_queue = None
                    self.mois = YList()
                    self.mois.parent = self
                    self.mois.name = 'mois'
                    self.priority_updated = None
                    self.rewrite_id = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId()
                    self.rewrite_id.parent = self
                    self.rewrite_version = None
                    self.rw_install_age = None
                    self.rw_install_time = None
                    self.rw_updated = None
                    self.v4_rpf = YList()
                    self.v4_rpf.parent = self
                    self.v4_rpf.name = 'v4_rpf'
                    self.v6_rpf = YList()
                    self.v6_rpf.parent = self
                    self.v6_rpf.name = 'v6_rpf'


                class FpiKey(object):
                    """
                    fpi key
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.FpiKey']['meta_info']


                class RewriteId(object):
                    """
                    Rewrite ID
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.rewrite_id = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_()
                        self.rewrite_id.parent = self


                    class RewriteId_(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: label_context
                        
                        	Label context
                        	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext>`
                        
                        .. attribute:: local_label_rewrite
                        
                        	Local label rewrite information
                        	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite>`
                        
                        .. attribute:: rewrite_id_type
                        
                        	RewriteIDType
                        	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.label_context = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext()
                            self.label_context.parent = self
                            self.local_label_rewrite = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite()
                            self.local_label_rewrite.parent = self
                            self.rewrite_id_type = None


                        class LabelContext(object):
                            """
                            Label context
                            
                            .. attribute:: cev4l3vpn_data
                            
                            	L3VPN CEv4 label context
                            	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                            
                            .. attribute:: cev6l3vpn_data
                            
                            	L3VPN CEv6 label context
                            	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                            
                            .. attribute:: evpn_data
                            
                            	EVPN context
                            	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData>`
                            
                            .. attribute:: generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                            
                            .. attribute:: ip_sub_data
                            
                            	IP Subscriber context
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	IPv4 label context
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                            
                            .. attribute:: ipv4blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                            
                            .. attribute:: ipv4l3vpn_data
                            
                            	L3VPN IPv4 label context
                            	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                            
                            .. attribute:: ipv6_data
                            
                            	IPv6 label context
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                            
                            .. attribute:: ipv6_generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                            
                            .. attribute:: ipv6blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                            
                            .. attribute:: ipv6l3vpn_data
                            
                            	L3VPN IPv6 label context
                            	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                            
                            .. attribute:: label_block_data
                            
                            	Label block context
                            	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                            
                            .. attribute:: label_block_srgb_data
                            
                            	Label block SRGB context
                            	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                            
                            .. attribute:: label_context_type
                            
                            	LabelContextType
                            	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                            
                            .. attribute:: mld_pv4_data
                            
                            	MLDPv4 LSM\-ID context
                            	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                            
                            .. attribute:: next_hop_set_l3vpn
                            
                            	L3VPN NH SET label context
                            	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                            
                            .. attribute:: pi_mi_pmsi_data
                            
                            	PIM I\-PMSI label conext
                            	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                            
                            .. attribute:: pi_ms_pmsi_data
                            
                            	PIM S\-PMSI label conext
                            	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                            
                            .. attribute:: pseudowire_data
                            
                            	Pseudowire label context
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	Pseudowire Head\-end label context
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                            
                            .. attribute:: sr_adj_segment_ipv4
                            
                            	SR Adj Segment ipv4 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                            
                            .. attribute:: sr_adj_segment_ipv6
                            
                            	SR Adj Segment ipv6 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                            
                            .. attribute:: sr_prefix_segment
                            
                            	SR Prefix Segment context
                            	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                            
                            .. attribute:: te_binding
                            
                            	MPLS TE tunnel binding context
                            	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding>`
                            
                            .. attribute:: tev4_data
                            
                            	TEv4 label context
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                            
                            .. attribute:: tev4p2mp_data
                            
                            	TEv4 P2MP context
                            	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                            
                            .. attribute:: tp_data
                            
                            	TP context
                            	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData>`
                            
                            .. attribute:: vrf_l3vpn_data
                            
                            	L3VPN VRF label context
                            	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.cev4l3vpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                self.cev4l3vpn_data.parent = self
                                self.cev6l3vpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                self.cev6l3vpn_data.parent = self
                                self.evpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData()
                                self.evpn_data.parent = self
                                self.generic_routing_encapsulation = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                self.generic_routing_encapsulation.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv4blb_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                self.ipv4blb_data.parent = self
                                self.ipv4l3vpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                self.ipv4l3vpn_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.ipv6_generic_routing_encapsulation = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                self.ipv6_generic_routing_encapsulation.parent = self
                                self.ipv6blb_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                self.ipv6blb_data.parent = self
                                self.ipv6l3vpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                self.ipv6l3vpn_data.parent = self
                                self.label_block_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                self.label_block_data.parent = self
                                self.label_block_srgb_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                self.label_block_srgb_data.parent = self
                                self.label_context_type = None
                                self.mld_pv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                self.mld_pv4_data.parent = self
                                self.next_hop_set_l3vpn = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                self.next_hop_set_l3vpn.parent = self
                                self.pi_mi_pmsi_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                self.pi_mi_pmsi_data.parent = self
                                self.pi_ms_pmsi_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                self.pi_ms_pmsi_data.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.sr_adj_segment_ipv4 = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                self.sr_adj_segment_ipv4.parent = self
                                self.sr_adj_segment_ipv6 = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                self.sr_adj_segment_ipv6.parent = self
                                self.sr_prefix_segment = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                self.sr_prefix_segment.parent = self
                                self.te_binding = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding()
                                self.te_binding.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                self.tev4_data.parent = self
                                self.tev4p2mp_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                self.tev4p2mp_data.parent = self
                                self.tp_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData()
                                self.tp_data.parent = self
                                self.vrf_l3vpn_data = MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                self.vrf_l3vpn_data.parent = self


                            class Ipv4Data(object):
                                """
                                IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	IPv4 prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                TEv4 label context
                                
                                .. attribute:: is_srte
                                
                                	Is this an SRTE head tunnel
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_dest
                                
                                	Tunnel destination
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Extended tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.is_srte = None
                                    self.table_id = None
                                    self.tunnel_dest = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.is_srte is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_dest is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                            class Ipv4L3VpnData(object):
                                """
                                L3VPN IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                            class Ipv6L3VpnData(object):
                                """
                                L3VPN IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                            class VrfL3VpnData(object):
                                """
                                L3VPN VRF label context
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                            class Cev4L3VpnData(object):
                                """
                                L3VPN CEv4 label context
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv4_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                            class Cev6L3VpnData(object):
                                """
                                L3VPN CEv6 label context
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv6_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                            class PseudowireData(object):
                                """
                                Pseudowire label context
                                
                                .. attribute:: prefix
                                
                                	Address prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: pseudowire_id
                                
                                	Pseudo\-wire ID
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: remote_l2_router_id
                                
                                	Remote L2 Router ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: subinterface
                                
                                	Subinterface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.pseudowire_id = None
                                    self.remote_l2_router_id = None
                                    self.subinterface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.pseudowire_id is not None:
                                        return True

                                    if self.remote_l2_router_id is not None:
                                        return True

                                    if self.subinterface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                            class LabelBlockData(object):
                                """
                                Label block context
                                
                                .. attribute:: edge_id
                                
                                	Edge ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: service
                                
                                	Service
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vpn_id
                                
                                	VPN ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.edge_id = None
                                    self.offset = None
                                    self.service = None
                                    self.size = None
                                    self.vpn_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.edge_id is not None:
                                        return True

                                    if self.offset is not None:
                                        return True

                                    if self.service is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.vpn_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                            class IpSubData(object):
                                """
                                IP Subscriber context
                                
                                .. attribute:: parent_interface
                                
                                	Parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.parent_interface = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.parent_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                            class Tev4P2MpData(object):
                                """
                                TEv4 P2MP context
                                
                                .. attribute:: p2mp_id
                                
                                	Point to multipoint ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: previous_hop
                                
                                	Previous hop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Tunnel ID extension
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.p2mp_id = None
                                    self.previous_hop = None
                                    self.table_id = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.p2mp_id is not None:
                                        return True

                                    if self.previous_hop is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                            class MldPv4Data(object):
                                """
                                MLDPv4 LSM\-ID context
                                
                                .. attribute:: lsm_id
                                
                                	LSM ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: peer_label_space_id
                                
                                	Peer Label Space Id
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: peer_lsrid
                                
                                	Peer LSR Id
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	LSM ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lsm_id = None
                                    self.peer_label_space_id = None
                                    self.peer_lsrid = None
                                    self.table_id = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lsm_id is not None:
                                        return True

                                    if self.peer_label_space_id is not None:
                                        return True

                                    if self.peer_lsrid is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                Pseudowire Head\-end label context
                                
                                .. attribute:: pwhe_intf
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_intf = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_intf is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                            class TpData(object):
                                """
                                TP context
                                
                                .. attribute:: dest_global_id
                                
                                	TP destination global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dest_node_id
                                
                                	TP destination node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: dest_tunnel_id
                                
                                	TP destination tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsp_id
                                
                                	TP LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: source_global_id
                                
                                	TP source global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_node_id
                                
                                	TP source node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: source_tunnel_id
                                
                                	TP source tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dest_global_id = None
                                    self.dest_node_id = None
                                    self.dest_tunnel_id = None
                                    self.lsp_id = None
                                    self.source_global_id = None
                                    self.source_node_id = None
                                    self.source_tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dest_global_id is not None:
                                        return True

                                    if self.dest_node_id is not None:
                                        return True

                                    if self.dest_tunnel_id is not None:
                                        return True

                                    if self.lsp_id is not None:
                                        return True

                                    if self.source_global_id is not None:
                                        return True

                                    if self.source_node_id is not None:
                                        return True

                                    if self.source_tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                            class GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: gre_interface
                                
                                	Generic routing encapsulation interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.gre_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.gre_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                            class Ipv6GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: greipv6_interface
                                
                                	Generic routing encapsulation IPv6 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.greipv6_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.greipv6_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                            class EvpnData(object):
                                """
                                EVPN context
                                
                                .. attribute:: ethernet_segment
                                
                                	Ethernet Segment ID
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: evpn_id
                                
                                	EVPN ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: evpn_tag
                                
                                	EVPN TAG
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ethernet_segment = None
                                    self.evpn_id = None
                                    self.evpn_tag = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ethernet_segment is not None:
                                        return True

                                    if self.evpn_id is not None:
                                        return True

                                    if self.evpn_tag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                            class Ipv4BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                            class Ipv6BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                            class PiMiPmsiData(object):
                                """
                                PIM I\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                            class PiMsPmsiData(object):
                                """
                                PIM S\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: hli
                                
                                	Head LSM\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: seg
                                
                                	Segmented Multicast
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: source
                                
                                	Originating Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.hli = None
                                    self.seg = None
                                    self.source = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.hli is not None:
                                        return True

                                    if self.seg is not None:
                                        return True

                                    if self.source is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                            class NextHopSetL3Vpn(object):
                                """
                                L3VPN NH SET label context
                                
                                .. attribute:: next_hop_set_id
                                
                                	Next Hop Set ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.next_hop_set_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.next_hop_set_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                            class SrPrefixSegment(object):
                                """
                                SR Prefix Segment context
                                
                                .. attribute:: segment_id
                                
                                	Prefix Segment ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                            class SrAdjSegmentIpv4(object):
                                """
                                SR Adj Segment ipv4 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                            class SrAdjSegmentIpv6(object):
                                """
                                SR Adj Segment ipv6 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                            class LabelBlockSrgbData(object):
                                """
                                Label block SRGB context
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: start_label
                                
                                	Start Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.offset = None
                                    self.size = None
                                    self.start_label = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.offset is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.start_label is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                            class TeBinding(object):
                                """
                                MPLS TE tunnel binding context
                                
                                .. attribute:: te_identifier
                                
                                	MPLS Traffic Engineering Tunnel or Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: te_type
                                
                                	Type of identifier for the binding
                                	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.te_identifier = None
                                    self.te_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.te_identifier is not None:
                                        return True

                                    if self.te_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                    return True

                                if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                    return True

                                if self.evpn_data is not None and self.evpn_data._has_data():
                                    return True

                                if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                    return True

                                if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                    return True

                                if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                    return True

                                if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                    return True

                                if self.label_block_data is not None and self.label_block_data._has_data():
                                    return True

                                if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                    return True

                                if self.label_context_type is not None:
                                    return True

                                if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                    return True

                                if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                    return True

                                if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                    return True

                                if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                    return True

                                if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                    return True

                                if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                    return True

                                if self.te_binding is not None and self.te_binding._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                    return True

                                if self.tp_data is not None and self.tp_data._has_data():
                                    return True

                                if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LabelContext']['meta_info']


                        class LocalLabelRewrite(object):
                            """
                            Local label rewrite information
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_data = YLeafList()
                                self.label_data.parent = self
                                self.label_data.name = 'label_data'

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_data is not None:
                                    for child in self.label_data:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.label_context is not None and self.label_context._has_data():
                                return True

                            if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                return True

                            if self.rewrite_id_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId.RewriteId_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.RewriteId']['meta_info']


                class AssociatedFpi(object):
                    """
                    Associated FPI
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.AssociatedFpi']['meta_info']


                class V4Rpf(object):
                    """
                    IPv4 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v4_rpf_neighbor
                    
                    	V4 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v4_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v4_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.V4Rpf']['meta_info']


                class V6Rpf(object):
                    """
                    IPv6 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v6_rpf_neighbor
                    
                    	V6 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v6_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v6_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.V6Rpf']['meta_info']


                class Mois(object):
                    """
                    Mois
                    
                    .. attribute:: application_resource
                    
                    	Application state
                    	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource>`
                    
                    .. attribute:: moi_array
                    
                    	moi array
                    	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_resource = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource()
                        self.application_resource.parent = self
                        self.moi_array = YList()
                        self.moi_array.parent = self
                        self.moi_array.name = 'moi_array'


                    class ApplicationResource(object):
                        """
                        Application state
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.ApplicationResource']['meta_info']


                    class MoiArray(object):
                        """
                        moi array
                        
                        .. attribute:: moi
                        
                        	Moi
                        	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.moi = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi()
                            self.moi.parent = self


                        class Moi(object):
                            """
                            Moi
                            
                            .. attribute:: dmtc_data
                            
                            	dmtc data
                            	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData>`
                            
                            .. attribute:: ip_sub_data
                            
                            	ip sub data
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data>`
                            
                            .. attribute:: moi_type
                            
                            	MoiType
                            	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                            
                            .. attribute:: pop_and_lookup_ipv4
                            
                            	pop and lookup ipv4
                            	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                            
                            .. attribute:: pop_and_lookup_ipv6
                            
                            	pop and lookup ipv6
                            	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                            
                            .. attribute:: pop_and_lookup_tp
                            
                            	pop and lookup tp
                            	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp>`
                            
                            .. attribute:: pseudowire_data
                            
                            	pseudowire data
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	pseudowire head end data
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData>`
                            
                            .. attribute:: stackv4_data
                            
                            	stackv4 data
                            	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data>`
                            
                            .. attribute:: stackv6_data
                            
                            	stackv6 data
                            	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data>`
                            
                            .. attribute:: te_head_data
                            
                            	te head data
                            	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData>`
                            
                            .. attribute:: tev4_data
                            
                            	tev4 data
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData()
                                self.dmtc_data.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.moi_type = None
                                self.pop_and_lookup_ipv4 = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                self.pop_and_lookup_ipv4.parent = self
                                self.pop_and_lookup_ipv6 = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                self.pop_and_lookup_ipv6.parent = self
                                self.pop_and_lookup_tp = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp()
                                self.pop_and_lookup_tp.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.pw_list_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData()
                                self.pw_list_data.parent = self
                                self.stackv4_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data()
                                self.stackv4_data.parent = self
                                self.stackv6_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data()
                                self.stackv6_data.parent = self
                                self.te_head_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData()
                                self.te_head_data.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data()
                                self.tev4_data.parent = self


                            class PopAndLookupIpv4(object):
                                """
                                pop and lookup ipv4
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                            class PopAndLookupTp(object):
                                """
                                pop and lookup tp
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                            class PopAndLookupIpv6(object):
                                """
                                pop and lookup ipv6
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: load_metric
                                
                                	Routing path's load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	TE backup path local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_interface_parent
                                
                                	Outgoing Interface's parent
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv4_next_hop = None
                                    self.load_metric = None
                                    self.local_label = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_interface_parent = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.load_metric is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_interface_parent is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv6_next_hop = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                tev4 data
                                
                                .. attribute:: backup_interface
                                
                                	Backup interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_ipv4_next_hop
                                
                                	Backup IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_local_label
                                
                                	Backup local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: data_out_parent_interface
                                
                                	Outgoing data parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: merge_point_label
                                
                                	Merge point label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_class
                                
                                	Tunnel class
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tunnel_weight
                                
                                	Tunnel weight
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_interface = None
                                    self.backup_ipv4_next_hop = None
                                    self.backup_local_label = None
                                    self.data_out_parent_interface = None
                                    self.ipv4_next_hop = None
                                    self.merge_point_label = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_class = None
                                    self.tunnel_interface = None
                                    self.tunnel_weight = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_interface is not None:
                                        return True

                                    if self.backup_ipv4_next_hop is not None:
                                        return True

                                    if self.backup_local_label is not None:
                                        return True

                                    if self.data_out_parent_interface is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.merge_point_label is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_class is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tunnel_weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                            class PseudowireData(object):
                                """
                                pseudowire data
                                
                                .. attribute:: bridge_id
                                
                                	Bridge ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: cross_connect_id
                                
                                	Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pseuodo_wire_connect_id
                                
                                	PseudoWire Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: split_horizon_id
                                
                                	Split horizon group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bridge_id = None
                                    self.cross_connect_id = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pseuodo_wire_connect_id = None
                                    self.split_horizon_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bridge_id is not None:
                                        return True

                                    if self.cross_connect_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pseuodo_wire_connect_id is not None:
                                        return True

                                    if self.split_horizon_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                            class IpSubData(object):
                                """
                                ip sub data
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	VRF table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.IpSubData']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                pseudowire head end data
                                
                                .. attribute:: control_word
                                
                                	Is control word present
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: imposition
                                
                                	Is PWHE IMposition
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pw_list_id
                                
                                	Pseudo\-wire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: pwhe_interface
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: vctype
                                
                                	Virtual Circuit Type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.control_word = None
                                    self.imposition = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pw_list_id = None
                                    self.pwhe_interface = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.vctype = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.control_word is not None:
                                        return True

                                    if self.imposition is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pw_list_id is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.vctype is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: l2_interface
                                
                                	Pseudo\-wire Layer 2 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: l3_interface
                                
                                	Pseudo\-wire Layer 3 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.l2_interface = None
                                    self.l3_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.l2_interface is not None:
                                        return True

                                    if self.l3_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.PwListData']['meta_info']


                            class Stackv4Data(object):
                                """
                                stackv4 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                
                                .. attribute:: owner_application_type
                                
                                	Owner application type
                                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                    self.nexthop.parent = self
                                    self.owner_application_type = None


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    if self.owner_application_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                            class Stackv6Data(object):
                                """
                                stackv6 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                    self.nexthop.parent = self


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                            class TeHeadData(object):
                                """
                                te head data
                                
                                .. attribute:: flags_decode
                                
                                	Flags decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_fwd_class
                                
                                	Tunnel forwarding class
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: tunnel_load_metric
                                
                                	Tunnel Load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label
                                
                                	Tunnel local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label_str
                                
                                	Tunnel local label stringified
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_fwd_class = None
                                    self.tunnel_load_metric = None
                                    self.tunnel_local_label = None
                                    self.tunnel_local_label_str = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_fwd_class is not None:
                                        return True

                                    if self.tunnel_load_metric is not None:
                                        return True

                                    if self.tunnel_local_label is not None:
                                        return True

                                    if self.tunnel_local_label_str is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                            class DmtcData(object):
                                """
                                dmtc data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi.DmtcData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_data is not None and self.dmtc_data._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.moi_type is not None:
                                    return True

                                if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                    return True

                                if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                    return True

                                if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.stackv4_data is not None and self.stackv4_data._has_data():
                                    return True

                                if self.stackv6_data is not None and self.stackv6_data._has_data():
                                    return True

                                if self.te_head_data is not None and self.te_head_data._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray.Moi']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.moi is not None and self.moi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois.MoiArray']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_resource is not None and self.application_resource._has_data():
                            return True

                        if self.moi_array is not None:
                            for child_ref in self.moi_array:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw.Mois']['meta_info']

                @property
                def _common_path(self):
                    if self.pw_list_id is None:
                        raise YPYModelError('Key property pw_list_id is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-pws/Cisco-IOS-XR-mpls-lsd-oper:rewrite-pw[Cisco-IOS-XR-mpls-lsd-oper:pw-list-id = ' + str(self.pw_list_id) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.pw_list_id is not None:
                        return True

                    if self.associated_fpi is not None:
                        for child_ref in self.associated_fpi:
                            if child_ref._has_data():
                                return True

                    if self.bcdl_priority is not None:
                        return True

                    if self.fpi_key is not None and self.fpi_key._has_data():
                        return True

                    if self.lsd_queue is not None:
                        return True

                    if self.mois is not None:
                        for child_ref in self.mois:
                            if child_ref._has_data():
                                return True

                    if self.priority_updated is not None:
                        return True

                    if self.rewrite_id is not None and self.rewrite_id._has_data():
                        return True

                    if self.rewrite_version is not None:
                        return True

                    if self.rw_install_age is not None:
                        return True

                    if self.rw_install_time is not None:
                        return True

                    if self.rw_updated is not None:
                        return True

                    if self.v4_rpf is not None:
                        for child_ref in self.v4_rpf:
                            if child_ref._has_data():
                                return True

                    if self.v6_rpf is not None:
                        for child_ref in self.v6_rpf:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Rewrite.RewritePws.RewritePw']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-pws'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_pw is not None:
                    for child_ref in self.rewrite_pw:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Rewrite.RewritePws']['meta_info']


        class RewriteIpv4S(object):
            """
            Table of Rewrites
            
            .. attribute:: rewrite_ipv4
            
            	FPI rewrite for label
            	**type**\: list of    :py:class:`RewriteIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_ipv4 = YList()
                self.rewrite_ipv4.parent = self
                self.rewrite_ipv4.name = 'rewrite_ipv4'


            class RewriteIpv4(object):
                """
                FPI rewrite for label
                
                .. attribute:: associated_fpi
                
                	Associated FPI
                	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi>`
                
                .. attribute:: bcdl_priority
                
                	BCDL Priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: fpi_key
                
                	fpi key
                	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey>`
                
                .. attribute:: lsd_queue
                
                	LSD queue
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: mois
                
                	Mois
                	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois>`
                
                .. attribute:: prefix
                
                	IPv4 Prefix
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: prefix_length
                
                	Prefix length
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: priority_updated
                
                	Is rewrite's BCDL priority updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: rewrite_id
                
                	Rewrite ID
                	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId>`
                
                .. attribute:: rewrite_version
                
                	Rewrite version
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rsi_table_id
                
                	RSI table ID
                	**type**\:  str
                
                	**pattern:** [0\-9a\-fA\-F]{1,8}
                
                .. attribute:: rsi_table_name
                
                	RSI table name
                	**type**\:  str
                
                	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
                
                .. attribute:: rw_install_age
                
                	Rewrite install age
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_time
                
                	Rewrite install timestamp
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_updated
                
                	Is rewrite ever updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: v4_rpf
                
                	IPv4 RPF neighbors
                	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.V4Rpf>`
                
                .. attribute:: v6_rpf
                
                	IPv6 RPF neighbors
                	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.V6Rpf>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.associated_fpi = YList()
                    self.associated_fpi.parent = self
                    self.associated_fpi.name = 'associated_fpi'
                    self.bcdl_priority = None
                    self.fpi_key = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey()
                    self.fpi_key.parent = self
                    self.lsd_queue = None
                    self.mois = YList()
                    self.mois.parent = self
                    self.mois.name = 'mois'
                    self.prefix = None
                    self.prefix_length = None
                    self.priority_updated = None
                    self.rewrite_id = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId()
                    self.rewrite_id.parent = self
                    self.rewrite_version = None
                    self.rsi_table_id = None
                    self.rsi_table_name = None
                    self.rw_install_age = None
                    self.rw_install_time = None
                    self.rw_updated = None
                    self.v4_rpf = YList()
                    self.v4_rpf.parent = self
                    self.v4_rpf.name = 'v4_rpf'
                    self.v6_rpf = YList()
                    self.v6_rpf.parent = self
                    self.v6_rpf.name = 'v6_rpf'


                class FpiKey(object):
                    """
                    fpi key
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.FpiKey']['meta_info']


                class RewriteId(object):
                    """
                    Rewrite ID
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.rewrite_id = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_()
                        self.rewrite_id.parent = self


                    class RewriteId_(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: label_context
                        
                        	Label context
                        	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext>`
                        
                        .. attribute:: local_label_rewrite
                        
                        	Local label rewrite information
                        	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite>`
                        
                        .. attribute:: rewrite_id_type
                        
                        	RewriteIDType
                        	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.label_context = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext()
                            self.label_context.parent = self
                            self.local_label_rewrite = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite()
                            self.local_label_rewrite.parent = self
                            self.rewrite_id_type = None


                        class LabelContext(object):
                            """
                            Label context
                            
                            .. attribute:: cev4l3vpn_data
                            
                            	L3VPN CEv4 label context
                            	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                            
                            .. attribute:: cev6l3vpn_data
                            
                            	L3VPN CEv6 label context
                            	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                            
                            .. attribute:: evpn_data
                            
                            	EVPN context
                            	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData>`
                            
                            .. attribute:: generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                            
                            .. attribute:: ip_sub_data
                            
                            	IP Subscriber context
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	IPv4 label context
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                            
                            .. attribute:: ipv4blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                            
                            .. attribute:: ipv4l3vpn_data
                            
                            	L3VPN IPv4 label context
                            	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                            
                            .. attribute:: ipv6_data
                            
                            	IPv6 label context
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                            
                            .. attribute:: ipv6_generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                            
                            .. attribute:: ipv6blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                            
                            .. attribute:: ipv6l3vpn_data
                            
                            	L3VPN IPv6 label context
                            	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                            
                            .. attribute:: label_block_data
                            
                            	Label block context
                            	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                            
                            .. attribute:: label_block_srgb_data
                            
                            	Label block SRGB context
                            	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                            
                            .. attribute:: label_context_type
                            
                            	LabelContextType
                            	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                            
                            .. attribute:: mld_pv4_data
                            
                            	MLDPv4 LSM\-ID context
                            	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                            
                            .. attribute:: next_hop_set_l3vpn
                            
                            	L3VPN NH SET label context
                            	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                            
                            .. attribute:: pi_mi_pmsi_data
                            
                            	PIM I\-PMSI label conext
                            	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                            
                            .. attribute:: pi_ms_pmsi_data
                            
                            	PIM S\-PMSI label conext
                            	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                            
                            .. attribute:: pseudowire_data
                            
                            	Pseudowire label context
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	Pseudowire Head\-end label context
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                            
                            .. attribute:: sr_adj_segment_ipv4
                            
                            	SR Adj Segment ipv4 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                            
                            .. attribute:: sr_adj_segment_ipv6
                            
                            	SR Adj Segment ipv6 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                            
                            .. attribute:: sr_prefix_segment
                            
                            	SR Prefix Segment context
                            	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                            
                            .. attribute:: te_binding
                            
                            	MPLS TE tunnel binding context
                            	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding>`
                            
                            .. attribute:: tev4_data
                            
                            	TEv4 label context
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                            
                            .. attribute:: tev4p2mp_data
                            
                            	TEv4 P2MP context
                            	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                            
                            .. attribute:: tp_data
                            
                            	TP context
                            	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData>`
                            
                            .. attribute:: vrf_l3vpn_data
                            
                            	L3VPN VRF label context
                            	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.cev4l3vpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                self.cev4l3vpn_data.parent = self
                                self.cev6l3vpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                self.cev6l3vpn_data.parent = self
                                self.evpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData()
                                self.evpn_data.parent = self
                                self.generic_routing_encapsulation = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                self.generic_routing_encapsulation.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv4blb_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                self.ipv4blb_data.parent = self
                                self.ipv4l3vpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                self.ipv4l3vpn_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.ipv6_generic_routing_encapsulation = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                self.ipv6_generic_routing_encapsulation.parent = self
                                self.ipv6blb_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                self.ipv6blb_data.parent = self
                                self.ipv6l3vpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                self.ipv6l3vpn_data.parent = self
                                self.label_block_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                self.label_block_data.parent = self
                                self.label_block_srgb_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                self.label_block_srgb_data.parent = self
                                self.label_context_type = None
                                self.mld_pv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                self.mld_pv4_data.parent = self
                                self.next_hop_set_l3vpn = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                self.next_hop_set_l3vpn.parent = self
                                self.pi_mi_pmsi_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                self.pi_mi_pmsi_data.parent = self
                                self.pi_ms_pmsi_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                self.pi_ms_pmsi_data.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.sr_adj_segment_ipv4 = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                self.sr_adj_segment_ipv4.parent = self
                                self.sr_adj_segment_ipv6 = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                self.sr_adj_segment_ipv6.parent = self
                                self.sr_prefix_segment = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                self.sr_prefix_segment.parent = self
                                self.te_binding = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding()
                                self.te_binding.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                self.tev4_data.parent = self
                                self.tev4p2mp_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                self.tev4p2mp_data.parent = self
                                self.tp_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData()
                                self.tp_data.parent = self
                                self.vrf_l3vpn_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                self.vrf_l3vpn_data.parent = self


                            class Ipv4Data(object):
                                """
                                IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	IPv4 prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                TEv4 label context
                                
                                .. attribute:: is_srte
                                
                                	Is this an SRTE head tunnel
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_dest
                                
                                	Tunnel destination
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Extended tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.is_srte = None
                                    self.table_id = None
                                    self.tunnel_dest = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.is_srte is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_dest is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                            class Ipv4L3VpnData(object):
                                """
                                L3VPN IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                            class Ipv6L3VpnData(object):
                                """
                                L3VPN IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                            class VrfL3VpnData(object):
                                """
                                L3VPN VRF label context
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                            class Cev4L3VpnData(object):
                                """
                                L3VPN CEv4 label context
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv4_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                            class Cev6L3VpnData(object):
                                """
                                L3VPN CEv6 label context
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv6_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                            class PseudowireData(object):
                                """
                                Pseudowire label context
                                
                                .. attribute:: prefix
                                
                                	Address prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: pseudowire_id
                                
                                	Pseudo\-wire ID
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: remote_l2_router_id
                                
                                	Remote L2 Router ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: subinterface
                                
                                	Subinterface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.pseudowire_id = None
                                    self.remote_l2_router_id = None
                                    self.subinterface = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.pseudowire_id is not None:
                                        return True

                                    if self.remote_l2_router_id is not None:
                                        return True

                                    if self.subinterface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                            class LabelBlockData(object):
                                """
                                Label block context
                                
                                .. attribute:: edge_id
                                
                                	Edge ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: service
                                
                                	Service
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vpn_id
                                
                                	VPN ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.edge_id = None
                                    self.offset = None
                                    self.service = None
                                    self.size = None
                                    self.vpn_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.edge_id is not None:
                                        return True

                                    if self.offset is not None:
                                        return True

                                    if self.service is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.vpn_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                            class IpSubData(object):
                                """
                                IP Subscriber context
                                
                                .. attribute:: parent_interface
                                
                                	Parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.parent_interface = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.parent_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                            class Tev4P2MpData(object):
                                """
                                TEv4 P2MP context
                                
                                .. attribute:: p2mp_id
                                
                                	Point to multipoint ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: previous_hop
                                
                                	Previous hop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Tunnel ID extension
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.p2mp_id = None
                                    self.previous_hop = None
                                    self.table_id = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.p2mp_id is not None:
                                        return True

                                    if self.previous_hop is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                            class MldPv4Data(object):
                                """
                                MLDPv4 LSM\-ID context
                                
                                .. attribute:: lsm_id
                                
                                	LSM ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: peer_label_space_id
                                
                                	Peer Label Space Id
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: peer_lsrid
                                
                                	Peer LSR Id
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	LSM ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lsm_id = None
                                    self.peer_label_space_id = None
                                    self.peer_lsrid = None
                                    self.table_id = None
                                    self.type = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lsm_id is not None:
                                        return True

                                    if self.peer_label_space_id is not None:
                                        return True

                                    if self.peer_lsrid is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                Pseudowire Head\-end label context
                                
                                .. attribute:: pwhe_intf
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_intf = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_intf is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                            class TpData(object):
                                """
                                TP context
                                
                                .. attribute:: dest_global_id
                                
                                	TP destination global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dest_node_id
                                
                                	TP destination node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: dest_tunnel_id
                                
                                	TP destination tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsp_id
                                
                                	TP LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: source_global_id
                                
                                	TP source global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_node_id
                                
                                	TP source node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: source_tunnel_id
                                
                                	TP source tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dest_global_id = None
                                    self.dest_node_id = None
                                    self.dest_tunnel_id = None
                                    self.lsp_id = None
                                    self.source_global_id = None
                                    self.source_node_id = None
                                    self.source_tunnel_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dest_global_id is not None:
                                        return True

                                    if self.dest_node_id is not None:
                                        return True

                                    if self.dest_tunnel_id is not None:
                                        return True

                                    if self.lsp_id is not None:
                                        return True

                                    if self.source_global_id is not None:
                                        return True

                                    if self.source_node_id is not None:
                                        return True

                                    if self.source_tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                            class GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: gre_interface
                                
                                	Generic routing encapsulation interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.gre_interface = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.gre_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                            class Ipv6GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: greipv6_interface
                                
                                	Generic routing encapsulation IPv6 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.greipv6_interface = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.greipv6_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                            class EvpnData(object):
                                """
                                EVPN context
                                
                                .. attribute:: ethernet_segment
                                
                                	Ethernet Segment ID
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: evpn_id
                                
                                	EVPN ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: evpn_tag
                                
                                	EVPN TAG
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ethernet_segment = None
                                    self.evpn_id = None
                                    self.evpn_tag = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ethernet_segment is not None:
                                        return True

                                    if self.evpn_id is not None:
                                        return True

                                    if self.evpn_tag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                            class Ipv4BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                            class Ipv6BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                            class PiMiPmsiData(object):
                                """
                                PIM I\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                            class PiMsPmsiData(object):
                                """
                                PIM S\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: hli
                                
                                	Head LSM\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: seg
                                
                                	Segmented Multicast
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: source
                                
                                	Originating Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.hli = None
                                    self.seg = None
                                    self.source = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.hli is not None:
                                        return True

                                    if self.seg is not None:
                                        return True

                                    if self.source is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                            class NextHopSetL3Vpn(object):
                                """
                                L3VPN NH SET label context
                                
                                .. attribute:: next_hop_set_id
                                
                                	Next Hop Set ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.next_hop_set_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.next_hop_set_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                            class SrPrefixSegment(object):
                                """
                                SR Prefix Segment context
                                
                                .. attribute:: segment_id
                                
                                	Prefix Segment ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                            class SrAdjSegmentIpv4(object):
                                """
                                SR Adj Segment ipv4 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                            class SrAdjSegmentIpv6(object):
                                """
                                SR Adj Segment ipv6 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                            class LabelBlockSrgbData(object):
                                """
                                Label block SRGB context
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: start_label
                                
                                	Start Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.offset = None
                                    self.size = None
                                    self.start_label = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.offset is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.start_label is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                            class TeBinding(object):
                                """
                                MPLS TE tunnel binding context
                                
                                .. attribute:: te_identifier
                                
                                	MPLS Traffic Engineering Tunnel or Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: te_type
                                
                                	Type of identifier for the binding
                                	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.te_identifier = None
                                    self.te_type = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.te_identifier is not None:
                                        return True

                                    if self.te_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                    return True

                                if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                    return True

                                if self.evpn_data is not None and self.evpn_data._has_data():
                                    return True

                                if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                    return True

                                if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                    return True

                                if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                    return True

                                if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                    return True

                                if self.label_block_data is not None and self.label_block_data._has_data():
                                    return True

                                if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                    return True

                                if self.label_context_type is not None:
                                    return True

                                if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                    return True

                                if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                    return True

                                if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                    return True

                                if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                    return True

                                if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                    return True

                                if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                    return True

                                if self.te_binding is not None and self.te_binding._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                    return True

                                if self.tp_data is not None and self.tp_data._has_data():
                                    return True

                                if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LabelContext']['meta_info']


                        class LocalLabelRewrite(object):
                            """
                            Local label rewrite information
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_data = YLeafList()
                                self.label_data.parent = self
                                self.label_data.name = 'label_data'

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_data is not None:
                                    for child in self.label_data:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.label_context is not None and self.label_context._has_data():
                                return True

                            if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                return True

                            if self.rewrite_id_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId.RewriteId_']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.RewriteId']['meta_info']


                class AssociatedFpi(object):
                    """
                    Associated FPI
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.AssociatedFpi']['meta_info']


                class V4Rpf(object):
                    """
                    IPv4 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v4_rpf_neighbor
                    
                    	V4 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v4_rpf_neighbor = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v4_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.V4Rpf']['meta_info']


                class V6Rpf(object):
                    """
                    IPv6 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v6_rpf_neighbor
                    
                    	V6 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v6_rpf_neighbor = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v6_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.V6Rpf']['meta_info']


                class Mois(object):
                    """
                    Mois
                    
                    .. attribute:: application_resource
                    
                    	Application state
                    	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource>`
                    
                    .. attribute:: moi_array
                    
                    	moi array
                    	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_resource = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource()
                        self.application_resource.parent = self
                        self.moi_array = YList()
                        self.moi_array.parent = self
                        self.moi_array.name = 'moi_array'


                    class ApplicationResource(object):
                        """
                        Application state
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.ApplicationResource']['meta_info']


                    class MoiArray(object):
                        """
                        moi array
                        
                        .. attribute:: moi
                        
                        	Moi
                        	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.moi = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi()
                            self.moi.parent = self


                        class Moi(object):
                            """
                            Moi
                            
                            .. attribute:: dmtc_data
                            
                            	dmtc data
                            	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData>`
                            
                            .. attribute:: ip_sub_data
                            
                            	ip sub data
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data>`
                            
                            .. attribute:: moi_type
                            
                            	MoiType
                            	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                            
                            .. attribute:: pop_and_lookup_ipv4
                            
                            	pop and lookup ipv4
                            	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                            
                            .. attribute:: pop_and_lookup_ipv6
                            
                            	pop and lookup ipv6
                            	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                            
                            .. attribute:: pop_and_lookup_tp
                            
                            	pop and lookup tp
                            	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp>`
                            
                            .. attribute:: pseudowire_data
                            
                            	pseudowire data
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	pseudowire head end data
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData>`
                            
                            .. attribute:: stackv4_data
                            
                            	stackv4 data
                            	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data>`
                            
                            .. attribute:: stackv6_data
                            
                            	stackv6 data
                            	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data>`
                            
                            .. attribute:: te_head_data
                            
                            	te head data
                            	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData>`
                            
                            .. attribute:: tev4_data
                            
                            	tev4 data
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData()
                                self.dmtc_data.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.moi_type = None
                                self.pop_and_lookup_ipv4 = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                self.pop_and_lookup_ipv4.parent = self
                                self.pop_and_lookup_ipv6 = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                self.pop_and_lookup_ipv6.parent = self
                                self.pop_and_lookup_tp = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp()
                                self.pop_and_lookup_tp.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.pw_list_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData()
                                self.pw_list_data.parent = self
                                self.stackv4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data()
                                self.stackv4_data.parent = self
                                self.stackv6_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data()
                                self.stackv6_data.parent = self
                                self.te_head_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData()
                                self.te_head_data.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data()
                                self.tev4_data.parent = self


                            class PopAndLookupIpv4(object):
                                """
                                pop and lookup ipv4
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                            class PopAndLookupTp(object):
                                """
                                pop and lookup tp
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                            class PopAndLookupIpv6(object):
                                """
                                pop and lookup ipv6
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: load_metric
                                
                                	Routing path's load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	TE backup path local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_interface_parent
                                
                                	Outgoing Interface's parent
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv4_next_hop = None
                                    self.load_metric = None
                                    self.local_label = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_interface_parent = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.load_metric is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_interface_parent is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv6_next_hop = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                tev4 data
                                
                                .. attribute:: backup_interface
                                
                                	Backup interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_ipv4_next_hop
                                
                                	Backup IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_local_label
                                
                                	Backup local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: data_out_parent_interface
                                
                                	Outgoing data parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: merge_point_label
                                
                                	Merge point label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_class
                                
                                	Tunnel class
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tunnel_weight
                                
                                	Tunnel weight
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_interface = None
                                    self.backup_ipv4_next_hop = None
                                    self.backup_local_label = None
                                    self.data_out_parent_interface = None
                                    self.ipv4_next_hop = None
                                    self.merge_point_label = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_class = None
                                    self.tunnel_interface = None
                                    self.tunnel_weight = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_interface is not None:
                                        return True

                                    if self.backup_ipv4_next_hop is not None:
                                        return True

                                    if self.backup_local_label is not None:
                                        return True

                                    if self.data_out_parent_interface is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.merge_point_label is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_class is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tunnel_weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                            class PseudowireData(object):
                                """
                                pseudowire data
                                
                                .. attribute:: bridge_id
                                
                                	Bridge ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: cross_connect_id
                                
                                	Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pseuodo_wire_connect_id
                                
                                	PseudoWire Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: split_horizon_id
                                
                                	Split horizon group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bridge_id = None
                                    self.cross_connect_id = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pseuodo_wire_connect_id = None
                                    self.split_horizon_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bridge_id is not None:
                                        return True

                                    if self.cross_connect_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pseuodo_wire_connect_id is not None:
                                        return True

                                    if self.split_horizon_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                            class IpSubData(object):
                                """
                                ip sub data
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	VRF table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.IpSubData']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                pseudowire head end data
                                
                                .. attribute:: control_word
                                
                                	Is control word present
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: imposition
                                
                                	Is PWHE IMposition
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pw_list_id
                                
                                	Pseudo\-wire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: pwhe_interface
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: vctype
                                
                                	Virtual Circuit Type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.control_word = None
                                    self.imposition = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pw_list_id = None
                                    self.pwhe_interface = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.vctype = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.control_word is not None:
                                        return True

                                    if self.imposition is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pw_list_id is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.vctype is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: l2_interface
                                
                                	Pseudo\-wire Layer 2 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: l3_interface
                                
                                	Pseudo\-wire Layer 3 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.l2_interface = None
                                    self.l3_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.l2_interface is not None:
                                        return True

                                    if self.l3_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.PwListData']['meta_info']


                            class Stackv4Data(object):
                                """
                                stackv4 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                
                                .. attribute:: owner_application_type
                                
                                	Owner application type
                                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                    self.nexthop.parent = self
                                    self.owner_application_type = None


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):

                                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):

                                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data/Cisco-IOS-XR-mpls-lsd-oper:inner-stack/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):

                                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    if self.owner_application_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                            class Stackv6Data(object):
                                """
                                stackv6 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                    self.nexthop.parent = self


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):

                                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):

                                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data/Cisco-IOS-XR-mpls-lsd-oper:inner-stack/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):

                                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                            class TeHeadData(object):
                                """
                                te head data
                                
                                .. attribute:: flags_decode
                                
                                	Flags decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_fwd_class
                                
                                	Tunnel forwarding class
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: tunnel_load_metric
                                
                                	Tunnel Load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label
                                
                                	Tunnel local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label_str
                                
                                	Tunnel local label stringified
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_fwd_class = None
                                    self.tunnel_load_metric = None
                                    self.tunnel_local_label = None
                                    self.tunnel_local_label_str = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_fwd_class is not None:
                                        return True

                                    if self.tunnel_load_metric is not None:
                                        return True

                                    if self.tunnel_local_label is not None:
                                        return True

                                    if self.tunnel_local_label_str is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                            class DmtcData(object):
                                """
                                dmtc data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):

                                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi.DmtcData']['meta_info']

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array/Cisco-IOS-XR-mpls-lsd-oper:moi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_data is not None and self.dmtc_data._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.moi_type is not None:
                                    return True

                                if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                    return True

                                if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                    return True

                                if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.stackv4_data is not None and self.stackv4_data._has_data():
                                    return True

                                if self.stackv6_data is not None and self.stackv6_data._has_data():
                                    return True

                                if self.te_head_data is not None and self.te_head_data._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray.Moi']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.moi is not None and self.moi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois.MoiArray']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4/Cisco-IOS-XR-mpls-lsd-oper:mois'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_resource is not None and self.application_resource._has_data():
                            return True

                        if self.moi_array is not None:
                            for child_ref in self.moi_array:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4.Mois']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.associated_fpi is not None:
                        for child_ref in self.associated_fpi:
                            if child_ref._has_data():
                                return True

                    if self.bcdl_priority is not None:
                        return True

                    if self.fpi_key is not None and self.fpi_key._has_data():
                        return True

                    if self.lsd_queue is not None:
                        return True

                    if self.mois is not None:
                        for child_ref in self.mois:
                            if child_ref._has_data():
                                return True

                    if self.prefix is not None:
                        return True

                    if self.prefix_length is not None:
                        return True

                    if self.priority_updated is not None:
                        return True

                    if self.rewrite_id is not None and self.rewrite_id._has_data():
                        return True

                    if self.rewrite_version is not None:
                        return True

                    if self.rsi_table_id is not None:
                        return True

                    if self.rsi_table_name is not None:
                        return True

                    if self.rw_install_age is not None:
                        return True

                    if self.rw_install_time is not None:
                        return True

                    if self.rw_updated is not None:
                        return True

                    if self.v4_rpf is not None:
                        for child_ref in self.v4_rpf:
                            if child_ref._has_data():
                                return True

                    if self.v6_rpf is not None:
                        for child_ref in self.v6_rpf:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S.RewriteIpv4']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-ipv4s'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_ipv4 is not None:
                    for child_ref in self.rewrite_ipv4:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Rewrite.RewriteIpv4S']['meta_info']


        class RewriteTes(object):
            """
            Table of Traffic Engineering Rewrites
            
            .. attribute:: rewrite_te
            
            	FPI rewrite for TE
            	**type**\: list of    :py:class:`RewriteTe <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_te = YList()
                self.rewrite_te.parent = self
                self.rewrite_te.name = 'rewrite_te'


            class RewriteTe(object):
                """
                FPI rewrite for TE
                
                .. attribute:: interface_name  <key>
                
                	Tunnel interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: associated_fpi
                
                	Associated FPI
                	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi>`
                
                .. attribute:: bcdl_priority
                
                	BCDL Priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: fpi_key
                
                	fpi key
                	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey>`
                
                .. attribute:: lsd_queue
                
                	LSD queue
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: mois
                
                	Mois
                	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois>`
                
                .. attribute:: priority_updated
                
                	Is rewrite's BCDL priority updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: rewrite_id
                
                	Rewrite ID
                	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId>`
                
                .. attribute:: rewrite_version
                
                	Rewrite version
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_age
                
                	Rewrite install age
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_time
                
                	Rewrite install timestamp
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_updated
                
                	Is rewrite ever updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: v4_rpf
                
                	IPv4 RPF neighbors
                	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.V4Rpf>`
                
                .. attribute:: v6_rpf
                
                	IPv6 RPF neighbors
                	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.V6Rpf>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_name = None
                    self.associated_fpi = YList()
                    self.associated_fpi.parent = self
                    self.associated_fpi.name = 'associated_fpi'
                    self.bcdl_priority = None
                    self.fpi_key = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey()
                    self.fpi_key.parent = self
                    self.lsd_queue = None
                    self.mois = YList()
                    self.mois.parent = self
                    self.mois.name = 'mois'
                    self.priority_updated = None
                    self.rewrite_id = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId()
                    self.rewrite_id.parent = self
                    self.rewrite_version = None
                    self.rw_install_age = None
                    self.rw_install_time = None
                    self.rw_updated = None
                    self.v4_rpf = YList()
                    self.v4_rpf.parent = self
                    self.v4_rpf.name = 'v4_rpf'
                    self.v6_rpf = YList()
                    self.v6_rpf.parent = self
                    self.v6_rpf.name = 'v6_rpf'


                class FpiKey(object):
                    """
                    fpi key
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.FpiKey']['meta_info']


                class RewriteId(object):
                    """
                    Rewrite ID
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.rewrite_id = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_()
                        self.rewrite_id.parent = self


                    class RewriteId_(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: label_context
                        
                        	Label context
                        	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext>`
                        
                        .. attribute:: local_label_rewrite
                        
                        	Local label rewrite information
                        	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite>`
                        
                        .. attribute:: rewrite_id_type
                        
                        	RewriteIDType
                        	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.label_context = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext()
                            self.label_context.parent = self
                            self.local_label_rewrite = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite()
                            self.local_label_rewrite.parent = self
                            self.rewrite_id_type = None


                        class LabelContext(object):
                            """
                            Label context
                            
                            .. attribute:: cev4l3vpn_data
                            
                            	L3VPN CEv4 label context
                            	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                            
                            .. attribute:: cev6l3vpn_data
                            
                            	L3VPN CEv6 label context
                            	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                            
                            .. attribute:: evpn_data
                            
                            	EVPN context
                            	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData>`
                            
                            .. attribute:: generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                            
                            .. attribute:: ip_sub_data
                            
                            	IP Subscriber context
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	IPv4 label context
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                            
                            .. attribute:: ipv4blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                            
                            .. attribute:: ipv4l3vpn_data
                            
                            	L3VPN IPv4 label context
                            	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                            
                            .. attribute:: ipv6_data
                            
                            	IPv6 label context
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                            
                            .. attribute:: ipv6_generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                            
                            .. attribute:: ipv6blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                            
                            .. attribute:: ipv6l3vpn_data
                            
                            	L3VPN IPv6 label context
                            	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                            
                            .. attribute:: label_block_data
                            
                            	Label block context
                            	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                            
                            .. attribute:: label_block_srgb_data
                            
                            	Label block SRGB context
                            	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                            
                            .. attribute:: label_context_type
                            
                            	LabelContextType
                            	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                            
                            .. attribute:: mld_pv4_data
                            
                            	MLDPv4 LSM\-ID context
                            	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                            
                            .. attribute:: next_hop_set_l3vpn
                            
                            	L3VPN NH SET label context
                            	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                            
                            .. attribute:: pi_mi_pmsi_data
                            
                            	PIM I\-PMSI label conext
                            	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                            
                            .. attribute:: pi_ms_pmsi_data
                            
                            	PIM S\-PMSI label conext
                            	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                            
                            .. attribute:: pseudowire_data
                            
                            	Pseudowire label context
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	Pseudowire Head\-end label context
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                            
                            .. attribute:: sr_adj_segment_ipv4
                            
                            	SR Adj Segment ipv4 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                            
                            .. attribute:: sr_adj_segment_ipv6
                            
                            	SR Adj Segment ipv6 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                            
                            .. attribute:: sr_prefix_segment
                            
                            	SR Prefix Segment context
                            	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                            
                            .. attribute:: te_binding
                            
                            	MPLS TE tunnel binding context
                            	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding>`
                            
                            .. attribute:: tev4_data
                            
                            	TEv4 label context
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                            
                            .. attribute:: tev4p2mp_data
                            
                            	TEv4 P2MP context
                            	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                            
                            .. attribute:: tp_data
                            
                            	TP context
                            	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData>`
                            
                            .. attribute:: vrf_l3vpn_data
                            
                            	L3VPN VRF label context
                            	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.cev4l3vpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                self.cev4l3vpn_data.parent = self
                                self.cev6l3vpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                self.cev6l3vpn_data.parent = self
                                self.evpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData()
                                self.evpn_data.parent = self
                                self.generic_routing_encapsulation = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                self.generic_routing_encapsulation.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv4blb_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                self.ipv4blb_data.parent = self
                                self.ipv4l3vpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                self.ipv4l3vpn_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.ipv6_generic_routing_encapsulation = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                self.ipv6_generic_routing_encapsulation.parent = self
                                self.ipv6blb_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                self.ipv6blb_data.parent = self
                                self.ipv6l3vpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                self.ipv6l3vpn_data.parent = self
                                self.label_block_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                self.label_block_data.parent = self
                                self.label_block_srgb_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                self.label_block_srgb_data.parent = self
                                self.label_context_type = None
                                self.mld_pv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                self.mld_pv4_data.parent = self
                                self.next_hop_set_l3vpn = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                self.next_hop_set_l3vpn.parent = self
                                self.pi_mi_pmsi_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                self.pi_mi_pmsi_data.parent = self
                                self.pi_ms_pmsi_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                self.pi_ms_pmsi_data.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.sr_adj_segment_ipv4 = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                self.sr_adj_segment_ipv4.parent = self
                                self.sr_adj_segment_ipv6 = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                self.sr_adj_segment_ipv6.parent = self
                                self.sr_prefix_segment = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                self.sr_prefix_segment.parent = self
                                self.te_binding = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding()
                                self.te_binding.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                self.tev4_data.parent = self
                                self.tev4p2mp_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                self.tev4p2mp_data.parent = self
                                self.tp_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData()
                                self.tp_data.parent = self
                                self.vrf_l3vpn_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                self.vrf_l3vpn_data.parent = self


                            class Ipv4Data(object):
                                """
                                IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	IPv4 prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                TEv4 label context
                                
                                .. attribute:: is_srte
                                
                                	Is this an SRTE head tunnel
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_dest
                                
                                	Tunnel destination
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Extended tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.is_srte = None
                                    self.table_id = None
                                    self.tunnel_dest = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.is_srte is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_dest is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                            class Ipv4L3VpnData(object):
                                """
                                L3VPN IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                            class Ipv6L3VpnData(object):
                                """
                                L3VPN IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                            class VrfL3VpnData(object):
                                """
                                L3VPN VRF label context
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                            class Cev4L3VpnData(object):
                                """
                                L3VPN CEv4 label context
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv4_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                            class Cev6L3VpnData(object):
                                """
                                L3VPN CEv6 label context
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv6_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                            class PseudowireData(object):
                                """
                                Pseudowire label context
                                
                                .. attribute:: prefix
                                
                                	Address prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: pseudowire_id
                                
                                	Pseudo\-wire ID
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: remote_l2_router_id
                                
                                	Remote L2 Router ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: subinterface
                                
                                	Subinterface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.pseudowire_id = None
                                    self.remote_l2_router_id = None
                                    self.subinterface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.pseudowire_id is not None:
                                        return True

                                    if self.remote_l2_router_id is not None:
                                        return True

                                    if self.subinterface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                            class LabelBlockData(object):
                                """
                                Label block context
                                
                                .. attribute:: edge_id
                                
                                	Edge ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: service
                                
                                	Service
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vpn_id
                                
                                	VPN ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.edge_id = None
                                    self.offset = None
                                    self.service = None
                                    self.size = None
                                    self.vpn_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.edge_id is not None:
                                        return True

                                    if self.offset is not None:
                                        return True

                                    if self.service is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.vpn_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                            class IpSubData(object):
                                """
                                IP Subscriber context
                                
                                .. attribute:: parent_interface
                                
                                	Parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.parent_interface = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.parent_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                            class Tev4P2MpData(object):
                                """
                                TEv4 P2MP context
                                
                                .. attribute:: p2mp_id
                                
                                	Point to multipoint ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: previous_hop
                                
                                	Previous hop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Tunnel ID extension
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.p2mp_id = None
                                    self.previous_hop = None
                                    self.table_id = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.p2mp_id is not None:
                                        return True

                                    if self.previous_hop is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                            class MldPv4Data(object):
                                """
                                MLDPv4 LSM\-ID context
                                
                                .. attribute:: lsm_id
                                
                                	LSM ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: peer_label_space_id
                                
                                	Peer Label Space Id
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: peer_lsrid
                                
                                	Peer LSR Id
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	LSM ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lsm_id = None
                                    self.peer_label_space_id = None
                                    self.peer_lsrid = None
                                    self.table_id = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lsm_id is not None:
                                        return True

                                    if self.peer_label_space_id is not None:
                                        return True

                                    if self.peer_lsrid is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                Pseudowire Head\-end label context
                                
                                .. attribute:: pwhe_intf
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_intf = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_intf is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                            class TpData(object):
                                """
                                TP context
                                
                                .. attribute:: dest_global_id
                                
                                	TP destination global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dest_node_id
                                
                                	TP destination node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: dest_tunnel_id
                                
                                	TP destination tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsp_id
                                
                                	TP LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: source_global_id
                                
                                	TP source global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_node_id
                                
                                	TP source node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: source_tunnel_id
                                
                                	TP source tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dest_global_id = None
                                    self.dest_node_id = None
                                    self.dest_tunnel_id = None
                                    self.lsp_id = None
                                    self.source_global_id = None
                                    self.source_node_id = None
                                    self.source_tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dest_global_id is not None:
                                        return True

                                    if self.dest_node_id is not None:
                                        return True

                                    if self.dest_tunnel_id is not None:
                                        return True

                                    if self.lsp_id is not None:
                                        return True

                                    if self.source_global_id is not None:
                                        return True

                                    if self.source_node_id is not None:
                                        return True

                                    if self.source_tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                            class GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: gre_interface
                                
                                	Generic routing encapsulation interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.gre_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.gre_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                            class Ipv6GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: greipv6_interface
                                
                                	Generic routing encapsulation IPv6 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.greipv6_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.greipv6_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                            class EvpnData(object):
                                """
                                EVPN context
                                
                                .. attribute:: ethernet_segment
                                
                                	Ethernet Segment ID
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: evpn_id
                                
                                	EVPN ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: evpn_tag
                                
                                	EVPN TAG
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ethernet_segment = None
                                    self.evpn_id = None
                                    self.evpn_tag = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ethernet_segment is not None:
                                        return True

                                    if self.evpn_id is not None:
                                        return True

                                    if self.evpn_tag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                            class Ipv4BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                            class Ipv6BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                            class PiMiPmsiData(object):
                                """
                                PIM I\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                            class PiMsPmsiData(object):
                                """
                                PIM S\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: hli
                                
                                	Head LSM\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: seg
                                
                                	Segmented Multicast
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: source
                                
                                	Originating Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.hli = None
                                    self.seg = None
                                    self.source = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.hli is not None:
                                        return True

                                    if self.seg is not None:
                                        return True

                                    if self.source is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                            class NextHopSetL3Vpn(object):
                                """
                                L3VPN NH SET label context
                                
                                .. attribute:: next_hop_set_id
                                
                                	Next Hop Set ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.next_hop_set_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.next_hop_set_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                            class SrPrefixSegment(object):
                                """
                                SR Prefix Segment context
                                
                                .. attribute:: segment_id
                                
                                	Prefix Segment ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                            class SrAdjSegmentIpv4(object):
                                """
                                SR Adj Segment ipv4 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                            class SrAdjSegmentIpv6(object):
                                """
                                SR Adj Segment ipv6 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                            class LabelBlockSrgbData(object):
                                """
                                Label block SRGB context
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: start_label
                                
                                	Start Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.offset = None
                                    self.size = None
                                    self.start_label = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.offset is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.start_label is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                            class TeBinding(object):
                                """
                                MPLS TE tunnel binding context
                                
                                .. attribute:: te_identifier
                                
                                	MPLS Traffic Engineering Tunnel or Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: te_type
                                
                                	Type of identifier for the binding
                                	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.te_identifier = None
                                    self.te_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.te_identifier is not None:
                                        return True

                                    if self.te_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                    return True

                                if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                    return True

                                if self.evpn_data is not None and self.evpn_data._has_data():
                                    return True

                                if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                    return True

                                if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                    return True

                                if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                    return True

                                if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                    return True

                                if self.label_block_data is not None and self.label_block_data._has_data():
                                    return True

                                if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                    return True

                                if self.label_context_type is not None:
                                    return True

                                if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                    return True

                                if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                    return True

                                if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                    return True

                                if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                    return True

                                if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                    return True

                                if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                    return True

                                if self.te_binding is not None and self.te_binding._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                    return True

                                if self.tp_data is not None and self.tp_data._has_data():
                                    return True

                                if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LabelContext']['meta_info']


                        class LocalLabelRewrite(object):
                            """
                            Local label rewrite information
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_data = YLeafList()
                                self.label_data.parent = self
                                self.label_data.name = 'label_data'

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_data is not None:
                                    for child in self.label_data:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.label_context is not None and self.label_context._has_data():
                                return True

                            if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                return True

                            if self.rewrite_id_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId.RewriteId_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.RewriteId']['meta_info']


                class AssociatedFpi(object):
                    """
                    Associated FPI
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.AssociatedFpi']['meta_info']


                class V4Rpf(object):
                    """
                    IPv4 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v4_rpf_neighbor
                    
                    	V4 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v4_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v4_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.V4Rpf']['meta_info']


                class V6Rpf(object):
                    """
                    IPv6 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v6_rpf_neighbor
                    
                    	V6 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v6_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v6_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.V6Rpf']['meta_info']


                class Mois(object):
                    """
                    Mois
                    
                    .. attribute:: application_resource
                    
                    	Application state
                    	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource>`
                    
                    .. attribute:: moi_array
                    
                    	moi array
                    	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_resource = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource()
                        self.application_resource.parent = self
                        self.moi_array = YList()
                        self.moi_array.parent = self
                        self.moi_array.name = 'moi_array'


                    class ApplicationResource(object):
                        """
                        Application state
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.ApplicationResource']['meta_info']


                    class MoiArray(object):
                        """
                        moi array
                        
                        .. attribute:: moi
                        
                        	Moi
                        	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.moi = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi()
                            self.moi.parent = self


                        class Moi(object):
                            """
                            Moi
                            
                            .. attribute:: dmtc_data
                            
                            	dmtc data
                            	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData>`
                            
                            .. attribute:: ip_sub_data
                            
                            	ip sub data
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data>`
                            
                            .. attribute:: moi_type
                            
                            	MoiType
                            	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                            
                            .. attribute:: pop_and_lookup_ipv4
                            
                            	pop and lookup ipv4
                            	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                            
                            .. attribute:: pop_and_lookup_ipv6
                            
                            	pop and lookup ipv6
                            	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                            
                            .. attribute:: pop_and_lookup_tp
                            
                            	pop and lookup tp
                            	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp>`
                            
                            .. attribute:: pseudowire_data
                            
                            	pseudowire data
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	pseudowire head end data
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData>`
                            
                            .. attribute:: stackv4_data
                            
                            	stackv4 data
                            	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data>`
                            
                            .. attribute:: stackv6_data
                            
                            	stackv6 data
                            	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data>`
                            
                            .. attribute:: te_head_data
                            
                            	te head data
                            	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData>`
                            
                            .. attribute:: tev4_data
                            
                            	tev4 data
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData()
                                self.dmtc_data.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.moi_type = None
                                self.pop_and_lookup_ipv4 = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                self.pop_and_lookup_ipv4.parent = self
                                self.pop_and_lookup_ipv6 = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                self.pop_and_lookup_ipv6.parent = self
                                self.pop_and_lookup_tp = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp()
                                self.pop_and_lookup_tp.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.pw_list_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData()
                                self.pw_list_data.parent = self
                                self.stackv4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data()
                                self.stackv4_data.parent = self
                                self.stackv6_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data()
                                self.stackv6_data.parent = self
                                self.te_head_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData()
                                self.te_head_data.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data()
                                self.tev4_data.parent = self


                            class PopAndLookupIpv4(object):
                                """
                                pop and lookup ipv4
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                            class PopAndLookupTp(object):
                                """
                                pop and lookup tp
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                            class PopAndLookupIpv6(object):
                                """
                                pop and lookup ipv6
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: load_metric
                                
                                	Routing path's load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	TE backup path local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_interface_parent
                                
                                	Outgoing Interface's parent
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv4_next_hop = None
                                    self.load_metric = None
                                    self.local_label = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_interface_parent = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.load_metric is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_interface_parent is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv6_next_hop = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                tev4 data
                                
                                .. attribute:: backup_interface
                                
                                	Backup interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_ipv4_next_hop
                                
                                	Backup IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_local_label
                                
                                	Backup local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: data_out_parent_interface
                                
                                	Outgoing data parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: merge_point_label
                                
                                	Merge point label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_class
                                
                                	Tunnel class
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tunnel_weight
                                
                                	Tunnel weight
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_interface = None
                                    self.backup_ipv4_next_hop = None
                                    self.backup_local_label = None
                                    self.data_out_parent_interface = None
                                    self.ipv4_next_hop = None
                                    self.merge_point_label = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_class = None
                                    self.tunnel_interface = None
                                    self.tunnel_weight = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_interface is not None:
                                        return True

                                    if self.backup_ipv4_next_hop is not None:
                                        return True

                                    if self.backup_local_label is not None:
                                        return True

                                    if self.data_out_parent_interface is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.merge_point_label is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_class is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tunnel_weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                            class PseudowireData(object):
                                """
                                pseudowire data
                                
                                .. attribute:: bridge_id
                                
                                	Bridge ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: cross_connect_id
                                
                                	Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pseuodo_wire_connect_id
                                
                                	PseudoWire Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: split_horizon_id
                                
                                	Split horizon group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bridge_id = None
                                    self.cross_connect_id = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pseuodo_wire_connect_id = None
                                    self.split_horizon_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bridge_id is not None:
                                        return True

                                    if self.cross_connect_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pseuodo_wire_connect_id is not None:
                                        return True

                                    if self.split_horizon_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                            class IpSubData(object):
                                """
                                ip sub data
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	VRF table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.IpSubData']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                pseudowire head end data
                                
                                .. attribute:: control_word
                                
                                	Is control word present
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: imposition
                                
                                	Is PWHE IMposition
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pw_list_id
                                
                                	Pseudo\-wire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: pwhe_interface
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: vctype
                                
                                	Virtual Circuit Type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.control_word = None
                                    self.imposition = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pw_list_id = None
                                    self.pwhe_interface = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.vctype = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.control_word is not None:
                                        return True

                                    if self.imposition is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pw_list_id is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.vctype is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: l2_interface
                                
                                	Pseudo\-wire Layer 2 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: l3_interface
                                
                                	Pseudo\-wire Layer 3 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.l2_interface = None
                                    self.l3_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.l2_interface is not None:
                                        return True

                                    if self.l3_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.PwListData']['meta_info']


                            class Stackv4Data(object):
                                """
                                stackv4 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                
                                .. attribute:: owner_application_type
                                
                                	Owner application type
                                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                    self.nexthop.parent = self
                                    self.owner_application_type = None


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    if self.owner_application_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                            class Stackv6Data(object):
                                """
                                stackv6 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                    self.nexthop.parent = self


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                            class TeHeadData(object):
                                """
                                te head data
                                
                                .. attribute:: flags_decode
                                
                                	Flags decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_fwd_class
                                
                                	Tunnel forwarding class
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: tunnel_load_metric
                                
                                	Tunnel Load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label
                                
                                	Tunnel local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label_str
                                
                                	Tunnel local label stringified
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_fwd_class = None
                                    self.tunnel_load_metric = None
                                    self.tunnel_local_label = None
                                    self.tunnel_local_label_str = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_fwd_class is not None:
                                        return True

                                    if self.tunnel_load_metric is not None:
                                        return True

                                    if self.tunnel_local_label is not None:
                                        return True

                                    if self.tunnel_local_label_str is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                            class DmtcData(object):
                                """
                                dmtc data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi.DmtcData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_data is not None and self.dmtc_data._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.moi_type is not None:
                                    return True

                                if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                    return True

                                if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                    return True

                                if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.stackv4_data is not None and self.stackv4_data._has_data():
                                    return True

                                if self.stackv6_data is not None and self.stackv6_data._has_data():
                                    return True

                                if self.te_head_data is not None and self.te_head_data._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray.Moi']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.moi is not None and self.moi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois.MoiArray']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_resource is not None and self.application_resource._has_data():
                            return True

                        if self.moi_array is not None:
                            for child_ref in self.moi_array:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe.Mois']['meta_info']

                @property
                def _common_path(self):
                    if self.interface_name is None:
                        raise YPYModelError('Key property interface_name is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-tes/Cisco-IOS-XR-mpls-lsd-oper:rewrite-te[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface_name is not None:
                        return True

                    if self.associated_fpi is not None:
                        for child_ref in self.associated_fpi:
                            if child_ref._has_data():
                                return True

                    if self.bcdl_priority is not None:
                        return True

                    if self.fpi_key is not None and self.fpi_key._has_data():
                        return True

                    if self.lsd_queue is not None:
                        return True

                    if self.mois is not None:
                        for child_ref in self.mois:
                            if child_ref._has_data():
                                return True

                    if self.priority_updated is not None:
                        return True

                    if self.rewrite_id is not None and self.rewrite_id._has_data():
                        return True

                    if self.rewrite_version is not None:
                        return True

                    if self.rw_install_age is not None:
                        return True

                    if self.rw_install_time is not None:
                        return True

                    if self.rw_updated is not None:
                        return True

                    if self.v4_rpf is not None:
                        for child_ref in self.v4_rpf:
                            if child_ref._has_data():
                                return True

                    if self.v6_rpf is not None:
                        for child_ref in self.v6_rpf:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Rewrite.RewriteTes.RewriteTe']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-tes'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_te is not None:
                    for child_ref in self.rewrite_te:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Rewrite.RewriteTes']['meta_info']


        class RewriteLabels(object):
            """
            Table of Rewrites
            
            .. attribute:: rewrite_label
            
            	FPI rewrite for label
            	**type**\: list of    :py:class:`RewriteLabel <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.rewrite_label = YList()
                self.rewrite_label.parent = self
                self.rewrite_label.name = 'rewrite_label'


            class RewriteLabel(object):
                """
                FPI rewrite for label
                
                .. attribute:: label_id  <key>
                
                	Label value
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: associated_fpi
                
                	Associated FPI
                	**type**\: list of    :py:class:`AssociatedFpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi>`
                
                .. attribute:: bcdl_priority
                
                	BCDL Priority
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: fpi_key
                
                	fpi key
                	**type**\:   :py:class:`FpiKey <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey>`
                
                .. attribute:: lsd_queue
                
                	LSD queue
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: mois
                
                	Mois
                	**type**\: list of    :py:class:`Mois <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois>`
                
                .. attribute:: priority_updated
                
                	Is rewrite's BCDL priority updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: rewrite_id
                
                	Rewrite ID
                	**type**\:   :py:class:`RewriteId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId>`
                
                .. attribute:: rewrite_version
                
                	Rewrite version
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_age
                
                	Rewrite install age
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_install_time
                
                	Rewrite install timestamp
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: rw_updated
                
                	Is rewrite ever updated
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: v4_rpf
                
                	IPv4 RPF neighbors
                	**type**\: list of    :py:class:`V4Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.V4Rpf>`
                
                .. attribute:: v6_rpf
                
                	IPv6 RPF neighbors
                	**type**\: list of    :py:class:`V6Rpf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.V6Rpf>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.label_id = None
                    self.associated_fpi = YList()
                    self.associated_fpi.parent = self
                    self.associated_fpi.name = 'associated_fpi'
                    self.bcdl_priority = None
                    self.fpi_key = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey()
                    self.fpi_key.parent = self
                    self.lsd_queue = None
                    self.mois = YList()
                    self.mois.parent = self
                    self.mois.name = 'mois'
                    self.priority_updated = None
                    self.rewrite_id = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId()
                    self.rewrite_id.parent = self
                    self.rewrite_version = None
                    self.rw_install_age = None
                    self.rw_install_time = None
                    self.rw_updated = None
                    self.v4_rpf = YList()
                    self.v4_rpf.parent = self
                    self.v4_rpf.name = 'v4_rpf'
                    self.v6_rpf = YList()
                    self.v6_rpf.parent = self
                    self.v6_rpf.name = 'v6_rpf'


                class FpiKey(object):
                    """
                    fpi key
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi-key'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.FpiKey']['meta_info']


                class RewriteId(object):
                    """
                    Rewrite ID
                    
                    .. attribute:: rewrite_id
                    
                    	Rewrite ID
                    	**type**\:   :py:class:`RewriteId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.rewrite_id = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_()
                        self.rewrite_id.parent = self


                    class RewriteId_(object):
                        """
                        Rewrite ID
                        
                        .. attribute:: label_context
                        
                        	Label context
                        	**type**\:   :py:class:`LabelContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext>`
                        
                        .. attribute:: local_label_rewrite
                        
                        	Local label rewrite information
                        	**type**\:   :py:class:`LocalLabelRewrite <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite>`
                        
                        .. attribute:: rewrite_id_type
                        
                        	RewriteIDType
                        	**type**\:   :py:class:`MgmtLsdRwIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdRwIdEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.label_context = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext()
                            self.label_context.parent = self
                            self.local_label_rewrite = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite()
                            self.local_label_rewrite.parent = self
                            self.rewrite_id_type = None


                        class LabelContext(object):
                            """
                            Label context
                            
                            .. attribute:: cev4l3vpn_data
                            
                            	L3VPN CEv4 label context
                            	**type**\:   :py:class:`Cev4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData>`
                            
                            .. attribute:: cev6l3vpn_data
                            
                            	L3VPN CEv6 label context
                            	**type**\:   :py:class:`Cev6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData>`
                            
                            .. attribute:: evpn_data
                            
                            	EVPN context
                            	**type**\:   :py:class:`EvpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData>`
                            
                            .. attribute:: generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation>`
                            
                            .. attribute:: ip_sub_data
                            
                            	IP Subscriber context
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	IPv4 label context
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data>`
                            
                            .. attribute:: ipv4blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv4BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData>`
                            
                            .. attribute:: ipv4l3vpn_data
                            
                            	L3VPN IPv4 label context
                            	**type**\:   :py:class:`Ipv4L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData>`
                            
                            .. attribute:: ipv6_data
                            
                            	IPv6 label context
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data>`
                            
                            .. attribute:: ipv6_generic_routing_encapsulation
                            
                            	Generic routing encapsulation context
                            	**type**\:   :py:class:`Ipv6GenericRoutingEncapsulation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation>`
                            
                            .. attribute:: ipv6blb_data
                            
                            	BFD BLB label context
                            	**type**\:   :py:class:`Ipv6BlbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData>`
                            
                            .. attribute:: ipv6l3vpn_data
                            
                            	L3VPN IPv6 label context
                            	**type**\:   :py:class:`Ipv6L3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData>`
                            
                            .. attribute:: label_block_data
                            
                            	Label block context
                            	**type**\:   :py:class:`LabelBlockData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData>`
                            
                            .. attribute:: label_block_srgb_data
                            
                            	Label block SRGB context
                            	**type**\:   :py:class:`LabelBlockSrgbData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData>`
                            
                            .. attribute:: label_context_type
                            
                            	LabelContextType
                            	**type**\:   :py:class:`MgmtLsdLblCtxEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdLblCtxEnum>`
                            
                            .. attribute:: mld_pv4_data
                            
                            	MLDPv4 LSM\-ID context
                            	**type**\:   :py:class:`MldPv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data>`
                            
                            .. attribute:: next_hop_set_l3vpn
                            
                            	L3VPN NH SET label context
                            	**type**\:   :py:class:`NextHopSetL3Vpn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn>`
                            
                            .. attribute:: pi_mi_pmsi_data
                            
                            	PIM I\-PMSI label conext
                            	**type**\:   :py:class:`PiMiPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData>`
                            
                            .. attribute:: pi_ms_pmsi_data
                            
                            	PIM S\-PMSI label conext
                            	**type**\:   :py:class:`PiMsPmsiData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData>`
                            
                            .. attribute:: pseudowire_data
                            
                            	Pseudowire label context
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	Pseudowire Head\-end label context
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData>`
                            
                            .. attribute:: sr_adj_segment_ipv4
                            
                            	SR Adj Segment ipv4 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4>`
                            
                            .. attribute:: sr_adj_segment_ipv6
                            
                            	SR Adj Segment ipv6 context
                            	**type**\:   :py:class:`SrAdjSegmentIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6>`
                            
                            .. attribute:: sr_prefix_segment
                            
                            	SR Prefix Segment context
                            	**type**\:   :py:class:`SrPrefixSegment <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment>`
                            
                            .. attribute:: te_binding
                            
                            	MPLS TE tunnel binding context
                            	**type**\:   :py:class:`TeBinding <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding>`
                            
                            .. attribute:: tev4_data
                            
                            	TEv4 label context
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data>`
                            
                            .. attribute:: tev4p2mp_data
                            
                            	TEv4 P2MP context
                            	**type**\:   :py:class:`Tev4P2MpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData>`
                            
                            .. attribute:: tp_data
                            
                            	TP context
                            	**type**\:   :py:class:`TpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData>`
                            
                            .. attribute:: vrf_l3vpn_data
                            
                            	L3VPN VRF label context
                            	**type**\:   :py:class:`VrfL3VpnData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.cev4l3vpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData()
                                self.cev4l3vpn_data.parent = self
                                self.cev6l3vpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData()
                                self.cev6l3vpn_data.parent = self
                                self.evpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData()
                                self.evpn_data.parent = self
                                self.generic_routing_encapsulation = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation()
                                self.generic_routing_encapsulation.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv4blb_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData()
                                self.ipv4blb_data.parent = self
                                self.ipv4l3vpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData()
                                self.ipv4l3vpn_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.ipv6_generic_routing_encapsulation = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation()
                                self.ipv6_generic_routing_encapsulation.parent = self
                                self.ipv6blb_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData()
                                self.ipv6blb_data.parent = self
                                self.ipv6l3vpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData()
                                self.ipv6l3vpn_data.parent = self
                                self.label_block_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData()
                                self.label_block_data.parent = self
                                self.label_block_srgb_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData()
                                self.label_block_srgb_data.parent = self
                                self.label_context_type = None
                                self.mld_pv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data()
                                self.mld_pv4_data.parent = self
                                self.next_hop_set_l3vpn = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn()
                                self.next_hop_set_l3vpn.parent = self
                                self.pi_mi_pmsi_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData()
                                self.pi_mi_pmsi_data.parent = self
                                self.pi_ms_pmsi_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData()
                                self.pi_ms_pmsi_data.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.sr_adj_segment_ipv4 = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4()
                                self.sr_adj_segment_ipv4.parent = self
                                self.sr_adj_segment_ipv6 = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6()
                                self.sr_adj_segment_ipv6.parent = self
                                self.sr_prefix_segment = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment()
                                self.sr_prefix_segment.parent = self
                                self.te_binding = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding()
                                self.te_binding.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data()
                                self.tev4_data.parent = self
                                self.tev4p2mp_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData()
                                self.tev4p2mp_data.parent = self
                                self.tp_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData()
                                self.tp_data.parent = self
                                self.vrf_l3vpn_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData()
                                self.vrf_l3vpn_data.parent = self


                            class Ipv4Data(object):
                                """
                                IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	IPv4 prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	Prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vrf_name
                                
                                	VRF Name
                                	**type**\:  str
                                
                                	**length:** 0..33
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.security_id = None
                                    self.table_id = None
                                    self.vrf_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.vrf_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                TEv4 label context
                                
                                .. attribute:: is_srte
                                
                                	Is this an SRTE head tunnel
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_dest
                                
                                	Tunnel destination
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Extended tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.is_srte = None
                                    self.table_id = None
                                    self.tunnel_dest = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.is_srte is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_dest is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4Data']['meta_info']


                            class Ipv4L3VpnData(object):
                                """
                                L3VPN IPv4 label context
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4L3VpnData']['meta_info']


                            class Ipv6L3VpnData(object):
                                """
                                L3VPN IPv6 label context
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: prefix_length
                                
                                	Prefix length
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: route_distinguisher
                                
                                	Route distinguisher
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.prefix_length = None
                                    self.route_distinguisher = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.prefix_length is not None:
                                        return True

                                    if self.route_distinguisher is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6L3VpnData']['meta_info']


                            class VrfL3VpnData(object):
                                """
                                L3VPN VRF label context
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:vrf-l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.VrfL3VpnData']['meta_info']


                            class Cev4L3VpnData(object):
                                """
                                L3VPN CEv4 label context
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv4_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev4l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev4L3VpnData']['meta_info']


                            class Cev6L3VpnData(object):
                                """
                                L3VPN CEv6 label context
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: security_id
                                
                                	Security ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ipv6_next_hop = None
                                    self.security_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:cev6l3vpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.security_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Cev6L3VpnData']['meta_info']


                            class PseudowireData(object):
                                """
                                Pseudowire label context
                                
                                .. attribute:: prefix
                                
                                	Address prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: pseudowire_id
                                
                                	Pseudo\-wire ID
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                .. attribute:: remote_l2_router_id
                                
                                	Remote L2 Router ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: subinterface
                                
                                	Subinterface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.prefix = None
                                    self.pseudowire_id = None
                                    self.remote_l2_router_id = None
                                    self.subinterface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.prefix is not None:
                                        return True

                                    if self.pseudowire_id is not None:
                                        return True

                                    if self.remote_l2_router_id is not None:
                                        return True

                                    if self.subinterface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireData']['meta_info']


                            class LabelBlockData(object):
                                """
                                Label block context
                                
                                .. attribute:: edge_id
                                
                                	Edge ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: service
                                
                                	Service
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: vpn_id
                                
                                	VPN ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.edge_id = None
                                    self.offset = None
                                    self.service = None
                                    self.size = None
                                    self.vpn_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.edge_id is not None:
                                        return True

                                    if self.offset is not None:
                                        return True

                                    if self.service is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.vpn_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockData']['meta_info']


                            class IpSubData(object):
                                """
                                IP Subscriber context
                                
                                .. attribute:: parent_interface
                                
                                	Parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table Id
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.parent_interface = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.parent_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.IpSubData']['meta_info']


                            class Tev4P2MpData(object):
                                """
                                TEv4 P2MP context
                                
                                .. attribute:: p2mp_id
                                
                                	Point to multipoint ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: previous_hop
                                
                                	Previous hop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_id_extension
                                
                                	Tunnel ID extension
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_lsp_id
                                
                                	Tunnel LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_source
                                
                                	Tunnel source
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.p2mp_id = None
                                    self.previous_hop = None
                                    self.table_id = None
                                    self.tunnel_id = None
                                    self.tunnel_id_extension = None
                                    self.tunnel_lsp_id = None
                                    self.tunnel_source = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4p2mp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.p2mp_id is not None:
                                        return True

                                    if self.previous_hop is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    if self.tunnel_id_extension is not None:
                                        return True

                                    if self.tunnel_lsp_id is not None:
                                        return True

                                    if self.tunnel_source is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Tev4P2MpData']['meta_info']


                            class MldPv4Data(object):
                                """
                                MLDPv4 LSM\-ID context
                                
                                .. attribute:: lsm_id
                                
                                	LSM ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: peer_label_space_id
                                
                                	Peer Label Space Id
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: peer_lsrid
                                
                                	Peer LSR Id
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	LSM ID Type
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.lsm_id = None
                                    self.peer_label_space_id = None
                                    self.peer_lsrid = None
                                    self.table_id = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mld-pv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.lsm_id is not None:
                                        return True

                                    if self.peer_label_space_id is not None:
                                        return True

                                    if self.peer_lsrid is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.MldPv4Data']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                Pseudowire Head\-end label context
                                
                                .. attribute:: pwhe_intf
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.pwhe_intf = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.pwhe_intf is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PseudowireHeadEndData']['meta_info']


                            class TpData(object):
                                """
                                TP context
                                
                                .. attribute:: dest_global_id
                                
                                	TP destination global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: dest_node_id
                                
                                	TP destination node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: dest_tunnel_id
                                
                                	TP destination tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: lsp_id
                                
                                	TP LSP ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: source_global_id
                                
                                	TP source global ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: source_node_id
                                
                                	TP source node ID
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: source_tunnel_id
                                
                                	TP source tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dest_global_id = None
                                    self.dest_node_id = None
                                    self.dest_tunnel_id = None
                                    self.lsp_id = None
                                    self.source_global_id = None
                                    self.source_node_id = None
                                    self.source_tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tp-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dest_global_id is not None:
                                        return True

                                    if self.dest_node_id is not None:
                                        return True

                                    if self.dest_tunnel_id is not None:
                                        return True

                                    if self.lsp_id is not None:
                                        return True

                                    if self.source_global_id is not None:
                                        return True

                                    if self.source_node_id is not None:
                                        return True

                                    if self.source_tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TpData']['meta_info']


                            class GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: gre_interface
                                
                                	Generic routing encapsulation interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.gre_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.gre_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.GenericRoutingEncapsulation']['meta_info']


                            class Ipv6GenericRoutingEncapsulation(object):
                                """
                                Generic routing encapsulation context
                                
                                .. attribute:: greipv6_interface
                                
                                	Generic routing encapsulation IPv6 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.greipv6_interface = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-generic-routing-encapsulation'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.greipv6_interface is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6GenericRoutingEncapsulation']['meta_info']


                            class EvpnData(object):
                                """
                                EVPN context
                                
                                .. attribute:: ethernet_segment
                                
                                	Ethernet Segment ID
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                .. attribute:: evpn_id
                                
                                	EVPN ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: evpn_tag
                                
                                	EVPN TAG
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.ethernet_segment = None
                                    self.evpn_id = None
                                    self.evpn_tag = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:evpn-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.ethernet_segment is not None:
                                        return True

                                    if self.evpn_id is not None:
                                        return True

                                    if self.evpn_tag is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.EvpnData']['meta_info']


                            class Ipv4BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv4 prefix
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv4BlbData']['meta_info']


                            class Ipv6BlbData(object):
                                """
                                BFD BLB label context
                                
                                .. attribute:: blb_intf
                                
                                	BFD BLB interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: prefix
                                
                                	IPv6 prefix
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.blb_intf = None
                                    self.prefix = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6blb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.blb_intf is not None:
                                        return True

                                    if self.prefix is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.Ipv6BlbData']['meta_info']


                            class PiMiPmsiData(object):
                                """
                                PIM I\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-mi-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMiPmsiData']['meta_info']


                            class PiMsPmsiData(object):
                                """
                                PIM S\-PMSI label conext
                                
                                .. attribute:: head
                                
                                	Head
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: hli
                                
                                	Head LSM\-ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: seg
                                
                                	Segmented Multicast
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: source
                                
                                	Originating Router
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: v6
                                
                                	PIM6
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: vrf_id
                                
                                	VRF ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.head = None
                                    self.hli = None
                                    self.seg = None
                                    self.source = None
                                    self.v6 = None
                                    self.vrf_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pi-ms-pmsi-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.head is not None:
                                        return True

                                    if self.hli is not None:
                                        return True

                                    if self.seg is not None:
                                        return True

                                    if self.source is not None:
                                        return True

                                    if self.v6 is not None:
                                        return True

                                    if self.vrf_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.PiMsPmsiData']['meta_info']


                            class NextHopSetL3Vpn(object):
                                """
                                L3VPN NH SET label context
                                
                                .. attribute:: next_hop_set_id
                                
                                	Next Hop Set ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.next_hop_set_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:next-hop-set-l3vpn'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.next_hop_set_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.NextHopSetL3Vpn']['meta_info']


                            class SrPrefixSegment(object):
                                """
                                SR Prefix Segment context
                                
                                .. attribute:: segment_id
                                
                                	Prefix Segment ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.segment_id = None
                                    self.table_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-prefix-segment'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.segment_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrPrefixSegment']['meta_info']


                            class SrAdjSegmentIpv4(object):
                                """
                                SR Adj Segment ipv4 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv4 address
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv4']['meta_info']


                            class SrAdjSegmentIpv6(object):
                                """
                                SR Adj Segment ipv6 context
                                
                                .. attribute:: addr
                                
                                	Adjacency nexthop IPv6 address
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: index
                                
                                	Adjacency index
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: intf
                                
                                	Adjacency interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: type
                                
                                	Adjacency type
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.addr = None
                                    self.index = None
                                    self.intf = None
                                    self.type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:sr-adj-segment-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.addr is not None:
                                        return True

                                    if self.index is not None:
                                        return True

                                    if self.intf is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.SrAdjSegmentIpv6']['meta_info']


                            class LabelBlockSrgbData(object):
                                """
                                Label block SRGB context
                                
                                .. attribute:: offset
                                
                                	Offset
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: size
                                
                                	Number of labels
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: start_label
                                
                                	Start Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.offset = None
                                    self.size = None
                                    self.start_label = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-block-srgb-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.offset is not None:
                                        return True

                                    if self.size is not None:
                                        return True

                                    if self.start_label is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.LabelBlockSrgbData']['meta_info']


                            class TeBinding(object):
                                """
                                MPLS TE tunnel binding context
                                
                                .. attribute:: te_identifier
                                
                                	MPLS Traffic Engineering Tunnel or Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: te_type
                                
                                	Type of identifier for the binding
                                	**type**\:   :py:class:`MgmtLsdTeBindingEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdTeBindingEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.te_identifier = None
                                    self.te_type = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-binding'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.te_identifier is not None:
                                        return True

                                    if self.te_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext.TeBinding']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-context'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.cev4l3vpn_data is not None and self.cev4l3vpn_data._has_data():
                                    return True

                                if self.cev6l3vpn_data is not None and self.cev6l3vpn_data._has_data():
                                    return True

                                if self.evpn_data is not None and self.evpn_data._has_data():
                                    return True

                                if self.generic_routing_encapsulation is not None and self.generic_routing_encapsulation._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv4blb_data is not None and self.ipv4blb_data._has_data():
                                    return True

                                if self.ipv4l3vpn_data is not None and self.ipv4l3vpn_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.ipv6_generic_routing_encapsulation is not None and self.ipv6_generic_routing_encapsulation._has_data():
                                    return True

                                if self.ipv6blb_data is not None and self.ipv6blb_data._has_data():
                                    return True

                                if self.ipv6l3vpn_data is not None and self.ipv6l3vpn_data._has_data():
                                    return True

                                if self.label_block_data is not None and self.label_block_data._has_data():
                                    return True

                                if self.label_block_srgb_data is not None and self.label_block_srgb_data._has_data():
                                    return True

                                if self.label_context_type is not None:
                                    return True

                                if self.mld_pv4_data is not None and self.mld_pv4_data._has_data():
                                    return True

                                if self.next_hop_set_l3vpn is not None and self.next_hop_set_l3vpn._has_data():
                                    return True

                                if self.pi_mi_pmsi_data is not None and self.pi_mi_pmsi_data._has_data():
                                    return True

                                if self.pi_ms_pmsi_data is not None and self.pi_ms_pmsi_data._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.sr_adj_segment_ipv4 is not None and self.sr_adj_segment_ipv4._has_data():
                                    return True

                                if self.sr_adj_segment_ipv6 is not None and self.sr_adj_segment_ipv6._has_data():
                                    return True

                                if self.sr_prefix_segment is not None and self.sr_prefix_segment._has_data():
                                    return True

                                if self.te_binding is not None and self.te_binding._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                if self.tev4p2mp_data is not None and self.tev4p2mp_data._has_data():
                                    return True

                                if self.tp_data is not None and self.tp_data._has_data():
                                    return True

                                if self.vrf_l3vpn_data is not None and self.vrf_l3vpn_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LabelContext']['meta_info']


                        class LocalLabelRewrite(object):
                            """
                            Local label rewrite information
                            
                            .. attribute:: label_data
                            
                            	label data
                            	**type**\:  list of int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.label_data = YLeafList()
                                self.label_data.parent = self
                                self.label_data.name = 'label_data'

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:local-label-rewrite'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.label_data is not None:
                                    for child in self.label_data:
                                        if child is not None:
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_.LocalLabelRewrite']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.label_context is not None and self.label_context._has_data():
                                return True

                            if self.local_label_rewrite is not None and self.local_label_rewrite._has_data():
                                return True

                            if self.rewrite_id_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId.RewriteId_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:rewrite-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.rewrite_id is not None and self.rewrite_id._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.RewriteId']['meta_info']


                class AssociatedFpi(object):
                    """
                    Associated FPI
                    
                    .. attribute:: application_owner
                    
                    	Application owner instance
                    	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.ApplicationOwner>`
                    
                    .. attribute:: fpi
                    
                    	FPI
                    	**type**\:   :py:class:`Fpi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_owner = YList()
                        self.application_owner.parent = self
                        self.application_owner.name = 'application_owner'
                        self.fpi = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi()
                        self.fpi.parent = self


                    class Fpi(object):
                        """
                        FPI
                        
                        .. attribute:: dmtc_ext_intf_data
                        
                        	dmtc ext intf data
                        	**type**\:   :py:class:`DmtcExtIntfData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData>`
                        
                        .. attribute:: fpi_type
                        
                        	FPIType
                        	**type**\:   :py:class:`MgmtLsdFpiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdFpiEnum>`
                        
                        .. attribute:: ipv4_data
                        
                        	ipv4 data
                        	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data>`
                        
                        .. attribute:: ipv6_data
                        
                        	ipv6 data
                        	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data>`
                        
                        .. attribute:: label_data
                        
                        	label data
                        	**type**\:   :py:class:`LabelData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData>`
                        
                        .. attribute:: pw_list_data
                        
                        	pw list data
                        	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData>`
                        
                        .. attribute:: te_data
                        
                        	te data
                        	**type**\:   :py:class:`TeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.dmtc_ext_intf_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData()
                            self.dmtc_ext_intf_data.parent = self
                            self.fpi_type = None
                            self.ipv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data()
                            self.ipv4_data.parent = self
                            self.ipv6_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data()
                            self.ipv6_data.parent = self
                            self.label_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData()
                            self.label_data.parent = self
                            self.pw_list_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData()
                            self.pw_list_data.parent = self
                            self.te_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData()
                            self.te_data.parent = self


                        class LabelData(object):
                            """
                            label data
                            
                            .. attribute:: elc
                            
                            	ELC
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: label
                            
                            	Label value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: security_id
                            
                            	Security ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.elc = None
                                self.label = None
                                self.security_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.elc is not None:
                                    return True

                                if self.label is not None:
                                    return True

                                if self.security_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.LabelData']['meta_info']


                        class TeData(object):
                            """
                            te data
                            
                            .. attribute:: local_label
                            
                            	Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: tunnel_interface
                            
                            	Tunnel interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_label = None
                                self.tunnel_interface = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_label is not None:
                                    return True

                                if self.tunnel_interface is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.TeData']['meta_info']


                        class Ipv4Data(object):
                            """
                            ipv4 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_length
                            
                            	Prefix Length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: sr_local_label
                            
                            	SR related Local label
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_length = None
                                self.sr_local_label = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.sr_local_label is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv4Data']['meta_info']


                        class Ipv6Data(object):
                            """
                            ipv6 data
                            
                            .. attribute:: prefix
                            
                            	Prefix
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: prefix_len
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: router_flags
                            
                            	Route flags
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: table_id
                            
                            	Table ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: version
                            
                            	Version
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.prefix = None
                                self.prefix_len = None
                                self.router_flags = None
                                self.table_id = None
                                self.version = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.prefix is not None:
                                    return True

                                if self.prefix_len is not None:
                                    return True

                                if self.router_flags is not None:
                                    return True

                                if self.table_id is not None:
                                    return True

                                if self.version is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.Ipv6Data']['meta_info']


                        class PwListData(object):
                            """
                            pw list data
                            
                            .. attribute:: pwhe_list_id
                            
                            	Pseudowire List Identifier
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.pwhe_list_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.pwhe_list_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.PwListData']['meta_info']


                        class DmtcExtIntfData(object):
                            """
                            dmtc ext intf data
                            
                            .. attribute:: dmtc_ext_ifh
                            
                            	DMTC External Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_ext_ifh = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-ext-intf-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_ext_ifh is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi.DmtcExtIntfData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:fpi'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.dmtc_ext_intf_data is not None and self.dmtc_ext_intf_data._has_data():
                                return True

                            if self.fpi_type is not None:
                                return True

                            if self.ipv4_data is not None and self.ipv4_data._has_data():
                                return True

                            if self.ipv6_data is not None and self.ipv6_data._has_data():
                                return True

                            if self.label_data is not None and self.label_data._has_data():
                                return True

                            if self.pw_list_data is not None and self.pw_list_data._has_data():
                                return True

                            if self.te_data is not None and self.te_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.Fpi']['meta_info']


                    class ApplicationOwner(object):
                        """
                        Application owner instance
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi.ApplicationOwner']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:associated-fpi'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_owner is not None:
                            for child_ref in self.application_owner:
                                if child_ref._has_data():
                                    return True

                        if self.fpi is not None and self.fpi._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.AssociatedFpi']['meta_info']


                class V4Rpf(object):
                    """
                    IPv4 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v4_rpf_neighbor
                    
                    	V4 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v4_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v4-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v4_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.V4Rpf']['meta_info']


                class V6Rpf(object):
                    """
                    IPv6 RPF neighbors
                    
                    .. attribute:: table_id
                    
                    	Table ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: v6_rpf_neighbor
                    
                    	V6 RPF Neighbor
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.table_id = None
                        self.v6_rpf_neighbor = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:v6-rpf'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.table_id is not None:
                            return True

                        if self.v6_rpf_neighbor is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.V6Rpf']['meta_info']


                class Mois(object):
                    """
                    Mois
                    
                    .. attribute:: application_resource
                    
                    	Application state
                    	**type**\:   :py:class:`ApplicationResource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource>`
                    
                    .. attribute:: moi_array
                    
                    	moi array
                    	**type**\: list of    :py:class:`MoiArray <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray>`
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.application_resource = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource()
                        self.application_resource.parent = self
                        self.moi_array = YList()
                        self.moi_array.parent = self
                        self.moi_array.name = 'moi_array'


                    class ApplicationResource(object):
                        """
                        Application state
                        
                        .. attribute:: application_instance
                        
                        	Application instance Name
                        	**type**\:  str
                        
                        .. attribute:: application_name
                        
                        	Application name
                        	**type**\:  str
                        
                        .. attribute:: application_role_primary
                        
                        	Primary/Backup role
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: application_type
                        
                        	Application type
                        	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                        
                        .. attribute:: resource_state
                        
                        	Application resource state
                        	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.application_instance = None
                            self.application_name = None
                            self.application_role_primary = None
                            self.application_type = None
                            self.resource_state = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-resource'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.application_instance is not None:
                                return True

                            if self.application_name is not None:
                                return True

                            if self.application_role_primary is not None:
                                return True

                            if self.application_type is not None:
                                return True

                            if self.resource_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.ApplicationResource']['meta_info']


                    class MoiArray(object):
                        """
                        moi array
                        
                        .. attribute:: moi
                        
                        	Moi
                        	**type**\:   :py:class:`Moi <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi>`
                        
                        

                        """

                        _prefix = 'mpls-lsd-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.moi = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi()
                            self.moi.parent = self


                        class Moi(object):
                            """
                            Moi
                            
                            .. attribute:: dmtc_data
                            
                            	dmtc data
                            	**type**\:   :py:class:`DmtcData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData>`
                            
                            .. attribute:: ip_sub_data
                            
                            	ip sub data
                            	**type**\:   :py:class:`IpSubData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData>`
                            
                            .. attribute:: ipv4_data
                            
                            	ipv4 data
                            	**type**\:   :py:class:`Ipv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data>`
                            
                            .. attribute:: ipv6_data
                            
                            	ipv6 data
                            	**type**\:   :py:class:`Ipv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data>`
                            
                            .. attribute:: moi_type
                            
                            	MoiType
                            	**type**\:   :py:class:`MgmtLsdMoiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdMoiEnum>`
                            
                            .. attribute:: pop_and_lookup_ipv4
                            
                            	pop and lookup ipv4
                            	**type**\:   :py:class:`PopAndLookupIpv4 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4>`
                            
                            .. attribute:: pop_and_lookup_ipv6
                            
                            	pop and lookup ipv6
                            	**type**\:   :py:class:`PopAndLookupIpv6 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6>`
                            
                            .. attribute:: pop_and_lookup_tp
                            
                            	pop and lookup tp
                            	**type**\:   :py:class:`PopAndLookupTp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp>`
                            
                            .. attribute:: pseudowire_data
                            
                            	pseudowire data
                            	**type**\:   :py:class:`PseudowireData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData>`
                            
                            .. attribute:: pseudowire_head_end_data
                            
                            	pseudowire head end data
                            	**type**\:   :py:class:`PseudowireHeadEndData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData>`
                            
                            .. attribute:: pw_list_data
                            
                            	pw list data
                            	**type**\:   :py:class:`PwListData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData>`
                            
                            .. attribute:: stackv4_data
                            
                            	stackv4 data
                            	**type**\:   :py:class:`Stackv4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data>`
                            
                            .. attribute:: stackv6_data
                            
                            	stackv6 data
                            	**type**\:   :py:class:`Stackv6Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data>`
                            
                            .. attribute:: te_head_data
                            
                            	te head data
                            	**type**\:   :py:class:`TeHeadData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData>`
                            
                            .. attribute:: tev4_data
                            
                            	tev4 data
                            	**type**\:   :py:class:`Tev4Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data>`
                            
                            

                            """

                            _prefix = 'mpls-lsd-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.dmtc_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData()
                                self.dmtc_data.parent = self
                                self.ip_sub_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData()
                                self.ip_sub_data.parent = self
                                self.ipv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data()
                                self.ipv4_data.parent = self
                                self.ipv6_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data()
                                self.ipv6_data.parent = self
                                self.moi_type = None
                                self.pop_and_lookup_ipv4 = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4()
                                self.pop_and_lookup_ipv4.parent = self
                                self.pop_and_lookup_ipv6 = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6()
                                self.pop_and_lookup_ipv6.parent = self
                                self.pop_and_lookup_tp = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp()
                                self.pop_and_lookup_tp.parent = self
                                self.pseudowire_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData()
                                self.pseudowire_data.parent = self
                                self.pseudowire_head_end_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData()
                                self.pseudowire_head_end_data.parent = self
                                self.pw_list_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData()
                                self.pw_list_data.parent = self
                                self.stackv4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data()
                                self.stackv4_data.parent = self
                                self.stackv6_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data()
                                self.stackv6_data.parent = self
                                self.te_head_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData()
                                self.te_head_data.parent = self
                                self.tev4_data = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data()
                                self.tev4_data.parent = self


                            class PopAndLookupIpv4(object):
                                """
                                pop and lookup ipv4
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv4'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv4']['meta_info']


                            class PopAndLookupTp(object):
                                """
                                pop and lookup tp
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-tp'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupTp']['meta_info']


                            class PopAndLookupIpv6(object):
                                """
                                pop and lookup ipv6
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pop-and-lookup-ipv6'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PopAndLookupIpv6']['meta_info']


                            class Ipv4Data(object):
                                """
                                ipv4 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: load_metric
                                
                                	Routing path's load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: local_label
                                
                                	TE backup path local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_interface_parent
                                
                                	Outgoing Interface's parent
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_id
                                
                                	Tunnel ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv4_next_hop = None
                                    self.load_metric = None
                                    self.local_label = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_interface_parent = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.load_metric is not None:
                                        return True

                                    if self.local_label is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_interface_parent is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv4Data']['meta_info']


                            class Ipv6Data(object):
                                """
                                ipv6 data
                                
                                .. attribute:: backup_path_id
                                
                                	Routing path backup id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: ipv6_next_hop
                                
                                	IPv6 nexthop
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: next_hop_id
                                
                                	Next hop ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: path_id
                                
                                	Routing path id
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_path_id = None
                                    self.ipv6_next_hop = None
                                    self.next_hop_id = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.path_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_path_id is not None:
                                        return True

                                    if self.ipv6_next_hop is not None:
                                        return True

                                    if self.next_hop_id is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.path_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Ipv6Data']['meta_info']


                            class Tev4Data(object):
                                """
                                tev4 data
                                
                                .. attribute:: backup_interface
                                
                                	Backup interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: backup_ipv4_next_hop
                                
                                	Backup IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: backup_local_label
                                
                                	Backup local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: data_out_parent_interface
                                
                                	Outgoing data parent interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: merge_point_label
                                
                                	Merge point label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: out_label_name
                                
                                	Outgoing label name
                                	**type**\:  str
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_class
                                
                                	Tunnel class
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_interface
                                
                                	Tunnel interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: tunnel_weight
                                
                                	Tunnel weight
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.backup_interface = None
                                    self.backup_ipv4_next_hop = None
                                    self.backup_local_label = None
                                    self.data_out_parent_interface = None
                                    self.ipv4_next_hop = None
                                    self.merge_point_label = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.out_label_name = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_class = None
                                    self.tunnel_interface = None
                                    self.tunnel_weight = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:tev4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.backup_interface is not None:
                                        return True

                                    if self.backup_ipv4_next_hop is not None:
                                        return True

                                    if self.backup_local_label is not None:
                                        return True

                                    if self.data_out_parent_interface is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.merge_point_label is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.out_label_name is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_class is not None:
                                        return True

                                    if self.tunnel_interface is not None:
                                        return True

                                    if self.tunnel_weight is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Tev4Data']['meta_info']


                            class PseudowireData(object):
                                """
                                pseudowire data
                                
                                .. attribute:: bridge_id
                                
                                	Bridge ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: cross_connect_id
                                
                                	Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pseuodo_wire_connect_id
                                
                                	PseudoWire Cross\-connect ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: split_horizon_id
                                
                                	Split horizon group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bridge_id = None
                                    self.cross_connect_id = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pseuodo_wire_connect_id = None
                                    self.split_horizon_id = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bridge_id is not None:
                                        return True

                                    if self.cross_connect_id is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pseuodo_wire_connect_id is not None:
                                        return True

                                    if self.split_horizon_id is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireData']['meta_info']


                            class IpSubData(object):
                                """
                                ip sub data
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	VRF table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.out_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ip-sub-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.out_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.IpSubData']['meta_info']


                            class PseudowireHeadEndData(object):
                                """
                                pseudowire head end data
                                
                                .. attribute:: control_word
                                
                                	Is control word present
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: imposition
                                
                                	Is PWHE IMposition
                                	**type**\:  int
                                
                                	**range:** \-2147483648..2147483647
                                
                                .. attribute:: ipv4_next_hop
                                
                                	IPv4 nexthop
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: out_interface
                                
                                	Outgoing interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: out_label
                                
                                	Outgoing Label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: pw_list_id
                                
                                	Pseudo\-wire List Identifier
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: pwhe_interface
                                
                                	Pseudo\-wire Head\-end interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: vctype
                                
                                	Virtual Circuit Type
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.control_word = None
                                    self.imposition = None
                                    self.ipv4_next_hop = None
                                    self.out_interface = None
                                    self.out_label = None
                                    self.path_flags_decode = None
                                    self.pw_list_id = None
                                    self.pwhe_interface = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.vctype = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pseudowire-head-end-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.control_word is not None:
                                        return True

                                    if self.imposition is not None:
                                        return True

                                    if self.ipv4_next_hop is not None:
                                        return True

                                    if self.out_interface is not None:
                                        return True

                                    if self.out_label is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.pw_list_id is not None:
                                        return True

                                    if self.pwhe_interface is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.vctype is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PseudowireHeadEndData']['meta_info']


                            class PwListData(object):
                                """
                                pw list data
                                
                                .. attribute:: l2_interface
                                
                                	Pseudo\-wire Layer 2 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: l3_interface
                                
                                	Pseudo\-wire Layer 3 interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: path_flags_decode
                                
                                	Path flag decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.l2_interface = None
                                    self.l3_interface = None
                                    self.path_flags_decode = None
                                    self.table_id = None
                                    self.table_name = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:pw-list-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.l2_interface is not None:
                                        return True

                                    if self.l3_interface is not None:
                                        return True

                                    if self.path_flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.PwListData']['meta_info']


                            class Stackv4Data(object):
                                """
                                stackv4 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop>`
                                
                                .. attribute:: owner_application_type
                                
                                	Owner application type
                                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop()
                                    self.nexthop.parent = self
                                    self.owner_application_type = None


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv4_next_hop
                                    
                                    	IPv4 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: load_metric
                                    
                                    	Routing path's load metric
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: local_label
                                    
                                    	TE backup path local label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing Interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_interface_parent
                                    
                                    	Outgoing Interface's parent
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing Label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    .. attribute:: tunnel_id
                                    
                                    	Tunnel ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv4_next_hop = None
                                        self.load_metric = None
                                        self.local_label = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_interface_parent = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None
                                        self.tunnel_id = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv4_next_hop is not None:
                                            return True

                                        if self.load_metric is not None:
                                            return True

                                        if self.local_label is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_interface_parent is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        if self.tunnel_id is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv4-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    if self.owner_application_type is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv4Data']['meta_info']


                            class Stackv6Data(object):
                                """
                                stackv6 data
                                
                                .. attribute:: inner_stack
                                
                                	Inner stack
                                	**type**\:   :py:class:`InnerStack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack>`
                                
                                .. attribute:: nexthop
                                
                                	Nexthop
                                	**type**\:   :py:class:`Nexthop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop>`
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.inner_stack = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack()
                                    self.inner_stack.parent = self
                                    self.nexthop = MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop()
                                    self.nexthop.parent = self


                                class Nexthop(object):
                                    """
                                    Nexthop
                                    
                                    .. attribute:: backup_path_id
                                    
                                    	Routing path backup id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: ipv6_next_hop
                                    
                                    	IPv6 nexthop
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: next_hop_id
                                    
                                    	Next hop ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_interface
                                    
                                    	Outgoing interface
                                    	**type**\:  str
                                    
                                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                    
                                    .. attribute:: out_label
                                    
                                    	Outgoing label
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: out_label_name
                                    
                                    	Outgoing label name
                                    	**type**\:  str
                                    
                                    .. attribute:: path_flags_decode
                                    
                                    	Path flag decoded string
                                    	**type**\:  str
                                    
                                    .. attribute:: path_id
                                    
                                    	Routing path id
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: table_id
                                    
                                    	Table ID
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: table_name
                                    
                                    	VRF table name
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.backup_path_id = None
                                        self.ipv6_next_hop = None
                                        self.next_hop_id = None
                                        self.out_interface = None
                                        self.out_label = None
                                        self.out_label_name = None
                                        self.path_flags_decode = None
                                        self.path_id = None
                                        self.table_id = None
                                        self.table_name = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:nexthop'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.backup_path_id is not None:
                                            return True

                                        if self.ipv6_next_hop is not None:
                                            return True

                                        if self.next_hop_id is not None:
                                            return True

                                        if self.out_interface is not None:
                                            return True

                                        if self.out_label is not None:
                                            return True

                                        if self.out_label_name is not None:
                                            return True

                                        if self.path_flags_decode is not None:
                                            return True

                                        if self.path_id is not None:
                                            return True

                                        if self.table_id is not None:
                                            return True

                                        if self.table_name is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.Nexthop']['meta_info']


                                class InnerStack(object):
                                    """
                                    Inner stack
                                    
                                    .. attribute:: label
                                    
                                    	Info related to outgoing labels
                                    	**type**\: list of    :py:class:`Label <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label>`
                                    
                                    .. attribute:: nexthop
                                    
                                    	Remote nexthop addresses
                                    	**type**\:  list of str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: num_lbls
                                    
                                    	Depth of inner label stack
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: num_nexthops
                                    
                                    	Number of remote nexthop addresses
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    

                                    """

                                    _prefix = 'mpls-lsd-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.label = YList()
                                        self.label.parent = self
                                        self.label.name = 'label'
                                        self.nexthop = YLeafList()
                                        self.nexthop.parent = self
                                        self.nexthop.name = 'nexthop'
                                        self.num_lbls = None
                                        self.num_nexthops = None


                                    class Label(object):
                                        """
                                        Info related to outgoing labels
                                        
                                        .. attribute:: outgoing_label
                                        
                                        	Remote Label
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: outgoing_label_str
                                        
                                        	Remote Label string
                                        	**type**\:  str
                                        
                                        

                                        """

                                        _prefix = 'mpls-lsd-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.outgoing_label = None
                                            self.outgoing_label_str = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:label'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.outgoing_label is not None:
                                                return True

                                            if self.outgoing_label_str is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack.Label']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:inner-stack'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.label is not None:
                                            for child_ref in self.label:
                                                if child_ref._has_data():
                                                    return True

                                        if self.nexthop is not None:
                                            for child in self.nexthop:
                                                if child is not None:
                                                    return True

                                        if self.num_lbls is not None:
                                            return True

                                        if self.num_nexthops is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data.InnerStack']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:stackv6-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.inner_stack is not None and self.inner_stack._has_data():
                                        return True

                                    if self.nexthop is not None and self.nexthop._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.Stackv6Data']['meta_info']


                            class TeHeadData(object):
                                """
                                te head data
                                
                                .. attribute:: flags_decode
                                
                                	Flags decoded string
                                	**type**\:  str
                                
                                .. attribute:: table_id
                                
                                	Table ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: table_name
                                
                                	VRF table name
                                	**type**\:  str
                                
                                .. attribute:: tunnel_fwd_class
                                
                                	Tunnel forwarding class
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: tunnel_load_metric
                                
                                	Tunnel Load metric
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label
                                
                                	Tunnel local label
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: tunnel_local_label_str
                                
                                	Tunnel local label stringified
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.flags_decode = None
                                    self.table_id = None
                                    self.table_name = None
                                    self.tunnel_fwd_class = None
                                    self.tunnel_load_metric = None
                                    self.tunnel_local_label = None
                                    self.tunnel_local_label_str = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:te-head-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.flags_decode is not None:
                                        return True

                                    if self.table_id is not None:
                                        return True

                                    if self.table_name is not None:
                                        return True

                                    if self.tunnel_fwd_class is not None:
                                        return True

                                    if self.tunnel_load_metric is not None:
                                        return True

                                    if self.tunnel_local_label is not None:
                                        return True

                                    if self.tunnel_local_label_str is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.TeHeadData']['meta_info']


                            class DmtcData(object):
                                """
                                dmtc data
                                
                                .. attribute:: dmtc_ext_ifh
                                
                                	DMTC External Interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'mpls-lsd-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.dmtc_ext_ifh = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:dmtc-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.dmtc_ext_ifh is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi.DmtcData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.dmtc_data is not None and self.dmtc_data._has_data():
                                    return True

                                if self.ip_sub_data is not None and self.ip_sub_data._has_data():
                                    return True

                                if self.ipv4_data is not None and self.ipv4_data._has_data():
                                    return True

                                if self.ipv6_data is not None and self.ipv6_data._has_data():
                                    return True

                                if self.moi_type is not None:
                                    return True

                                if self.pop_and_lookup_ipv4 is not None and self.pop_and_lookup_ipv4._has_data():
                                    return True

                                if self.pop_and_lookup_ipv6 is not None and self.pop_and_lookup_ipv6._has_data():
                                    return True

                                if self.pop_and_lookup_tp is not None and self.pop_and_lookup_tp._has_data():
                                    return True

                                if self.pseudowire_data is not None and self.pseudowire_data._has_data():
                                    return True

                                if self.pseudowire_head_end_data is not None and self.pseudowire_head_end_data._has_data():
                                    return True

                                if self.pw_list_data is not None and self.pw_list_data._has_data():
                                    return True

                                if self.stackv4_data is not None and self.stackv4_data._has_data():
                                    return True

                                if self.stackv6_data is not None and self.stackv6_data._has_data():
                                    return True

                                if self.te_head_data is not None and self.te_head_data._has_data():
                                    return True

                                if self.tev4_data is not None and self.tev4_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray.Moi']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:moi-array'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.moi is not None and self.moi._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                            return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois.MoiArray']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:mois'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.application_resource is not None and self.application_resource._has_data():
                            return True

                        if self.moi_array is not None:
                            for child_ref in self.moi_array:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel.Mois']['meta_info']

                @property
                def _common_path(self):
                    if self.label_id is None:
                        raise YPYModelError('Key property label_id is None')

                    return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-labels/Cisco-IOS-XR-mpls-lsd-oper:rewrite-label[Cisco-IOS-XR-mpls-lsd-oper:label-id = ' + str(self.label_id) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.label_id is not None:
                        return True

                    if self.associated_fpi is not None:
                        for child_ref in self.associated_fpi:
                            if child_ref._has_data():
                                return True

                    if self.bcdl_priority is not None:
                        return True

                    if self.fpi_key is not None and self.fpi_key._has_data():
                        return True

                    if self.lsd_queue is not None:
                        return True

                    if self.mois is not None:
                        for child_ref in self.mois:
                            if child_ref._has_data():
                                return True

                    if self.priority_updated is not None:
                        return True

                    if self.rewrite_id is not None and self.rewrite_id._has_data():
                        return True

                    if self.rewrite_version is not None:
                        return True

                    if self.rw_install_age is not None:
                        return True

                    if self.rw_install_time is not None:
                        return True

                    if self.rw_updated is not None:
                        return True

                    if self.v4_rpf is not None:
                        for child_ref in self.v4_rpf:
                            if child_ref._has_data():
                                return True

                    if self.v6_rpf is not None:
                        for child_ref in self.v6_rpf:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Rewrite.RewriteLabels.RewriteLabel']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite/Cisco-IOS-XR-mpls-lsd-oper:rewrite-labels'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.rewrite_label is not None:
                    for child_ref in self.rewrite_label:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Rewrite.RewriteLabels']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.rewrite_ipv4s is not None and self.rewrite_ipv4s._has_data():
                return True

            if self.rewrite_labels is not None and self.rewrite_labels._has_data():
                return True

            if self.rewrite_pws is not None and self.rewrite_pws._has_data():
                return True

            if self.rewrite_tes is not None and self.rewrite_tes._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.Rewrite']['meta_info']


    class RewriteSummary(object):
        """
        Rewrite Summary 
        
        .. attribute:: ipv4_paths
        
        	Count for IPv4 paths
        	**type**\:   :py:class:`Ipv4Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummary.Ipv4Paths>`
        
        .. attribute:: ipv6_paths
        
        	Count for IPv6 paths
        	**type**\:   :py:class:`Ipv6Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummary.Ipv6Paths>`
        
        .. attribute:: num_dmtctefpi
        
        	Number of DMTC FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_ipv4fpi
        
        	Number of IPv4 FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_ipv6fpi
        
        	Number of IPv6 FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_label_fpi
        
        	Number of label FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_pw_list_tefpi
        
        	Number of PW List FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_rewrite
        
        	Number of rewrites
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_rewrite_rpf_neighbors
        
        	Number of rewrites with RPF Neighbors
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: num_tefpi
        
        	Number of TE FPI
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_dmtc_intf
        
        	Total number of DMTC External Interfaces
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_forwad_update_message
        
        	Total number of forward update messages
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_forward_update
        
        	Total number of forward updates
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_ip_sub_paths
        
        	Total number of IP Subscriber paths
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_ipv4rpf_neighbors
        
        	Total number of IPv4 RPF Neighbors
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_ipv6rpf_neighbors
        
        	Total number of IPv6 RPF Neighbors
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_paths
        
        	Total paths
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_pw_paths
        
        	Total number of Pseudo\-wire paths
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_t_ev4_paths
        
        	Total number of Traffic Eng IPv4 paths
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: total_te_head_paths
        
        	Total number of Traffic Eng Head paths
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: vrf_name_xr
        
        	VRF Name
        	**type**\:  str
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.ipv4_paths = MplsLsd.RewriteSummary.Ipv4Paths()
            self.ipv4_paths.parent = self
            self.ipv6_paths = MplsLsd.RewriteSummary.Ipv6Paths()
            self.ipv6_paths.parent = self
            self.num_dmtctefpi = None
            self.num_ipv4fpi = None
            self.num_ipv6fpi = None
            self.num_label_fpi = None
            self.num_pw_list_tefpi = None
            self.num_rewrite = None
            self.num_rewrite_rpf_neighbors = None
            self.num_tefpi = None
            self.total_dmtc_intf = None
            self.total_forwad_update_message = None
            self.total_forward_update = None
            self.total_ip_sub_paths = None
            self.total_ipv4rpf_neighbors = None
            self.total_ipv6rpf_neighbors = None
            self.total_paths = None
            self.total_pw_paths = None
            self.total_t_ev4_paths = None
            self.total_te_head_paths = None
            self.vrf_name_xr = None


        class Ipv4Paths(object):
            """
            Count for IPv4 paths
            
            .. attribute:: total_backup_paths
            
            	Total number of non\-primary backup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_paths
            
            	Total number of IP paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_pop_lkup_paths
            
            	Total number of Pop\-and\-Lookup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_protected_paths
            
            	Total number of protected paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_remote_backup_paths
            
            	Total number of remote backup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.total_backup_paths = None
                self.total_paths = None
                self.total_pop_lkup_paths = None
                self.total_protected_paths = None
                self.total_remote_backup_paths = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary/Cisco-IOS-XR-mpls-lsd-oper:ipv4-paths'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.total_backup_paths is not None:
                    return True

                if self.total_paths is not None:
                    return True

                if self.total_pop_lkup_paths is not None:
                    return True

                if self.total_protected_paths is not None:
                    return True

                if self.total_remote_backup_paths is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.RewriteSummary.Ipv4Paths']['meta_info']


        class Ipv6Paths(object):
            """
            Count for IPv6 paths
            
            .. attribute:: total_backup_paths
            
            	Total number of non\-primary backup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_paths
            
            	Total number of IP paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_pop_lkup_paths
            
            	Total number of Pop\-and\-Lookup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_protected_paths
            
            	Total number of protected paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_remote_backup_paths
            
            	Total number of remote backup paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.total_backup_paths = None
                self.total_paths = None
                self.total_pop_lkup_paths = None
                self.total_protected_paths = None
                self.total_remote_backup_paths = None

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary/Cisco-IOS-XR-mpls-lsd-oper:ipv6-paths'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.total_backup_paths is not None:
                    return True

                if self.total_paths is not None:
                    return True

                if self.total_pop_lkup_paths is not None:
                    return True

                if self.total_protected_paths is not None:
                    return True

                if self.total_remote_backup_paths is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.RewriteSummary.Ipv6Paths']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.ipv4_paths is not None and self.ipv4_paths._has_data():
                return True

            if self.ipv6_paths is not None and self.ipv6_paths._has_data():
                return True

            if self.num_dmtctefpi is not None:
                return True

            if self.num_ipv4fpi is not None:
                return True

            if self.num_ipv6fpi is not None:
                return True

            if self.num_label_fpi is not None:
                return True

            if self.num_pw_list_tefpi is not None:
                return True

            if self.num_rewrite is not None:
                return True

            if self.num_rewrite_rpf_neighbors is not None:
                return True

            if self.num_tefpi is not None:
                return True

            if self.total_dmtc_intf is not None:
                return True

            if self.total_forwad_update_message is not None:
                return True

            if self.total_forward_update is not None:
                return True

            if self.total_ip_sub_paths is not None:
                return True

            if self.total_ipv4rpf_neighbors is not None:
                return True

            if self.total_ipv6rpf_neighbors is not None:
                return True

            if self.total_paths is not None:
                return True

            if self.total_pw_paths is not None:
                return True

            if self.total_t_ev4_paths is not None:
                return True

            if self.total_te_head_paths is not None:
                return True

            if self.vrf_name_xr is not None:
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.RewriteSummary']['meta_info']


    class Applications(object):
        """
        Table of MPLS applications using LSD
        
        .. attribute:: application
        
        	Data for MPLS application using LSD
        	**type**\: list of    :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Applications.Application>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.application = YList()
            self.application.parent = self
            self.application.name = 'application'


        class Application(object):
            """
            Data for MPLS application using LSD
            
            .. attribute:: application_name  <key>
            
            	Application Instance name in the form of '<app\_type\_name>[\:<instance>]'
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: app_disconnect_time
            
            	App disconnect ts
            	**type**\:  int
            
            	**range:** 0..18446744073709551615
            
            .. attribute:: app_flow_controlled
            
            	App flow control status
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: app_reg_time
            
            	App reg ts
            	**type**\:  int
            
            	**range:** 0..18446744073709551615
            
            .. attribute:: application_instance
            
            	client\-app instance
            	**type**\:  str
            
            .. attribute:: application_name_xr
            
            	Application name
            	**type**\:  str
            
            .. attribute:: application_role_primary
            
            	Primary/Backup role
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: application_state
            
            	Application state
            	**type**\:   :py:class:`MgmtLsdAppStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppStateEnum>`
            
            .. attribute:: application_statistics
            
            	Application Statistics
            	**type**\:   :py:class:`ApplicationStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Applications.Application.ApplicationStatistics>`
            
            .. attribute:: application_type
            
            	Application type
            	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
            
            .. attribute:: flow_ctrl_clr_time
            
            	Flow Ctrl Clr ts
            	**type**\:  int
            
            	**range:** 0..18446744073709551615
            
            .. attribute:: flow_ctrl_time
            
            	Flow Ctrl ts
            	**type**\:  int
            
            	**range:** 0..18446744073709551615
            
            .. attribute:: go_act_ts
            
            	App go active timestamp
            	**type**\:  int
            
            	**range:** 0..18446744073709551615
            
            .. attribute:: node_id
            
            	Node ID where application is/was running
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: recovery_time_elapsed_seconds
            
            	Recovery time [secs] elapsed if client is timing out
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            	**units**\: second
            
            .. attribute:: recovery_time_register_seconds
            
            	Recovery time [secs] specified at registration or set explicitly
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            	**units**\: second
            
            .. attribute:: recovery_time_remaining_seconds
            
            	Recovery time [secs] remaining if client is timing out
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            	**units**\: second
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.application_name = None
                self.app_disconnect_time = None
                self.app_flow_controlled = None
                self.app_reg_time = None
                self.application_instance = None
                self.application_name_xr = None
                self.application_role_primary = None
                self.application_state = None
                self.application_statistics = MplsLsd.Applications.Application.ApplicationStatistics()
                self.application_statistics.parent = self
                self.application_type = None
                self.flow_ctrl_clr_time = None
                self.flow_ctrl_time = None
                self.go_act_ts = None
                self.node_id = None
                self.recovery_time_elapsed_seconds = None
                self.recovery_time_register_seconds = None
                self.recovery_time_remaining_seconds = None


            class ApplicationStatistics(object):
                """
                Application Statistics
                
                .. attribute:: connect_count
                
                	Connect count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: connected
                
                	Connected statistics
                	**type**\:   :py:class:`Connected <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Applications.Application.ApplicationStatistics.Connected>`
                
                .. attribute:: interface_enable
                
                	Number of interface enabled
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_enable_pending
                
                	Number of interface enable pending
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: label_context_count
                
                	Label context count
                	**type**\:  list of int
                
                	**range:** 0..4294967295
                
                .. attribute:: label_context_pending_count
                
                	Label context pending count
                	**type**\:  list of int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.connect_count = None
                    self.connected = MplsLsd.Applications.Application.ApplicationStatistics.Connected()
                    self.connected.parent = self
                    self.interface_enable = None
                    self.interface_enable_pending = None
                    self.label_context_count = YLeafList()
                    self.label_context_count.parent = self
                    self.label_context_count.name = 'label_context_count'
                    self.label_context_pending_count = YLeafList()
                    self.label_context_pending_count.parent = self
                    self.label_context_pending_count.name = 'label_context_pending_count'


                class Connected(object):
                    """
                    Connected statistics
                    
                    .. attribute:: error_msg_count
                    
                    	Error count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: oor_label_count
                    
                    	Label OOR count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: operation_msg_count
                    
                    	Operation count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: rt_set_msg_count
                    
                    	RT set count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'mpls-lsd-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.error_msg_count = None
                        self.oor_label_count = None
                        self.operation_msg_count = None
                        self.rt_set_msg_count = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:connected'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.error_msg_count is not None:
                            return True

                        if self.oor_label_count is not None:
                            return True

                        if self.operation_msg_count is not None:
                            return True

                        if self.rt_set_msg_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                        return meta._meta_table['MplsLsd.Applications.Application.ApplicationStatistics.Connected']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-statistics'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.connect_count is not None:
                        return True

                    if self.connected is not None and self.connected._has_data():
                        return True

                    if self.interface_enable is not None:
                        return True

                    if self.interface_enable_pending is not None:
                        return True

                    if self.label_context_count is not None:
                        for child in self.label_context_count:
                            if child is not None:
                                return True

                    if self.label_context_pending_count is not None:
                        for child in self.label_context_pending_count:
                            if child is not None:
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Applications.Application.ApplicationStatistics']['meta_info']

            @property
            def _common_path(self):
                if self.application_name is None:
                    raise YPYModelError('Key property application_name is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:applications/Cisco-IOS-XR-mpls-lsd-oper:application[Cisco-IOS-XR-mpls-lsd-oper:application-name = ' + str(self.application_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.application_name is not None:
                    return True

                if self.app_disconnect_time is not None:
                    return True

                if self.app_flow_controlled is not None:
                    return True

                if self.app_reg_time is not None:
                    return True

                if self.application_instance is not None:
                    return True

                if self.application_name_xr is not None:
                    return True

                if self.application_role_primary is not None:
                    return True

                if self.application_state is not None:
                    return True

                if self.application_statistics is not None and self.application_statistics._has_data():
                    return True

                if self.application_type is not None:
                    return True

                if self.flow_ctrl_clr_time is not None:
                    return True

                if self.flow_ctrl_time is not None:
                    return True

                if self.go_act_ts is not None:
                    return True

                if self.node_id is not None:
                    return True

                if self.recovery_time_elapsed_seconds is not None:
                    return True

                if self.recovery_time_register_seconds is not None:
                    return True

                if self.recovery_time_remaining_seconds is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Applications.Application']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:applications'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.application is not None:
                for child_ref in self.application:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.Applications']['meta_info']


    class LabelSummaryVrfs(object):
        """
        Dynamic label range summary by VRF
        
        .. attribute:: label_summary_vrf
        
        	Dynamic label range summary by VRF
        	**type**\: list of    :py:class:`LabelSummaryVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelSummaryVrfs.LabelSummaryVrf>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.label_summary_vrf = YList()
            self.label_summary_vrf.parent = self
            self.label_summary_vrf.name = 'label_summary_vrf'


        class LabelSummaryVrf(object):
            """
            Dynamic label range summary by VRF
            
            .. attribute:: vrf_name  <key>
            
            	VRF name
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: owner_count
            
            	Owner counts
            	**type**\: list of    :py:class:`OwnerCount <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.LabelSummaryVrfs.LabelSummaryVrf.OwnerCount>`
            
            .. attribute:: rsi_connected
            
            	Rsi connected
            	**type**\:  int
            
            	**range:** \-2147483648..2147483647
            
            .. attribute:: total_labels
            
            	Total labels
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: vrf_name_xr
            
            	VRF Name
            	**type**\:  str
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf_name = None
                self.owner_count = YList()
                self.owner_count.parent = self
                self.owner_count.name = 'owner_count'
                self.rsi_connected = None
                self.total_labels = None
                self.vrf_name_xr = None


            class OwnerCount(object):
                """
                Owner counts
                
                .. attribute:: application_instance
                
                	client\-app identifier
                	**type**\:  str
                
                .. attribute:: application_name
                
                	Application name
                	**type**\:  str
                
                .. attribute:: application_role_primary
                
                	Primary/Backup role
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_type
                
                	Application type
                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                
                .. attribute:: number_of_labels
                
                	Number of labels
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_instance = None
                    self.application_name = None
                    self.application_role_primary = None
                    self.application_type = None
                    self.number_of_labels = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:owner-count'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_instance is not None:
                        return True

                    if self.application_name is not None:
                        return True

                    if self.application_role_primary is not None:
                        return True

                    if self.application_type is not None:
                        return True

                    if self.number_of_labels is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.LabelSummaryVrfs.LabelSummaryVrf.OwnerCount']['meta_info']

            @property
            def _common_path(self):
                if self.vrf_name is None:
                    raise YPYModelError('Key property vrf_name is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:label-summary-vrfs/Cisco-IOS-XR-mpls-lsd-oper:label-summary-vrf[Cisco-IOS-XR-mpls-lsd-oper:vrf-name = ' + str(self.vrf_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.vrf_name is not None:
                    return True

                if self.owner_count is not None:
                    for child_ref in self.owner_count:
                        if child_ref._has_data():
                            return True

                if self.rsi_connected is not None:
                    return True

                if self.total_labels is not None:
                    return True

                if self.vrf_name_xr is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.LabelSummaryVrfs.LabelSummaryVrf']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:label-summary-vrfs'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.label_summary_vrf is not None:
                for child_ref in self.label_summary_vrf:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.LabelSummaryVrfs']['meta_info']


    class LabelRange(object):
        """
        Label range
        
        .. attribute:: max_dynamic_label_value
        
        	Maximum dynamic label value
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: max_static_label_value
        
        	Maximum static label value
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: min_dynamic_label_value
        
        	Minimum dynamic label value
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        .. attribute:: min_static_label_value
        
        	Minimum static label value
        	**type**\:  int
        
        	**range:** 0..4294967295
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.max_dynamic_label_value = None
            self.max_static_label_value = None
            self.min_dynamic_label_value = None
            self.min_static_label_value = None

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:label-range'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.max_dynamic_label_value is not None:
                return True

            if self.max_static_label_value is not None:
                return True

            if self.min_dynamic_label_value is not None:
                return True

            if self.min_static_label_value is not None:
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.LabelRange']['meta_info']


    class RewriteSummaryVrfs(object):
        """
        Rewrite Summary by VRF
        
        .. attribute:: rewrite_summary_vrf
        
        	Rewrite summary by VRF VRF\-name
        	**type**\: list of    :py:class:`RewriteSummaryVrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.rewrite_summary_vrf = YList()
            self.rewrite_summary_vrf.parent = self
            self.rewrite_summary_vrf.name = 'rewrite_summary_vrf'


        class RewriteSummaryVrf(object):
            """
            Rewrite summary by VRF VRF\-name
            
            .. attribute:: vrf_name  <key>
            
            	VRF name
            	**type**\:  str
            
            	**pattern:** [\\w\\\-\\.\:,\_@#%$\\+=\\\|;]+
            
            .. attribute:: ipv4_paths
            
            	Count for IPv4 paths
            	**type**\:   :py:class:`Ipv4Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths>`
            
            .. attribute:: ipv6_paths
            
            	Count for IPv6 paths
            	**type**\:   :py:class:`Ipv6Paths <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths>`
            
            .. attribute:: num_dmtctefpi
            
            	Number of DMTC FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_ipv4fpi
            
            	Number of IPv4 FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_ipv6fpi
            
            	Number of IPv6 FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_label_fpi
            
            	Number of label FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_pw_list_tefpi
            
            	Number of PW List FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_rewrite
            
            	Number of rewrites
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_rewrite_rpf_neighbors
            
            	Number of rewrites with RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: num_tefpi
            
            	Number of TE FPI
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_dmtc_intf
            
            	Total number of DMTC External Interfaces
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_forwad_update_message
            
            	Total number of forward update messages
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_forward_update
            
            	Total number of forward updates
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ip_sub_paths
            
            	Total number of IP Subscriber paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ipv4rpf_neighbors
            
            	Total number of IPv4 RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_ipv6rpf_neighbors
            
            	Total number of IPv6 RPF Neighbors
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_paths
            
            	Total paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_pw_paths
            
            	Total number of Pseudo\-wire paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_t_ev4_paths
            
            	Total number of Traffic Eng IPv4 paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: total_te_head_paths
            
            	Total number of Traffic Eng Head paths
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: vrf_name_xr
            
            	VRF Name
            	**type**\:  str
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf_name = None
                self.ipv4_paths = MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths()
                self.ipv4_paths.parent = self
                self.ipv6_paths = MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths()
                self.ipv6_paths.parent = self
                self.num_dmtctefpi = None
                self.num_ipv4fpi = None
                self.num_ipv6fpi = None
                self.num_label_fpi = None
                self.num_pw_list_tefpi = None
                self.num_rewrite = None
                self.num_rewrite_rpf_neighbors = None
                self.num_tefpi = None
                self.total_dmtc_intf = None
                self.total_forwad_update_message = None
                self.total_forward_update = None
                self.total_ip_sub_paths = None
                self.total_ipv4rpf_neighbors = None
                self.total_ipv6rpf_neighbors = None
                self.total_paths = None
                self.total_pw_paths = None
                self.total_t_ev4_paths = None
                self.total_te_head_paths = None
                self.vrf_name_xr = None


            class Ipv4Paths(object):
                """
                Count for IPv4 paths
                
                .. attribute:: total_backup_paths
                
                	Total number of non\-primary backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_paths
                
                	Total number of IP paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_pop_lkup_paths
                
                	Total number of Pop\-and\-Lookup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_protected_paths
                
                	Total number of protected paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_remote_backup_paths
                
                	Total number of remote backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.total_backup_paths = None
                    self.total_paths = None
                    self.total_pop_lkup_paths = None
                    self.total_protected_paths = None
                    self.total_remote_backup_paths = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv4-paths'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.total_backup_paths is not None:
                        return True

                    if self.total_paths is not None:
                        return True

                    if self.total_pop_lkup_paths is not None:
                        return True

                    if self.total_protected_paths is not None:
                        return True

                    if self.total_remote_backup_paths is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv4Paths']['meta_info']


            class Ipv6Paths(object):
                """
                Count for IPv6 paths
                
                .. attribute:: total_backup_paths
                
                	Total number of non\-primary backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_paths
                
                	Total number of IP paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_pop_lkup_paths
                
                	Total number of Pop\-and\-Lookup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_protected_paths
                
                	Total number of protected paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: total_remote_backup_paths
                
                	Total number of remote backup paths
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.total_backup_paths = None
                    self.total_paths = None
                    self.total_pop_lkup_paths = None
                    self.total_protected_paths = None
                    self.total_remote_backup_paths = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:ipv6-paths'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.total_backup_paths is not None:
                        return True

                    if self.total_paths is not None:
                        return True

                    if self.total_pop_lkup_paths is not None:
                        return True

                    if self.total_protected_paths is not None:
                        return True

                    if self.total_remote_backup_paths is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf.Ipv6Paths']['meta_info']

            @property
            def _common_path(self):
                if self.vrf_name is None:
                    raise YPYModelError('Key property vrf_name is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary-vrfs/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary-vrf[Cisco-IOS-XR-mpls-lsd-oper:vrf-name = ' + str(self.vrf_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.vrf_name is not None:
                    return True

                if self.ipv4_paths is not None and self.ipv4_paths._has_data():
                    return True

                if self.ipv6_paths is not None and self.ipv6_paths._has_data():
                    return True

                if self.num_dmtctefpi is not None:
                    return True

                if self.num_ipv4fpi is not None:
                    return True

                if self.num_ipv6fpi is not None:
                    return True

                if self.num_label_fpi is not None:
                    return True

                if self.num_pw_list_tefpi is not None:
                    return True

                if self.num_rewrite is not None:
                    return True

                if self.num_rewrite_rpf_neighbors is not None:
                    return True

                if self.num_tefpi is not None:
                    return True

                if self.total_dmtc_intf is not None:
                    return True

                if self.total_forwad_update_message is not None:
                    return True

                if self.total_forward_update is not None:
                    return True

                if self.total_ip_sub_paths is not None:
                    return True

                if self.total_ipv4rpf_neighbors is not None:
                    return True

                if self.total_ipv6rpf_neighbors is not None:
                    return True

                if self.total_paths is not None:
                    return True

                if self.total_pw_paths is not None:
                    return True

                if self.total_t_ev4_paths is not None:
                    return True

                if self.total_te_head_paths is not None:
                    return True

                if self.vrf_name_xr is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.RewriteSummaryVrfs.RewriteSummaryVrf']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:rewrite-summary-vrfs'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.rewrite_summary_vrf is not None:
                for child_ref in self.rewrite_summary_vrf:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.RewriteSummaryVrfs']['meta_info']


    class Interfaces(object):
        """
        Table of MPLS interfaces
        
        .. attribute:: interface
        
        	Data for MPLS interface
        	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Interfaces.Interface>`
        
        

        """

        _prefix = 'mpls-lsd-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.interface = YList()
            self.interface.parent = self
            self.interface.name = 'interface'


        class Interface(object):
            """
            Data for MPLS interface
            
            .. attribute:: interface_name  <key>
            
            	Interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: application_owner
            
            	Application Owner
            	**type**\: list of    :py:class:`ApplicationOwner <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MplsLsd.Interfaces.Interface.ApplicationOwner>`
            
            .. attribute:: interface
            
            	Interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: interface_state
            
            	Interface state
            	**type**\:   :py:class:`MgmtLsdIntfStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdIntfStateEnum>`
            
            

            """

            _prefix = 'mpls-lsd-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.interface_name = None
                self.application_owner = YList()
                self.application_owner.parent = self
                self.application_owner.name = 'application_owner'
                self.interface = None
                self.interface_state = None


            class ApplicationOwner(object):
                """
                Application Owner
                
                .. attribute:: application_instance
                
                	Application instance Name
                	**type**\:  str
                
                .. attribute:: application_name
                
                	Application name
                	**type**\:  str
                
                .. attribute:: application_role_primary
                
                	Primary/Backup role
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                .. attribute:: application_type
                
                	Application type
                	**type**\:   :py:class:`MgmtLsdAppEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppEnum>`
                
                .. attribute:: resource_state
                
                	Application resource state
                	**type**\:   :py:class:`MgmtLsdAppRsrcStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_mpls_lsd_oper.MgmtLsdAppRsrcStateEnum>`
                
                

                """

                _prefix = 'mpls-lsd-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.application_instance = None
                    self.application_name = None
                    self.application_role_primary = None
                    self.application_type = None
                    self.resource_state = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-mpls-lsd-oper:application-owner'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.application_instance is not None:
                        return True

                    if self.application_name is not None:
                        return True

                    if self.application_role_primary is not None:
                        return True

                    if self.application_type is not None:
                        return True

                    if self.resource_state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                    return meta._meta_table['MplsLsd.Interfaces.Interface.ApplicationOwner']['meta_info']

            @property
            def _common_path(self):
                if self.interface_name is None:
                    raise YPYModelError('Key property interface_name is None')

                return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:interfaces/Cisco-IOS-XR-mpls-lsd-oper:interface[Cisco-IOS-XR-mpls-lsd-oper:interface-name = ' + str(self.interface_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.interface_name is not None:
                    return True

                if self.application_owner is not None:
                    for child_ref in self.application_owner:
                        if child_ref._has_data():
                            return True

                if self.interface is not None:
                    return True

                if self.interface_state is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
                return meta._meta_table['MplsLsd.Interfaces.Interface']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd/Cisco-IOS-XR-mpls-lsd-oper:interfaces'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.interface is not None:
                for child_ref in self.interface:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
            return meta._meta_table['MplsLsd.Interfaces']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-mpls-lsd-oper:mpls-lsd'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.applications is not None and self.applications._has_data():
            return True

        if self.clients is not None and self.clients._has_data():
            return True

        if self.frr_database is not None and self.frr_database._has_data():
            return True

        if self.interfaces is not None and self.interfaces._has_data():
            return True

        if self.label_range is not None and self.label_range._has_data():
            return True

        if self.label_summary is not None and self.label_summary._has_data():
            return True

        if self.label_summary_vrfs is not None and self.label_summary_vrfs._has_data():
            return True

        if self.labels is not None and self.labels._has_data():
            return True

        if self.rewrite is not None and self.rewrite._has_data():
            return True

        if self.rewrite_summary is not None and self.rewrite_summary._has_data():
            return True

        if self.rewrite_summary_vrfs is not None and self.rewrite_summary_vrfs._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_mpls_lsd_oper as meta
        return meta._meta_table['MplsLsd']['meta_info']


