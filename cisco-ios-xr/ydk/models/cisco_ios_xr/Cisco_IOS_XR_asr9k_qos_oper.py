""" Cisco_IOS_XR_asr9k_qos_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR asr9k\-qos package operational data.

This module contains definitions
for the following management objects\:
  platform\-qos\: QoS ASR9K platform operational data 

Copyright (c) 2013\-2016 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class ActionEnum(Enum):
    """
    ActionEnum

    Action type

    .. data:: police_transmit = 0

    	Police action transmit

    .. data:: police_set_transmit = 1

    	Police action set transmit

    .. data:: police_drop = 2

    	Police action drop

    .. data:: police_unknown = 3

    	Police action unknown

    """

    police_transmit = 0

    police_set_transmit = 1

    police_drop = 2

    police_unknown = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['ActionEnum']


class ActionOpcodeEnum(Enum):
    """
    ActionOpcodeEnum

    Action opcode

    .. data:: precedence = 0

    	Precedence

    .. data:: dscp = 1

    	DSCP

    .. data:: discard_class = 2

    	Discard class

    .. data:: qos_group = 3

    	QoS group

    .. data:: cos_inner = 4

    	COS inner

    .. data:: cos = 5

    	COS

    .. data:: exp_top = 6

    	EXP top

    .. data:: exp_imp = 7

    	EXP IMP

    .. data:: tunnel_precedence = 8

    	Tunnel precedence

    .. data:: tunnel_dscp = 9

    	Tunnel DSCP

    .. data:: itag_dei = 10

    	ITAG DEI

    .. data:: itag_cos = 11

    	ITAG COS

    .. data:: cos_imposition = 12

    	COS imposition

    .. data:: dei_imposition = 13

    	DEI imposition

    .. data:: dei = 14

    	DEI

    .. data:: no_marking = 15

    	No marking

    """

    precedence = 0

    dscp = 1

    discard_class = 2

    qos_group = 3

    cos_inner = 4

    cos = 5

    exp_top = 6

    exp_imp = 7

    tunnel_precedence = 8

    tunnel_dscp = 9

    itag_dei = 10

    itag_cos = 11

    cos_imposition = 12

    dei_imposition = 13

    dei = 14

    no_marking = 15


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['ActionOpcodeEnum']


class CacStateEnum(Enum):
    """
    CacStateEnum

    CAC/UBRL class states

    .. data:: unknown = 0

    	unknown

    .. data:: admit = 1

    	admit

    .. data:: redirect = 2

    	redirect

    .. data:: ubrl = 3

    	ubrl

    """

    unknown = 0

    admit = 1

    redirect = 2

    ubrl = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['CacStateEnum']


class PolicyParamUnitEnum(Enum):
    """
    PolicyParamUnitEnum

    Policy param unit

    .. data:: policy_param_unit_invalid = 0

    	policy param unit invalid

    .. data:: policy_param_unit_bytes = 1

    	policy param unit bytes

    .. data:: policy_param_unit_kbytes = 2

    	policy param unit kbytes

    .. data:: policy_param_unit_mbytes = 3

    	policy param unit mbytes

    .. data:: policy_param_unit_gbytes = 4

    	policy param unit gbytes

    .. data:: policy_param_unit_bitsps = 5

    	policy param unit bitsps

    .. data:: policy_param_unit_kbitsps = 6

    	policy param unit kbitsps

    .. data:: policy_param_unit_mbitsps = 7

    	policy param unit mbitsps

    .. data:: policy_param_unit_gbitsps = 8

    	policy param unit gbitsps

    .. data:: policy_param_unit_cells_ps = 9

    	policy param unit cells ps

    .. data:: policy_param_unit_packets_ps = 10

    	policy param unit packets ps

    .. data:: policy_param_unit_us = 11

    	policy param unit us

    .. data:: policy_param_unit_ms = 12

    	policy param unit ms

    .. data:: policy_param_unit_seconds = 13

    	policy param unit seconds

    .. data:: policy_param_unit_packets = 14

    	policy param unit packets

    .. data:: policy_param_unit_cells = 15

    	policy param unit cells

    .. data:: policy_param_unit_percent = 16

    	policy param unit percent

    .. data:: policy_param_unit_per_thousand = 17

    	policy param unit per thousand

    .. data:: policy_param_unit_per_million = 18

    	policy param unit per million

    .. data:: policy_param_unit_hz = 19

    	policy param unit hz

    .. data:: policy_param_unit_khz = 20

    	policy param unit khz

    .. data:: policy_param_unit_mhz = 21

    	policy param unit mhz

    .. data:: policy_param_unit_ratio = 22

    	policy param unit ratio

    .. data:: policy_param_unit_max = 23

    	policy param unit max

    """

    policy_param_unit_invalid = 0

    policy_param_unit_bytes = 1

    policy_param_unit_kbytes = 2

    policy_param_unit_mbytes = 3

    policy_param_unit_gbytes = 4

    policy_param_unit_bitsps = 5

    policy_param_unit_kbitsps = 6

    policy_param_unit_mbitsps = 7

    policy_param_unit_gbitsps = 8

    policy_param_unit_cells_ps = 9

    policy_param_unit_packets_ps = 10

    policy_param_unit_us = 11

    policy_param_unit_ms = 12

    policy_param_unit_seconds = 13

    policy_param_unit_packets = 14

    policy_param_unit_cells = 15

    policy_param_unit_percent = 16

    policy_param_unit_per_thousand = 17

    policy_param_unit_per_million = 18

    policy_param_unit_hz = 19

    policy_param_unit_khz = 20

    policy_param_unit_mhz = 21

    policy_param_unit_ratio = 22

    policy_param_unit_max = 23


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['PolicyParamUnitEnum']


class PolicyStateEnum(Enum):
    """
    PolicyStateEnum

    Different Interface states

    .. data:: active = 0

    	active

    .. data:: suspended = 1

    	suspended

    """

    active = 0

    suspended = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['PolicyStateEnum']


class QosUnitEnum(Enum):
    """
    QosUnitEnum

    QoS parameter unit

    .. data:: invalid = 0

    	Invalid type

    .. data:: bytes = 1

    	Bytes

    .. data:: kilobytes = 2

    	Kilobytes

    .. data:: megabytes = 3

    	Megabytes

    .. data:: gigabytes = 4

    	Gigabytes

    .. data:: bps = 5

    	Bits per second

    .. data:: kbps = 6

    	Kilo bits per second

    .. data:: mbps = 7

    	Mega bits per second

    .. data:: gbps = 8

    	Giga bits per second

    .. data:: cells_per_second = 9

    	Cells per second

    .. data:: packets_per_second = 10

    	Packets per second

    .. data:: microsecond = 11

    	Microsecond

    .. data:: millisecond = 12

    	Millisecond

    .. data:: packets = 13

    	Number of packets

    .. data:: cells = 14

    	Number of cells

    .. data:: percentage = 15

    	Percentage

    .. data:: ratio = 16

    	Ratio

    """

    invalid = 0

    bytes = 1

    kilobytes = 2

    megabytes = 3

    gigabytes = 4

    bps = 5

    kbps = 6

    mbps = 7

    gbps = 8

    cells_per_second = 9

    packets_per_second = 10

    microsecond = 11

    millisecond = 12

    packets = 13

    cells = 14

    percentage = 15

    ratio = 16


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['QosUnitEnum']


class QueueEnum(Enum):
    """
    QueueEnum

    Queue type

    .. data:: port_default = 0

    	Port default queue

    .. data:: class_default = 1

    	The default queue in this policy

    .. data:: priority1_queue = 2

    	Create the priority 1 queue in the level which

    	will be shared by other p1 classes

    .. data:: priority2_queue = 3

    	Create the priority 2 queue in the level, which

    	will be shared by other p2 classes

    .. data:: priority3_queue = 4

    	Create the priority 3 queue in the level, which

    	will be shared by other p3 classes

    .. data:: priority4_queue = 5

    	Create the priority 4 queue in the level, which

    	will be shared by other p4 classes

    .. data:: priority5_queue = 6

    	Create the priority 5 queue in the level, which

    	will be shared by other p5 classes

    .. data:: priority6_queue = 7

    	Create the priority 6 queue in the level, which

    	will be shared by other p6 classes

    .. data:: priority7_queue = 8

    	Create the priority 7 queue in the level, which

    	will be shared by other p7 classes

    .. data:: first_p1_class_name = 9

    	Current level's priority 1 queue

    .. data:: first_p2_class_name = 10

    	Current level's priority 2 queue

    .. data:: first_p3_class_name = 11

    	Current level's priority 3 queue

    .. data:: first_p4_class_name = 12

    	Current level's priority 4 queue

    .. data:: first_p5_class_name = 13

    	Current level's priority 5 queue

    .. data:: first_p6_class_name = 14

    	Current level's priority 6 queue

    .. data:: first_p7_class_name = 15

    	Current level's priority 7 queue

    .. data:: port_priority1 = 16

    	Port priority 1 queue

    .. data:: port_priority2 = 17

    	Port priority 2 queue

    .. data:: port_priority3 = 18

    	Port priority 3 queue

    .. data:: port_priority4 = 19

    	Port priority 4 queue

    .. data:: port_priority5 = 20

    	Port priority 5 queue

    .. data:: port_priority6 = 21

    	Port priority 6 queue

    .. data:: port_priority7 = 22

    	Port priority 7 queue

    .. data:: new = 23

    	Create a new queue for this class

    .. data:: parent_class = 24

    	Under parent queue

    .. data:: priority1 = 25

    	Priority 1

    .. data:: priority2 = 26

    	Priority 2

    .. data:: priority3 = 27

    	Priority 3

    .. data:: priority4 = 28

    	Priority 4

    .. data:: priority5 = 29

    	Priority 5

    .. data:: priority6 = 30

    	Priority 6

    .. data:: priority7 = 31

    	Priority 7

    .. data:: priority_ignored_normal = 32

    	Priority ignored level

    .. data:: normal_priority = 33

    	Normal priority

    .. data:: class_unknown = 34

    	Class unknown

    .. data:: unknown_priority = 35

    	Unknown priority

    """

    port_default = 0

    class_default = 1

    priority1_queue = 2

    priority2_queue = 3

    priority3_queue = 4

    priority4_queue = 5

    priority5_queue = 6

    priority6_queue = 7

    priority7_queue = 8

    first_p1_class_name = 9

    first_p2_class_name = 10

    first_p3_class_name = 11

    first_p4_class_name = 12

    first_p5_class_name = 13

    first_p6_class_name = 14

    first_p7_class_name = 15

    port_priority1 = 16

    port_priority2 = 17

    port_priority3 = 18

    port_priority4 = 19

    port_priority5 = 20

    port_priority6 = 21

    port_priority7 = 22

    new = 23

    parent_class = 24

    priority1 = 25

    priority2 = 26

    priority3 = 27

    priority4 = 28

    priority5 = 29

    priority6 = 30

    priority7 = 31

    priority_ignored_normal = 32

    normal_priority = 33

    class_unknown = 34

    unknown_priority = 35


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['QueueEnum']


class ShapeProfiletypeV2Enum(Enum):
    """
    ShapeProfiletypeV2Enum

    SHAPE profile type

    .. data:: invalid = 0

    	Shape Profile Type Invalid

    .. data:: always = 1

    	Shape Profile Type Always

    .. data:: never = 2

    	Shape Profile Type Never

    .. data:: explicit = 3

    	Shape Profile Type Explicit

    .. data:: scale = 4

    	Shape Profile Type Scale

    .. data:: grid = 5

    	Shape Profile Type Grid

    """

    invalid = 0

    always = 1

    never = 2

    explicit = 3

    scale = 4

    grid = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['ShapeProfiletypeV2Enum']


class TbAlgorithmEnum(Enum):
    """
    TbAlgorithmEnum

    Tokenbucket type

    .. data:: inactive = 0

    	Inactive, configured but disabled

    .. data:: single = 1

    	Single token bucket

    .. data:: single_rate_tcm = 2

    	Single rate three color marker

    .. data:: two_rate_tcm = 3

    	Two rate three color marker

    .. data:: mef_tcm = 4

    	Allows coupling between CIR and PIR tb's

    .. data:: dummy = 5

    	Internal dummy token bucket for coupled-policer

    	child

    """

    inactive = 0

    single = 1

    single_rate_tcm = 2

    two_rate_tcm = 3

    mef_tcm = 4

    dummy = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['TbAlgorithmEnum']


class Wred1Enum(Enum):
    """
    Wred1Enum

    Wred1

    .. data:: wred_cos_cmd = 0

    	wred cos cmd

    .. data:: wred_dscp_cmd = 1

    	wred dscp cmd

    .. data:: wred_precedence_cmd = 2

    	wred precedence cmd

    .. data:: wred_discard_class_cmd = 3

    	wred discard class cmd

    .. data:: wred_mpls_exp_cmd = 4

    	wred mpls exp cmd

    .. data:: red_with_user_min_max = 5

    	red with user min max

    .. data:: red_with_default_min_max = 6

    	red with default min max

    .. data:: wred_dei_cmd = 7

    	wred dei cmd

    .. data:: wred_ecn_cmd = 8

    	wred ecn cmd

    .. data:: wred_invalid_cmd = 9

    	wred invalid cmd

    """

    wred_cos_cmd = 0

    wred_dscp_cmd = 1

    wred_precedence_cmd = 2

    wred_discard_class_cmd = 3

    wred_mpls_exp_cmd = 4

    red_with_user_min_max = 5

    red_with_default_min_max = 6

    wred_dei_cmd = 7

    wred_ecn_cmd = 8

    wred_invalid_cmd = 9


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['Wred1Enum']


class WredEnum(Enum):
    """
    WredEnum

    WRED type

    .. data:: wred_cos = 0

    	WRED based on COS

    .. data:: wred_dscp = 1

    	WRED based on DSCP

    .. data:: wred_precedence = 2

    	WRED based on Precedence

    .. data:: wred_discard_class = 3

    	WRED based on discard class

    .. data:: wred_mpls_exp = 4

    	WRED based on MPLS EXP

    .. data:: red_with_user_min_max = 5

    	RED with user defined min and max

    .. data:: red_with_default_min_max = 6

    	RED with default min and max

    .. data:: wred_dei = 7

    	WRED DEI

    """

    wred_cos = 0

    wred_dscp = 1

    wred_precedence = 2

    wred_discard_class = 3

    wred_mpls_exp = 4

    red_with_user_min_max = 5

    red_with_default_min_max = 6

    wred_dei = 7


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['WredEnum']



class PlatformQos(object):
    """
    QoS ASR9K platform operational data 
    
    .. attribute:: nodes
    
    	List of nodes with platform specific QoS configuration
    	**type**\:   :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes>`
    
    

    """

    _prefix = 'asr9k-qos-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = PlatformQos.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        List of nodes with platform specific QoS
        configuration
        
        .. attribute:: node
        
        	Node with platform specific QoS configuration
        	**type**\: list of    :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node>`
        
        

        """

        _prefix = 'asr9k-qos-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Node with platform specific QoS configuration
            
            .. attribute:: node_name  <key>
            
            	Node name
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: bundle_interfaces
            
            	QoS list of bundle interfaces
            	**type**\:   :py:class:`BundleInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces>`
            
            .. attribute:: capability
            
            	QoS system capability
            	**type**\:   :py:class:`Capability <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Capability>`
            
            .. attribute:: interfaces
            
            	QoS list of interfaces
            	**type**\:   :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces>`
            
            

            """

            _prefix = 'asr9k-qos-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.bundle_interfaces = PlatformQos.Nodes.Node.BundleInterfaces()
                self.bundle_interfaces.parent = self
                self.capability = PlatformQos.Nodes.Node.Capability()
                self.capability.parent = self
                self.interfaces = PlatformQos.Nodes.Node.Interfaces()
                self.interfaces.parent = self


            class Capability(object):
                """
                QoS system capability
                
                .. attribute:: max_bundle_members
                
                	Maximum bundle members
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_child_policy
                
                	Maximum classes per child policy
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_grand_parent_policy
                
                	Maximum classes per parent policy
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_policy
                
                	Maximum classes per policy
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classmap_name_length
                
                	Maximum classmap name length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_instance_name_length
                
                	Maximum instance name length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_marking_actions_per_class
                
                	Maximum marking action  per class
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_matches_per_class
                
                	Maximum matches per class
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_police_actions_per_class
                
                	Maximum police actions per class
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_policy_hierarchy
                
                	Maximum policy hierarchy
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_policy_maps
                
                	Maximum policy maps per system
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_policy_name_length
                
                	Maximum policy name length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.max_bundle_members = None
                    self.max_classes_per_child_policy = None
                    self.max_classes_per_grand_parent_policy = None
                    self.max_classes_per_policy = None
                    self.max_classmap_name_length = None
                    self.max_instance_name_length = None
                    self.max_marking_actions_per_class = None
                    self.max_matches_per_class = None
                    self.max_police_actions_per_class = None
                    self.max_policy_hierarchy = None
                    self.max_policy_maps = None
                    self.max_policy_name_length = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:capability'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.max_bundle_members is not None:
                        return True

                    if self.max_classes_per_child_policy is not None:
                        return True

                    if self.max_classes_per_grand_parent_policy is not None:
                        return True

                    if self.max_classes_per_policy is not None:
                        return True

                    if self.max_classmap_name_length is not None:
                        return True

                    if self.max_instance_name_length is not None:
                        return True

                    if self.max_marking_actions_per_class is not None:
                        return True

                    if self.max_matches_per_class is not None:
                        return True

                    if self.max_police_actions_per_class is not None:
                        return True

                    if self.max_policy_hierarchy is not None:
                        return True

                    if self.max_policy_maps is not None:
                        return True

                    if self.max_policy_name_length is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                    return meta._meta_table['PlatformQos.Nodes.Node.Capability']['meta_info']


            class Interfaces(object):
                """
                QoS list of interfaces
                
                .. attribute:: interface
                
                	QoS interface name
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface>`
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    QoS interface name
                    
                    .. attribute:: interface_name  <key>
                    
                    	The name of the interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: input
                    
                    	QoS policy direction ingress
                    	**type**\:   :py:class:`Input <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input>`
                    
                    .. attribute:: output
                    
                    	QoS policy direction egress
                    	**type**\:   :py:class:`Output <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output>`
                    
                    

                    """

                    _prefix = 'asr9k-qos-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.input = PlatformQos.Nodes.Node.Interfaces.Interface.Input()
                        self.input.parent = self
                        self.output = PlatformQos.Nodes.Node.Interfaces.Interface.Output()
                        self.output.parent = self


                    class Input(object):
                        """
                        QoS policy direction ingress
                        
                        .. attribute:: details
                        
                        	QoS policy direction egress
                        	**type**\:   :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.details = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details()
                            self.details.parent = self


                        class Details(object):
                            """
                            QoS policy direction egress
                            
                            .. attribute:: header
                            
                            	QoS policy header
                            	**type**\:   :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header>`
                            
                            .. attribute:: policy
                            
                            	Trident QoS policy details
                            	**type**\:   :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy>`
                            
                            .. attribute:: policy_typhoon
                            
                            	Typhoon QoS policy details
                            	**type**\:   :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header()
                                self.header.parent = self
                                self.policy = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy()
                                self.policy.parent = self
                                self.policy_typhoon = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon()
                                self.policy_typhoon.parent = self


                            class Header(object):
                                """
                                QoS policy header
                                
                                .. attribute:: classes
                                
                                	Number of classes
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_parameters
                                
                                	Interface config and programmed parameters
                                	**type**\:   :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters>`
                                
                                .. attribute:: policy_name
                                
                                	Policy name
                                	**type**\:  str
                                
                                	**length:** 0..65
                                
                                .. attribute:: programmed_bandwidth
                                
                                	Bandwidth that was programmed
                                	**type**\:   :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.classes = None
                                    self.interface_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters()
                                    self.interface_parameters.parent = self
                                    self.policy_name = None
                                    self.programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth()
                                    self.programmed_bandwidth.parent = self


                                class InterfaceParameters(object):
                                    """
                                    Interface config and programmed parameters
                                    
                                    .. attribute:: ancp_config_bandwidth
                                    
                                    	Bandwidth obtain from IM
                                    	**type**\:   :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                    
                                    .. attribute:: ancp_programmed_bandwidth
                                    
                                    	ANCP bandwidth that was programmed
                                    	**type**\:   :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                    
                                    .. attribute:: port_config_bandwidth
                                    
                                    	Bandwidth due to port speed change
                                    	**type**\:   :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                    
                                    .. attribute:: port_shaper_rate
                                    
                                    	Bandwidth that was programmed
                                    	**type**\:   :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ancp_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                        self.ancp_config_bandwidth.parent = self
                                        self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                        self.ancp_programmed_bandwidth.parent = self
                                        self.port_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                        self.port_config_bandwidth.parent = self
                                        self.port_shaper_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate()
                                        self.port_shaper_rate.parent = self


                                    class PortConfigBandwidth(object):
                                        """
                                        Bandwidth due to port speed change
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-config-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth']['meta_info']


                                    class AncpConfigBandwidth(object):
                                        """
                                        Bandwidth obtain from IM
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-config-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth']['meta_info']


                                    class AncpProgrammedBandwidth(object):
                                        """
                                        ANCP bandwidth that was programmed
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-programmed-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth']['meta_info']


                                    class PortShaperRate(object):
                                        """
                                        Bandwidth that was programmed
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-shaper-rate'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interface-parameters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ancp_config_bandwidth is not None and self.ancp_config_bandwidth._has_data():
                                            return True

                                        if self.ancp_programmed_bandwidth is not None and self.ancp_programmed_bandwidth._has_data():
                                            return True

                                        if self.port_config_bandwidth is not None and self.port_config_bandwidth._has_data():
                                            return True

                                        if self.port_shaper_rate is not None and self.port_shaper_rate._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters']['meta_info']


                                class ProgrammedBandwidth(object):
                                    """
                                    Bandwidth that was programmed
                                    
                                    .. attribute:: unit
                                    
                                    	Config unit
                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                    
                                    .. attribute:: value
                                    
                                    	Config value
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.unit = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:programmed-bandwidth'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.unit is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.classes is not None:
                                        return True

                                    if self.interface_parameters is not None and self.interface_parameters._has_data():
                                        return True

                                    if self.policy_name is not None:
                                        return True

                                    if self.programmed_bandwidth is not None and self.programmed_bandwidth._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header']['meta_info']


                            class Policy(object):
                                """
                                Trident QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v1
                                
                                	qos show ea st v1
                                	**type**\: list of    :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.qos_show_ea_st_v1 = YList()
                                    self.qos_show_ea_st_v1.parent = self
                                    self.qos_show_ea_st_v1.name = 'qos_show_ea_st_v1'


                                class QosShowEaStV1(object):
                                    """
                                    qos show ea st v1
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark>`
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police>`
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.class_level = None
                                        self.class_name = None
                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark()
                                        self.mark.parent = self
                                        self.parent_class_name = None
                                        self.parent_policy_name = None
                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police()
                                        self.police.parent = self
                                        self.policy_name = None
                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue()
                                        self.queue.parent = self
                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape()
                                        self.shape.parent = self
                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq()
                                        self.wfq.parent = self
                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred()
                                        self.wred.parent = self


                                    class Queue(object):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.class_name = None
                                            self.queue_id = None
                                            self.queue_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.class_name is not None:
                                                return True

                                            if self.queue_id is not None:
                                                return True

                                            if self.queue_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue']['meta_info']


                                    class QueueLimitParameters(object):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self.profile_id = None
                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self.scaling_profile_id = None


                                        class QueueLimit(object):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit']['meta_info']


                                        class ConfigQueueLimit(object):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            if self.queue_limit is not None and self.queue_limit._has_data():
                                                return True

                                            if self.scaling_profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters']['meta_info']


                                    class Shape(object):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS in bytes
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR in kbps
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                        
                                        .. attribute:: config_bandwidth
                                        
                                        	Config bandwidth
                                        	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS in bytes
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR in kbps
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Shape profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir()
                                            self.cir.parent = self
                                            self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                            self.config_bandwidth.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir()
                                            self.pir.parent = self
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR in kbps
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir']['meta_info']


                                        class ConfigBandwidth(object):
                                            """
                                            Config bandwidth
                                            
                                            .. attribute:: minimum_rate
                                            
                                            	Minimum bandwidth rate
                                            	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                self.minimum_rate.parent = self


                                            class MinimumRate(object):
                                                """
                                                Minimum bandwidth rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS in bytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR in kbps
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS in bytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape']['meta_info']


                                    class Police(object):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir()
                                            self.cir.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir()
                                            self.pir.parent = self
                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self.policer_type = None
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs']['meta_info']


                                        class PoliceConfigParameters(object):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self


                                            class AverageRate(object):
                                                """
                                                Average rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                            class PeakRate(object):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                            class ConformBurst(object):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                            class ExceedBurst(object):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.average_rate is not None and self.average_rate._has_data():
                                                    return True

                                                if self.conform_burst is not None and self.conform_burst._has_data():
                                                    return True

                                                if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                    return True

                                                if self.peak_rate is not None and self.peak_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                return True

                                            if self.policer_type is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police']['meta_info']


                                    class Wfq(object):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self.chunk_id = None
                                            self.committed_weight = None
                                            self.excess_ratio = None
                                            self.excess_weight = None
                                            self.level = None
                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self.profile_id = None


                                        class ParentBandwidth(object):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth']['meta_info']


                                        class Bandwidth(object):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bandwidth is not None and self.bandwidth._has_data():
                                                return True

                                            if self.chunk_id is not None:
                                                return True

                                            if self.committed_weight is not None:
                                                return True

                                            if self.excess_ratio is not None:
                                                return True

                                            if self.excess_weight is not None:
                                                return True

                                            if self.level is not None:
                                                return True

                                            if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq']['meta_info']


                                    class Wred(object):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.curve = YList()
                                            self.curve.parent = self
                                            self.curve.name = 'curve'
                                            self.curve_xr = None
                                            self.profile_id = None
                                            self.scaling_profile_id = None
                                            self.table_id = None
                                            self.type = None


                                        class Curve(object):
                                            """
                                            Curve details
                                            
                                            .. attribute:: match
                                            
                                            	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.match = None
                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self


                                            class MinThreshold(object):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold']['meta_info']


                                            class MinThresholdUserConfig(object):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                            class MaxThreshold(object):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold']['meta_info']


                                            class MaxThresholdUserConfig(object):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.match is not None:
                                                    return True

                                                if self.max_threshold is not None and self.max_threshold._has_data():
                                                    return True

                                                if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                    return True

                                                if self.min_threshold is not None and self.min_threshold._has_data():
                                                    return True

                                                if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.curve is not None:
                                                for child_ref in self.curve:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.curve_xr is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            if self.scaling_profile_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred']['meta_info']


                                    class Mark(object):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                            self.police_violate.parent = self


                                        class ChildMark(object):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark']['meta_info']


                                        class PoliceConform(object):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform']['meta_info']


                                        class PoliceExceed(object):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed']['meta_info']


                                        class PoliceViolate(object):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate']['meta_info']


                                        class ParentMark(object):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark']['meta_info']


                                        class ParentPoliceConform(object):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform']['meta_info']


                                        class ParentPoliceExceed(object):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed']['meta_info']


                                        class ParentPoliceViolate(object):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.child_mark is not None and self.child_mark._has_data():
                                                return True

                                            if self.parent_mark is not None and self.parent_mark._has_data():
                                                return True

                                            if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                return True

                                            if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                return True

                                            if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                return True

                                            if self.police_conform is not None and self.police_conform._has_data():
                                                return True

                                            if self.police_exceed is not None and self.police_exceed._has_data():
                                                return True

                                            if self.police_violate is not None and self.police_violate._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v1'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.class_level is not None:
                                            return True

                                        if self.class_name is not None:
                                            return True

                                        if self.mark is not None and self.mark._has_data():
                                            return True

                                        if self.parent_class_name is not None:
                                            return True

                                        if self.parent_policy_name is not None:
                                            return True

                                        if self.police is not None and self.police._has_data():
                                            return True

                                        if self.policy_name is not None:
                                            return True

                                        if self.queue is not None and self.queue._has_data():
                                            return True

                                        if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                            return True

                                        if self.shape is not None and self.shape._has_data():
                                            return True

                                        if self.wfq is not None and self.wfq._has_data():
                                            return True

                                        if self.wred is not None and self.wred._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.qos_show_ea_st_v1 is not None:
                                        for child_ref in self.qos_show_ea_st_v1:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy']['meta_info']


                            class PolicyTyphoon(object):
                                """
                                Typhoon QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v2
                                
                                	qos show ea st v2
                                	**type**\: list of    :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.qos_show_ea_st_v2 = YList()
                                    self.qos_show_ea_st_v2.parent = self
                                    self.qos_show_ea_st_v2.name = 'qos_show_ea_st_v2'


                                class QosShowEaStV2(object):
                                    """
                                    qos show ea st v2
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.class_level = None
                                        self.class_name = None
                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                        self.mark.parent = self
                                        self.parent_class_name = None
                                        self.parent_policy_name = None
                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                        self.police.parent = self
                                        self.policy_name = None
                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                        self.queue.parent = self
                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                        self.shape.parent = self
                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                        self.wfq.parent = self
                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                        self.wred.parent = self


                                    class Queue(object):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.class_name = None
                                            self.queue_id = None
                                            self.queue_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.class_name is not None:
                                                return True

                                            if self.queue_id is not None:
                                                return True

                                            if self.queue_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue']['meta_info']


                                    class QueueLimitParameters(object):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: absolute_index
                                        
                                        	Absolute Index
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: curve_id
                                        
                                        	Curve ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: template_id
                                        
                                        	Template ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.absolute_index = None
                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self.curve_id = None
                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self.template_id = None


                                        class QueueLimit(object):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit']['meta_info']


                                        class ConfigQueueLimit(object):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.absolute_index is not None:
                                                return True

                                            if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                return True

                                            if self.curve_id is not None:
                                                return True

                                            if self.queue_limit is not None and self.queue_limit._has_data():
                                                return True

                                            if self.template_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters']['meta_info']


                                    class Shape(object):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir_shape
                                        
                                        	CIR shaper params
                                        	**type**\:   :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                        
                                        .. attribute:: cir_shape_type
                                        
                                        	CIR Shaper type
                                        	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                        
                                        .. attribute:: pir_shape
                                        
                                        	PIR shaper params
                                        	**type**\:   :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                        
                                        .. attribute:: pir_shape_type
                                        
                                        	PIR Shaper type
                                        	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                            self.cir_shape.parent = self
                                            self.cir_shape_type = None
                                            self.pir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                            self.pir_shape.parent = self
                                            self.pir_shape_type = None


                                        class CirShape(object):
                                            """
                                            CIR shaper params
                                            
                                            .. attribute:: cbs
                                            
                                            	CBS in bytes
                                            	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: cir
                                            
                                            	CIR in kbps
                                            	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                            
                                            .. attribute:: config_bandwidth
                                            
                                            	Config bandwidth
                                            	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                self.cbs.parent = self
                                                self.chunk_id = None
                                                self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                self.cir.parent = self
                                                self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                self.config_bandwidth.parent = self
                                                self.profile_id = None
                                                self.scale_factor = None


                                            class Cir(object):
                                                """
                                                CIR in kbps
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir']['meta_info']


                                            class ConfigBandwidth(object):
                                                """
                                                Config bandwidth
                                                
                                                .. attribute:: minimum_rate
                                                
                                                	Minimum bandwidth rate
                                                	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                    self.minimum_rate.parent = self


                                                class MinimumRate(object):
                                                    """
                                                    Minimum bandwidth rate
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth']['meta_info']


                                            class Cbs(object):
                                                """
                                                CBS in bytes
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir-shape'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.cbs is not None and self.cbs._has_data():
                                                    return True

                                                if self.chunk_id is not None:
                                                    return True

                                                if self.cir is not None and self.cir._has_data():
                                                    return True

                                                if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                    return True

                                                if self.profile_id is not None:
                                                    return True

                                                if self.scale_factor is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape']['meta_info']


                                        class PirShape(object):
                                            """
                                            PIR shaper params
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: pbs
                                            
                                            	PBS in bytes
                                            	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                            
                                            .. attribute:: pir
                                            
                                            	PIR in kbps
                                            	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.chunk_id = None
                                                self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                self.pbs.parent = self
                                                self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                self.pir.parent = self
                                                self.profile_id = None
                                                self.scale_factor = None


                                            class Pir(object):
                                                """
                                                PIR in kbps
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir']['meta_info']


                                            class Pbs(object):
                                                """
                                                PBS in bytes
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir-shape'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.chunk_id is not None:
                                                    return True

                                                if self.pbs is not None and self.pbs._has_data():
                                                    return True

                                                if self.pir is not None and self.pir._has_data():
                                                    return True

                                                if self.profile_id is not None:
                                                    return True

                                                if self.scale_factor is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cir_shape is not None and self.cir_shape._has_data():
                                                return True

                                            if self.cir_shape_type is not None:
                                                return True

                                            if self.pir_shape is not None and self.pir_shape._has_data():
                                                return True

                                            if self.pir_shape_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape']['meta_info']


                                    class Police(object):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                            self.cir.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                            self.pir.parent = self
                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self.policer_type = None
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs']['meta_info']


                                        class PoliceConfigParameters(object):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self


                                            class AverageRate(object):
                                                """
                                                Average rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                            class PeakRate(object):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                            class ConformBurst(object):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                            class ExceedBurst(object):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.average_rate is not None and self.average_rate._has_data():
                                                    return True

                                                if self.conform_burst is not None and self.conform_burst._has_data():
                                                    return True

                                                if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                    return True

                                                if self.peak_rate is not None and self.peak_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                return True

                                            if self.policer_type is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police']['meta_info']


                                    class Wfq(object):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self.chunk_id = None
                                            self.committed_weight = None
                                            self.excess_ratio = None
                                            self.excess_weight = None
                                            self.level = None
                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self.profile_id = None


                                        class ParentBandwidth(object):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth']['meta_info']


                                        class Bandwidth(object):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bandwidth is not None and self.bandwidth._has_data():
                                                return True

                                            if self.chunk_id is not None:
                                                return True

                                            if self.committed_weight is not None:
                                                return True

                                            if self.excess_ratio is not None:
                                                return True

                                            if self.excess_weight is not None:
                                                return True

                                            if self.level is not None:
                                                return True

                                            if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq']['meta_info']


                                    class Wred(object):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.curve = YList()
                                            self.curve.parent = self
                                            self.curve.name = 'curve'
                                            self.curve_xr = None
                                            self.type = None


                                        class Curve(object):
                                            """
                                            Curve details
                                            
                                            .. attribute:: absolute_index
                                            
                                            	Absolute Index
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: curve_id
                                            
                                            	Curve ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: exp_match
                                            
                                            	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: match
                                            
                                            	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: template_id
                                            
                                            	Template ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.absolute_index = None
                                                self.curve_id = None
                                                self.exp_match = None
                                                self.match = None
                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self.template_id = None


                                            class MinThreshold(object):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold']['meta_info']


                                            class MinThresholdUserConfig(object):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                            class MaxThreshold(object):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold']['meta_info']


                                            class MaxThresholdUserConfig(object):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.absolute_index is not None:
                                                    return True

                                                if self.curve_id is not None:
                                                    return True

                                                if self.exp_match is not None:
                                                    return True

                                                if self.match is not None:
                                                    return True

                                                if self.max_threshold is not None and self.max_threshold._has_data():
                                                    return True

                                                if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                    return True

                                                if self.min_threshold is not None and self.min_threshold._has_data():
                                                    return True

                                                if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                    return True

                                                if self.template_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.curve is not None:
                                                for child_ref in self.curve:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.curve_xr is not None:
                                                return True

                                            if self.type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred']['meta_info']


                                    class Mark(object):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                            self.police_violate.parent = self


                                        class ChildMark(object):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark']['meta_info']


                                        class PoliceConform(object):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform']['meta_info']


                                        class PoliceExceed(object):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed']['meta_info']


                                        class PoliceViolate(object):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate']['meta_info']


                                        class ParentMark(object):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark']['meta_info']


                                        class ParentPoliceConform(object):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform']['meta_info']


                                        class ParentPoliceExceed(object):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed']['meta_info']


                                        class ParentPoliceViolate(object):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.child_mark is not None and self.child_mark._has_data():
                                                return True

                                            if self.parent_mark is not None and self.parent_mark._has_data():
                                                return True

                                            if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                return True

                                            if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                return True

                                            if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                return True

                                            if self.police_conform is not None and self.police_conform._has_data():
                                                return True

                                            if self.police_exceed is not None and self.police_exceed._has_data():
                                                return True

                                            if self.police_violate is not None and self.police_violate._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v2'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.class_level is not None:
                                            return True

                                        if self.class_name is not None:
                                            return True

                                        if self.mark is not None and self.mark._has_data():
                                            return True

                                        if self.parent_class_name is not None:
                                            return True

                                        if self.parent_policy_name is not None:
                                            return True

                                        if self.police is not None and self.police._has_data():
                                            return True

                                        if self.policy_name is not None:
                                            return True

                                        if self.queue is not None and self.queue._has_data():
                                            return True

                                        if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                            return True

                                        if self.shape is not None and self.shape._has_data():
                                            return True

                                        if self.wfq is not None and self.wfq._has_data():
                                            return True

                                        if self.wred is not None and self.wred._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy-typhoon'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.qos_show_ea_st_v2 is not None:
                                        for child_ref in self.qos_show_ea_st_v2:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:details'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header is not None and self.header._has_data():
                                    return True

                                if self.policy is not None and self.policy._has_data():
                                    return True

                                if self.policy_typhoon is not None and self.policy_typhoon._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:input'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.details is not None and self.details._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Input']['meta_info']


                    class Output(object):
                        """
                        QoS policy direction egress
                        
                        .. attribute:: details
                        
                        	QoS policy direction egress
                        	**type**\:   :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.details = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details()
                            self.details.parent = self


                        class Details(object):
                            """
                            QoS policy direction egress
                            
                            .. attribute:: header
                            
                            	QoS policy header
                            	**type**\:   :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header>`
                            
                            .. attribute:: policy
                            
                            	Trident QoS policy details
                            	**type**\:   :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy>`
                            
                            .. attribute:: policy_typhoon
                            
                            	Typhoon QoS policy details
                            	**type**\:   :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.header = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header()
                                self.header.parent = self
                                self.policy = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy()
                                self.policy.parent = self
                                self.policy_typhoon = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon()
                                self.policy_typhoon.parent = self


                            class Header(object):
                                """
                                QoS policy header
                                
                                .. attribute:: classes
                                
                                	Number of classes
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_parameters
                                
                                	Interface config and programmed parameters
                                	**type**\:   :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters>`
                                
                                .. attribute:: policy_name
                                
                                	Policy name
                                	**type**\:  str
                                
                                	**length:** 0..65
                                
                                .. attribute:: programmed_bandwidth
                                
                                	Bandwidth that was programmed
                                	**type**\:   :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.classes = None
                                    self.interface_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters()
                                    self.interface_parameters.parent = self
                                    self.policy_name = None
                                    self.programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth()
                                    self.programmed_bandwidth.parent = self


                                class InterfaceParameters(object):
                                    """
                                    Interface config and programmed parameters
                                    
                                    .. attribute:: ancp_config_bandwidth
                                    
                                    	Bandwidth obtain from IM
                                    	**type**\:   :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                    
                                    .. attribute:: ancp_programmed_bandwidth
                                    
                                    	ANCP bandwidth that was programmed
                                    	**type**\:   :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                    
                                    .. attribute:: port_config_bandwidth
                                    
                                    	Bandwidth due to port speed change
                                    	**type**\:   :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                    
                                    .. attribute:: port_shaper_rate
                                    
                                    	Bandwidth that was programmed
                                    	**type**\:   :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.ancp_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                        self.ancp_config_bandwidth.parent = self
                                        self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                        self.ancp_programmed_bandwidth.parent = self
                                        self.port_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                        self.port_config_bandwidth.parent = self
                                        self.port_shaper_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate()
                                        self.port_shaper_rate.parent = self


                                    class PortConfigBandwidth(object):
                                        """
                                        Bandwidth due to port speed change
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-config-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth']['meta_info']


                                    class AncpConfigBandwidth(object):
                                        """
                                        Bandwidth obtain from IM
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-config-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth']['meta_info']


                                    class AncpProgrammedBandwidth(object):
                                        """
                                        ANCP bandwidth that was programmed
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-programmed-bandwidth'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth']['meta_info']


                                    class PortShaperRate(object):
                                        """
                                        Bandwidth that was programmed
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.unit = None
                                            self.value = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-shaper-rate'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.unit is not None:
                                                return True

                                            if self.value is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interface-parameters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.ancp_config_bandwidth is not None and self.ancp_config_bandwidth._has_data():
                                            return True

                                        if self.ancp_programmed_bandwidth is not None and self.ancp_programmed_bandwidth._has_data():
                                            return True

                                        if self.port_config_bandwidth is not None and self.port_config_bandwidth._has_data():
                                            return True

                                        if self.port_shaper_rate is not None and self.port_shaper_rate._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters']['meta_info']


                                class ProgrammedBandwidth(object):
                                    """
                                    Bandwidth that was programmed
                                    
                                    .. attribute:: unit
                                    
                                    	Config unit
                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                    
                                    .. attribute:: value
                                    
                                    	Config value
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.unit = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:programmed-bandwidth'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.unit is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:header'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.classes is not None:
                                        return True

                                    if self.interface_parameters is not None and self.interface_parameters._has_data():
                                        return True

                                    if self.policy_name is not None:
                                        return True

                                    if self.programmed_bandwidth is not None and self.programmed_bandwidth._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header']['meta_info']


                            class Policy(object):
                                """
                                Trident QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v1
                                
                                	qos show ea st v1
                                	**type**\: list of    :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.qos_show_ea_st_v1 = YList()
                                    self.qos_show_ea_st_v1.parent = self
                                    self.qos_show_ea_st_v1.name = 'qos_show_ea_st_v1'


                                class QosShowEaStV1(object):
                                    """
                                    qos show ea st v1
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark>`
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police>`
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.class_level = None
                                        self.class_name = None
                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark()
                                        self.mark.parent = self
                                        self.parent_class_name = None
                                        self.parent_policy_name = None
                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police()
                                        self.police.parent = self
                                        self.policy_name = None
                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue()
                                        self.queue.parent = self
                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape()
                                        self.shape.parent = self
                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq()
                                        self.wfq.parent = self
                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred()
                                        self.wred.parent = self


                                    class Queue(object):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.class_name = None
                                            self.queue_id = None
                                            self.queue_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.class_name is not None:
                                                return True

                                            if self.queue_id is not None:
                                                return True

                                            if self.queue_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue']['meta_info']


                                    class QueueLimitParameters(object):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self.profile_id = None
                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self.scaling_profile_id = None


                                        class QueueLimit(object):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit']['meta_info']


                                        class ConfigQueueLimit(object):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            if self.queue_limit is not None and self.queue_limit._has_data():
                                                return True

                                            if self.scaling_profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters']['meta_info']


                                    class Shape(object):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS in bytes
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR in kbps
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                        
                                        .. attribute:: config_bandwidth
                                        
                                        	Config bandwidth
                                        	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS in bytes
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR in kbps
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Shape profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir()
                                            self.cir.parent = self
                                            self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                            self.config_bandwidth.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir()
                                            self.pir.parent = self
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR in kbps
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir']['meta_info']


                                        class ConfigBandwidth(object):
                                            """
                                            Config bandwidth
                                            
                                            .. attribute:: minimum_rate
                                            
                                            	Minimum bandwidth rate
                                            	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                self.minimum_rate.parent = self


                                            class MinimumRate(object):
                                                """
                                                Minimum bandwidth rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS in bytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR in kbps
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS in bytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape']['meta_info']


                                    class Police(object):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir()
                                            self.cir.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir()
                                            self.pir.parent = self
                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self.policer_type = None
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs']['meta_info']


                                        class PoliceConfigParameters(object):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self


                                            class AverageRate(object):
                                                """
                                                Average rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                            class PeakRate(object):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                            class ConformBurst(object):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                            class ExceedBurst(object):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.average_rate is not None and self.average_rate._has_data():
                                                    return True

                                                if self.conform_burst is not None and self.conform_burst._has_data():
                                                    return True

                                                if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                    return True

                                                if self.peak_rate is not None and self.peak_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                return True

                                            if self.policer_type is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police']['meta_info']


                                    class Wfq(object):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self.chunk_id = None
                                            self.committed_weight = None
                                            self.excess_ratio = None
                                            self.excess_weight = None
                                            self.level = None
                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self.profile_id = None


                                        class ParentBandwidth(object):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth']['meta_info']


                                        class Bandwidth(object):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bandwidth is not None and self.bandwidth._has_data():
                                                return True

                                            if self.chunk_id is not None:
                                                return True

                                            if self.committed_weight is not None:
                                                return True

                                            if self.excess_ratio is not None:
                                                return True

                                            if self.excess_weight is not None:
                                                return True

                                            if self.level is not None:
                                                return True

                                            if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq']['meta_info']


                                    class Wred(object):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.curve = YList()
                                            self.curve.parent = self
                                            self.curve.name = 'curve'
                                            self.curve_xr = None
                                            self.profile_id = None
                                            self.scaling_profile_id = None
                                            self.table_id = None
                                            self.type = None


                                        class Curve(object):
                                            """
                                            Curve details
                                            
                                            .. attribute:: match
                                            
                                            	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.match = None
                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self


                                            class MinThreshold(object):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold']['meta_info']


                                            class MinThresholdUserConfig(object):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                            class MaxThreshold(object):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold']['meta_info']


                                            class MaxThresholdUserConfig(object):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.match is not None:
                                                    return True

                                                if self.max_threshold is not None and self.max_threshold._has_data():
                                                    return True

                                                if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                    return True

                                                if self.min_threshold is not None and self.min_threshold._has_data():
                                                    return True

                                                if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.curve is not None:
                                                for child_ref in self.curve:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.curve_xr is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            if self.scaling_profile_id is not None:
                                                return True

                                            if self.table_id is not None:
                                                return True

                                            if self.type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred']['meta_info']


                                    class Mark(object):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                            self.police_violate.parent = self


                                        class ChildMark(object):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark']['meta_info']


                                        class PoliceConform(object):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform']['meta_info']


                                        class PoliceExceed(object):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed']['meta_info']


                                        class PoliceViolate(object):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate']['meta_info']


                                        class ParentMark(object):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark']['meta_info']


                                        class ParentPoliceConform(object):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform']['meta_info']


                                        class ParentPoliceExceed(object):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed']['meta_info']


                                        class ParentPoliceViolate(object):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.child_mark is not None and self.child_mark._has_data():
                                                return True

                                            if self.parent_mark is not None and self.parent_mark._has_data():
                                                return True

                                            if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                return True

                                            if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                return True

                                            if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                return True

                                            if self.police_conform is not None and self.police_conform._has_data():
                                                return True

                                            if self.police_exceed is not None and self.police_exceed._has_data():
                                                return True

                                            if self.police_violate is not None and self.police_violate._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v1'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.class_level is not None:
                                            return True

                                        if self.class_name is not None:
                                            return True

                                        if self.mark is not None and self.mark._has_data():
                                            return True

                                        if self.parent_class_name is not None:
                                            return True

                                        if self.parent_policy_name is not None:
                                            return True

                                        if self.police is not None and self.police._has_data():
                                            return True

                                        if self.policy_name is not None:
                                            return True

                                        if self.queue is not None and self.queue._has_data():
                                            return True

                                        if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                            return True

                                        if self.shape is not None and self.shape._has_data():
                                            return True

                                        if self.wfq is not None and self.wfq._has_data():
                                            return True

                                        if self.wred is not None and self.wred._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.qos_show_ea_st_v1 is not None:
                                        for child_ref in self.qos_show_ea_st_v1:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy']['meta_info']


                            class PolicyTyphoon(object):
                                """
                                Typhoon QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v2
                                
                                	qos show ea st v2
                                	**type**\: list of    :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.qos_show_ea_st_v2 = YList()
                                    self.qos_show_ea_st_v2.parent = self
                                    self.qos_show_ea_st_v2.name = 'qos_show_ea_st_v2'


                                class QosShowEaStV2(object):
                                    """
                                    qos show ea st v2
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\:  str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.class_level = None
                                        self.class_name = None
                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                        self.mark.parent = self
                                        self.parent_class_name = None
                                        self.parent_policy_name = None
                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                        self.police.parent = self
                                        self.policy_name = None
                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                        self.queue.parent = self
                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                        self.shape.parent = self
                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                        self.wfq.parent = self
                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                        self.wred.parent = self


                                    class Queue(object):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.class_name = None
                                            self.queue_id = None
                                            self.queue_type = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.class_name is not None:
                                                return True

                                            if self.queue_id is not None:
                                                return True

                                            if self.queue_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue']['meta_info']


                                    class QueueLimitParameters(object):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: absolute_index
                                        
                                        	Absolute Index
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: curve_id
                                        
                                        	Curve ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: template_id
                                        
                                        	Template ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.absolute_index = None
                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self.curve_id = None
                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self.template_id = None


                                        class QueueLimit(object):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit']['meta_info']


                                        class ConfigQueueLimit(object):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.absolute_index is not None:
                                                return True

                                            if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                return True

                                            if self.curve_id is not None:
                                                return True

                                            if self.queue_limit is not None and self.queue_limit._has_data():
                                                return True

                                            if self.template_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters']['meta_info']


                                    class Shape(object):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir_shape
                                        
                                        	CIR shaper params
                                        	**type**\:   :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                        
                                        .. attribute:: cir_shape_type
                                        
                                        	CIR Shaper type
                                        	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                        
                                        .. attribute:: pir_shape
                                        
                                        	PIR shaper params
                                        	**type**\:   :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                        
                                        .. attribute:: pir_shape_type
                                        
                                        	PIR Shaper type
                                        	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                            self.cir_shape.parent = self
                                            self.cir_shape_type = None
                                            self.pir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                            self.pir_shape.parent = self
                                            self.pir_shape_type = None


                                        class CirShape(object):
                                            """
                                            CIR shaper params
                                            
                                            .. attribute:: cbs
                                            
                                            	CBS in bytes
                                            	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: cir
                                            
                                            	CIR in kbps
                                            	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                            
                                            .. attribute:: config_bandwidth
                                            
                                            	Config bandwidth
                                            	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                self.cbs.parent = self
                                                self.chunk_id = None
                                                self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                self.cir.parent = self
                                                self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                self.config_bandwidth.parent = self
                                                self.profile_id = None
                                                self.scale_factor = None


                                            class Cir(object):
                                                """
                                                CIR in kbps
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir']['meta_info']


                                            class ConfigBandwidth(object):
                                                """
                                                Config bandwidth
                                                
                                                .. attribute:: minimum_rate
                                                
                                                	Minimum bandwidth rate
                                                	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                    self.minimum_rate.parent = self


                                                class MinimumRate(object):
                                                    """
                                                    Minimum bandwidth rate
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth']['meta_info']


                                            class Cbs(object):
                                                """
                                                CBS in bytes
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir-shape'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.cbs is not None and self.cbs._has_data():
                                                    return True

                                                if self.chunk_id is not None:
                                                    return True

                                                if self.cir is not None and self.cir._has_data():
                                                    return True

                                                if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                    return True

                                                if self.profile_id is not None:
                                                    return True

                                                if self.scale_factor is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape']['meta_info']


                                        class PirShape(object):
                                            """
                                            PIR shaper params
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: pbs
                                            
                                            	PBS in bytes
                                            	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                            
                                            .. attribute:: pir
                                            
                                            	PIR in kbps
                                            	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.chunk_id = None
                                                self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                self.pbs.parent = self
                                                self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                self.pir.parent = self
                                                self.profile_id = None
                                                self.scale_factor = None


                                            class Pir(object):
                                                """
                                                PIR in kbps
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir']['meta_info']


                                            class Pbs(object):
                                                """
                                                PBS in bytes
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir-shape'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.chunk_id is not None:
                                                    return True

                                                if self.pbs is not None and self.pbs._has_data():
                                                    return True

                                                if self.pir is not None and self.pir._has_data():
                                                    return True

                                                if self.profile_id is not None:
                                                    return True

                                                if self.scale_factor is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cir_shape is not None and self.cir_shape._has_data():
                                                return True

                                            if self.cir_shape_type is not None:
                                                return True

                                            if self.pir_shape is not None and self.pir_shape._has_data():
                                                return True

                                            if self.pir_shape_type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape']['meta_info']


                                    class Police(object):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                            self.cbs.parent = self
                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                            self.cir.parent = self
                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                            self.pbs.parent = self
                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                            self.pir.parent = self
                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self.policer_type = None
                                            self.profile_id = None


                                        class Cir(object):
                                            """
                                            CIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir']['meta_info']


                                        class Cbs(object):
                                            """
                                            CBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs']['meta_info']


                                        class Pir(object):
                                            """
                                            PIR
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir']['meta_info']


                                        class Pbs(object):
                                            """
                                            PBS
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs']['meta_info']


                                        class PoliceConfigParameters(object):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self


                                            class AverageRate(object):
                                                """
                                                Average rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                            class PeakRate(object):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                            class ConformBurst(object):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                            class ExceedBurst(object):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.average_rate is not None and self.average_rate._has_data():
                                                    return True

                                                if self.conform_burst is not None and self.conform_burst._has_data():
                                                    return True

                                                if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                    return True

                                                if self.peak_rate is not None and self.peak_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.cbs is not None and self.cbs._has_data():
                                                return True

                                            if self.cir is not None and self.cir._has_data():
                                                return True

                                            if self.pbs is not None and self.pbs._has_data():
                                                return True

                                            if self.pir is not None and self.pir._has_data():
                                                return True

                                            if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                return True

                                            if self.policer_type is not None:
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police']['meta_info']


                                    class Wfq(object):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\:  int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self.chunk_id = None
                                            self.committed_weight = None
                                            self.excess_ratio = None
                                            self.excess_weight = None
                                            self.level = None
                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self.profile_id = None


                                        class ParentBandwidth(object):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth']['meta_info']


                                        class Bandwidth(object):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.bandwidth is not None and self.bandwidth._has_data():
                                                return True

                                            if self.chunk_id is not None:
                                                return True

                                            if self.committed_weight is not None:
                                                return True

                                            if self.excess_ratio is not None:
                                                return True

                                            if self.excess_weight is not None:
                                                return True

                                            if self.level is not None:
                                                return True

                                            if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                return True

                                            if self.profile_id is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq']['meta_info']


                                    class Wred(object):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.curve = YList()
                                            self.curve.parent = self
                                            self.curve.name = 'curve'
                                            self.curve_xr = None
                                            self.type = None


                                        class Curve(object):
                                            """
                                            Curve details
                                            
                                            .. attribute:: absolute_index
                                            
                                            	Absolute Index
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: curve_id
                                            
                                            	Curve ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: exp_match
                                            
                                            	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: match
                                            
                                            	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\:  str
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: template_id
                                            
                                            	Template ID
                                            	**type**\:  int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.absolute_index = None
                                                self.curve_id = None
                                                self.exp_match = None
                                                self.match = None
                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self.template_id = None


                                            class MinThreshold(object):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold']['meta_info']


                                            class MinThresholdUserConfig(object):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                            class MaxThreshold(object):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold']['meta_info']


                                            class MaxThresholdUserConfig(object):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.absolute_index is not None:
                                                    return True

                                                if self.curve_id is not None:
                                                    return True

                                                if self.exp_match is not None:
                                                    return True

                                                if self.match is not None:
                                                    return True

                                                if self.max_threshold is not None and self.max_threshold._has_data():
                                                    return True

                                                if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                    return True

                                                if self.min_threshold is not None and self.min_threshold._has_data():
                                                    return True

                                                if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                    return True

                                                if self.template_id is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.curve is not None:
                                                for child_ref in self.curve:
                                                    if child_ref._has_data():
                                                        return True

                                            if self.curve_xr is not None:
                                                return True

                                            if self.type is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred']['meta_info']


                                    class Mark(object):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                            self.police_violate.parent = self


                                        class ChildMark(object):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark']['meta_info']


                                        class PoliceConform(object):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform']['meta_info']


                                        class PoliceExceed(object):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed']['meta_info']


                                        class PoliceViolate(object):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate']['meta_info']


                                        class ParentMark(object):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark']['meta_info']


                                        class ParentPoliceConform(object):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform']['meta_info']


                                        class ParentPoliceExceed(object):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed']['meta_info']


                                        class ParentPoliceViolate(object):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.action_type = None
                                                self.mark_detail = YList()
                                                self.mark_detail.parent = self
                                                self.mark_detail.name = 'mark_detail'


                                            class MarkDetail(object):
                                                """
                                                Mark value
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.action_opcode = None
                                                    self.mark_value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.action_opcode is not None:
                                                        return True

                                                    if self.mark_value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.action_type is not None:
                                                    return True

                                                if self.mark_detail is not None:
                                                    for child_ref in self.mark_detail:
                                                        if child_ref._has_data():
                                                            return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.child_mark is not None and self.child_mark._has_data():
                                                return True

                                            if self.parent_mark is not None and self.parent_mark._has_data():
                                                return True

                                            if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                return True

                                            if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                return True

                                            if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                return True

                                            if self.police_conform is not None and self.police_conform._has_data():
                                                return True

                                            if self.police_exceed is not None and self.police_exceed._has_data():
                                                return True

                                            if self.police_violate is not None and self.police_violate._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v2'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.class_level is not None:
                                            return True

                                        if self.class_name is not None:
                                            return True

                                        if self.mark is not None and self.mark._has_data():
                                            return True

                                        if self.parent_class_name is not None:
                                            return True

                                        if self.parent_policy_name is not None:
                                            return True

                                        if self.police is not None and self.police._has_data():
                                            return True

                                        if self.policy_name is not None:
                                            return True

                                        if self.queue is not None and self.queue._has_data():
                                            return True

                                        if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                            return True

                                        if self.shape is not None and self.shape._has_data():
                                            return True

                                        if self.wfq is not None and self.wfq._has_data():
                                            return True

                                        if self.wred is not None and self.wred._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy-typhoon'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.qos_show_ea_st_v2 is not None:
                                        for child_ref in self.qos_show_ea_st_v2:
                                            if child_ref._has_data():
                                                return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:details'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.header is not None and self.header._has_data():
                                    return True

                                if self.policy is not None and self.policy._has_data():
                                    return True

                                if self.policy_typhoon is not None and self.policy_typhoon._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:output'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.details is not None and self.details._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                            return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface.Output']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interface[Cisco-IOS-XR-asr9k-qos-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.input is not None and self.input._has_data():
                            return True

                        if self.output is not None and self.output._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                        return meta._meta_table['PlatformQos.Nodes.Node.Interfaces.Interface']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                    return meta._meta_table['PlatformQos.Nodes.Node.Interfaces']['meta_info']


            class BundleInterfaces(object):
                """
                QoS list of bundle interfaces
                
                .. attribute:: bundle_interface
                
                	QoS interface name
                	**type**\: list of    :py:class:`BundleInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface>`
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = YList()
                    self.bundle_interface.parent = self
                    self.bundle_interface.name = 'bundle_interface'


                class BundleInterface(object):
                    """
                    QoS interface name
                    
                    .. attribute:: interface_name  <key>
                    
                    	Bundle interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bundle_input
                    
                    	QoS policy direction output
                    	**type**\:   :py:class:`BundleInput <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput>`
                    
                    .. attribute:: bundle_output
                    
                    	QoS policy direction output
                    	**type**\:   :py:class:`BundleOutput <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput>`
                    
                    

                    """

                    _prefix = 'asr9k-qos-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.bundle_input = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput()
                        self.bundle_input.parent = self
                        self.bundle_output = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput()
                        self.bundle_output.parent = self


                    class BundleOutput(object):
                        """
                        QoS policy direction output
                        
                        .. attribute:: member_interfaces
                        
                        	QoS list of member interfaces
                        	**type**\:   :py:class:`MemberInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interfaces = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces()
                            self.member_interfaces.parent = self


                        class MemberInterfaces(object):
                            """
                            QoS list of member interfaces
                            
                            .. attribute:: member_interface
                            
                            	QoS interface name
                            	**type**\: list of    :py:class:`MemberInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_interface = YList()
                                self.member_interface.parent = self
                                self.member_interface.name = 'member_interface'


                            class MemberInterface(object):
                                """
                                QoS interface name
                                
                                .. attribute:: interface_name  <key>
                                
                                	Memeber interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: details
                                
                                	QoS policy direction egress
                                	**type**\:   :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.details = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details()
                                    self.details.parent = self


                                class Details(object):
                                    """
                                    QoS policy direction egress
                                    
                                    .. attribute:: header
                                    
                                    	QoS policy header
                                    	**type**\:   :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header>`
                                    
                                    .. attribute:: policy
                                    
                                    	Trident QoS policy details
                                    	**type**\:   :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy>`
                                    
                                    .. attribute:: policy_typhoon
                                    
                                    	Typhoon QoS policy details
                                    	**type**\:   :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header()
                                        self.header.parent = self
                                        self.policy = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy()
                                        self.policy.parent = self
                                        self.policy_typhoon = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon()
                                        self.policy_typhoon.parent = self


                                    class Header(object):
                                        """
                                        QoS policy header
                                        
                                        .. attribute:: classes
                                        
                                        	Number of classes
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: interface_parameters
                                        
                                        	Interface config and programmed parameters
                                        	**type**\:   :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters>`
                                        
                                        .. attribute:: policy_name
                                        
                                        	Policy name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: programmed_bandwidth
                                        
                                        	Bandwidth that was programmed
                                        	**type**\:   :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.classes = None
                                            self.interface_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters()
                                            self.interface_parameters.parent = self
                                            self.policy_name = None
                                            self.programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth()
                                            self.programmed_bandwidth.parent = self


                                        class InterfaceParameters(object):
                                            """
                                            Interface config and programmed parameters
                                            
                                            .. attribute:: ancp_config_bandwidth
                                            
                                            	Bandwidth obtain from IM
                                            	**type**\:   :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                            
                                            .. attribute:: ancp_programmed_bandwidth
                                            
                                            	ANCP bandwidth that was programmed
                                            	**type**\:   :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                            
                                            .. attribute:: port_config_bandwidth
                                            
                                            	Bandwidth due to port speed change
                                            	**type**\:   :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                            
                                            .. attribute:: port_shaper_rate
                                            
                                            	Bandwidth that was programmed
                                            	**type**\:   :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.ancp_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                                self.ancp_config_bandwidth.parent = self
                                                self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                                self.ancp_programmed_bandwidth.parent = self
                                                self.port_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                                self.port_config_bandwidth.parent = self
                                                self.port_shaper_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate()
                                                self.port_shaper_rate.parent = self


                                            class PortConfigBandwidth(object):
                                                """
                                                Bandwidth due to port speed change
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth']['meta_info']


                                            class AncpConfigBandwidth(object):
                                                """
                                                Bandwidth obtain from IM
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth']['meta_info']


                                            class AncpProgrammedBandwidth(object):
                                                """
                                                ANCP bandwidth that was programmed
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-programmed-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth']['meta_info']


                                            class PortShaperRate(object):
                                                """
                                                Bandwidth that was programmed
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-shaper-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interface-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.ancp_config_bandwidth is not None and self.ancp_config_bandwidth._has_data():
                                                    return True

                                                if self.ancp_programmed_bandwidth is not None and self.ancp_programmed_bandwidth._has_data():
                                                    return True

                                                if self.port_config_bandwidth is not None and self.port_config_bandwidth._has_data():
                                                    return True

                                                if self.port_shaper_rate is not None and self.port_shaper_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters']['meta_info']


                                        class ProgrammedBandwidth(object):
                                            """
                                            Bandwidth that was programmed
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:programmed-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.classes is not None:
                                                return True

                                            if self.interface_parameters is not None and self.interface_parameters._has_data():
                                                return True

                                            if self.policy_name is not None:
                                                return True

                                            if self.programmed_bandwidth is not None and self.programmed_bandwidth._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header']['meta_info']


                                    class Policy(object):
                                        """
                                        Trident QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v1
                                        
                                        	qos show ea st v1
                                        	**type**\: list of    :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.qos_show_ea_st_v1 = YList()
                                            self.qos_show_ea_st_v1.parent = self
                                            self.qos_show_ea_st_v1.name = 'qos_show_ea_st_v1'


                                        class QosShowEaStV1(object):
                                            """
                                            qos show ea st v1
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark>`
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police>`
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.class_level = None
                                                self.class_name = None
                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark()
                                                self.mark.parent = self
                                                self.parent_class_name = None
                                                self.parent_policy_name = None
                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police()
                                                self.police.parent = self
                                                self.policy_name = None
                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue()
                                                self.queue.parent = self
                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape()
                                                self.shape.parent = self
                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq()
                                                self.wfq.parent = self
                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred()
                                                self.wred.parent = self


                                            class Queue(object):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\:  str
                                                
                                                	**length:** 0..65
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.class_name = None
                                                    self.queue_id = None
                                                    self.queue_type = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.class_name is not None:
                                                        return True

                                                    if self.queue_id is not None:
                                                        return True

                                                    if self.queue_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue']['meta_info']


                                            class QueueLimitParameters(object):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self.profile_id = None
                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self.scaling_profile_id = None


                                                class QueueLimit(object):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit']['meta_info']


                                                class ConfigQueueLimit(object):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    if self.queue_limit is not None and self.queue_limit._has_data():
                                                        return True

                                                    if self.scaling_profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters']['meta_info']


                                            class Shape(object):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS in bytes
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR in kbps
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                                
                                                .. attribute:: config_bandwidth
                                                
                                                	Config bandwidth
                                                	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS in bytes
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR in kbps
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Shape profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir()
                                                    self.cir.parent = self
                                                    self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                                    self.config_bandwidth.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir()
                                                    self.pir.parent = self
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR in kbps
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir']['meta_info']


                                                class ConfigBandwidth(object):
                                                    """
                                                    Config bandwidth
                                                    
                                                    .. attribute:: minimum_rate
                                                    
                                                    	Minimum bandwidth rate
                                                    	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                        self.minimum_rate.parent = self


                                                    class MinimumRate(object):
                                                        """
                                                        Minimum bandwidth rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS in bytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR in kbps
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS in bytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape']['meta_info']


                                            class Police(object):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir()
                                                    self.cir.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir()
                                                    self.pir.parent = self
                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self.policer_type = None
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs']['meta_info']


                                                class PoliceConfigParameters(object):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self


                                                    class AverageRate(object):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                                    class PeakRate(object):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                                    class ConformBurst(object):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                                    class ExceedBurst(object):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.average_rate is not None and self.average_rate._has_data():
                                                            return True

                                                        if self.conform_burst is not None and self.conform_burst._has_data():
                                                            return True

                                                        if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                            return True

                                                        if self.peak_rate is not None and self.peak_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                        return True

                                                    if self.policer_type is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police']['meta_info']


                                            class Wfq(object):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self.chunk_id = None
                                                    self.committed_weight = None
                                                    self.excess_ratio = None
                                                    self.excess_weight = None
                                                    self.level = None
                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self.profile_id = None


                                                class ParentBandwidth(object):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth']['meta_info']


                                                class Bandwidth(object):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.bandwidth is not None and self.bandwidth._has_data():
                                                        return True

                                                    if self.chunk_id is not None:
                                                        return True

                                                    if self.committed_weight is not None:
                                                        return True

                                                    if self.excess_ratio is not None:
                                                        return True

                                                    if self.excess_weight is not None:
                                                        return True

                                                    if self.level is not None:
                                                        return True

                                                    if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq']['meta_info']


                                            class Wred(object):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: table_id
                                                
                                                	Table ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.curve = YList()
                                                    self.curve.parent = self
                                                    self.curve.name = 'curve'
                                                    self.curve_xr = None
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None
                                                    self.table_id = None
                                                    self.type = None


                                                class Curve(object):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.match = None
                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self


                                                    class MinThreshold(object):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold']['meta_info']


                                                    class MinThresholdUserConfig(object):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                                    class MaxThreshold(object):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold']['meta_info']


                                                    class MaxThresholdUserConfig(object):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.match is not None:
                                                            return True

                                                        if self.max_threshold is not None and self.max_threshold._has_data():
                                                            return True

                                                        if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                            return True

                                                        if self.min_threshold is not None and self.min_threshold._has_data():
                                                            return True

                                                        if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.curve is not None:
                                                        for child_ref in self.curve:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.curve_xr is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    if self.scaling_profile_id is not None:
                                                        return True

                                                    if self.table_id is not None:
                                                        return True

                                                    if self.type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred']['meta_info']


                                            class Mark(object):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                                    self.police_violate.parent = self


                                                class ChildMark(object):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark']['meta_info']


                                                class PoliceConform(object):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform']['meta_info']


                                                class PoliceExceed(object):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed']['meta_info']


                                                class PoliceViolate(object):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate']['meta_info']


                                                class ParentMark(object):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark']['meta_info']


                                                class ParentPoliceConform(object):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform']['meta_info']


                                                class ParentPoliceExceed(object):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed']['meta_info']


                                                class ParentPoliceViolate(object):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.child_mark is not None and self.child_mark._has_data():
                                                        return True

                                                    if self.parent_mark is not None and self.parent_mark._has_data():
                                                        return True

                                                    if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                        return True

                                                    if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                        return True

                                                    if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                        return True

                                                    if self.police_conform is not None and self.police_conform._has_data():
                                                        return True

                                                    if self.police_exceed is not None and self.police_exceed._has_data():
                                                        return True

                                                    if self.police_violate is not None and self.police_violate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v1'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.class_level is not None:
                                                    return True

                                                if self.class_name is not None:
                                                    return True

                                                if self.mark is not None and self.mark._has_data():
                                                    return True

                                                if self.parent_class_name is not None:
                                                    return True

                                                if self.parent_policy_name is not None:
                                                    return True

                                                if self.police is not None and self.police._has_data():
                                                    return True

                                                if self.policy_name is not None:
                                                    return True

                                                if self.queue is not None and self.queue._has_data():
                                                    return True

                                                if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                                    return True

                                                if self.shape is not None and self.shape._has_data():
                                                    return True

                                                if self.wfq is not None and self.wfq._has_data():
                                                    return True

                                                if self.wred is not None and self.wred._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.qos_show_ea_st_v1 is not None:
                                                for child_ref in self.qos_show_ea_st_v1:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy']['meta_info']


                                    class PolicyTyphoon(object):
                                        """
                                        Typhoon QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v2
                                        
                                        	qos show ea st v2
                                        	**type**\: list of    :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.qos_show_ea_st_v2 = YList()
                                            self.qos_show_ea_st_v2.parent = self
                                            self.qos_show_ea_st_v2.name = 'qos_show_ea_st_v2'


                                        class QosShowEaStV2(object):
                                            """
                                            qos show ea st v2
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.class_level = None
                                                self.class_name = None
                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                                self.mark.parent = self
                                                self.parent_class_name = None
                                                self.parent_policy_name = None
                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                                self.police.parent = self
                                                self.policy_name = None
                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                                self.queue.parent = self
                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                                self.shape.parent = self
                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                                self.wfq.parent = self
                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                                self.wred.parent = self


                                            class Queue(object):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\:  str
                                                
                                                	**length:** 0..65
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.class_name = None
                                                    self.queue_id = None
                                                    self.queue_type = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.class_name is not None:
                                                        return True

                                                    if self.queue_id is not None:
                                                        return True

                                                    if self.queue_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue']['meta_info']


                                            class QueueLimitParameters(object):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: absolute_index
                                                
                                                	Absolute Index
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: curve_id
                                                
                                                	Curve ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: template_id
                                                
                                                	Template ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.absolute_index = None
                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self.curve_id = None
                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self.template_id = None


                                                class QueueLimit(object):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit']['meta_info']


                                                class ConfigQueueLimit(object):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.absolute_index is not None:
                                                        return True

                                                    if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                        return True

                                                    if self.curve_id is not None:
                                                        return True

                                                    if self.queue_limit is not None and self.queue_limit._has_data():
                                                        return True

                                                    if self.template_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters']['meta_info']


                                            class Shape(object):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir_shape
                                                
                                                	CIR shaper params
                                                	**type**\:   :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                                
                                                .. attribute:: cir_shape_type
                                                
                                                	CIR Shaper type
                                                	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                                
                                                .. attribute:: pir_shape
                                                
                                                	PIR shaper params
                                                	**type**\:   :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                                
                                                .. attribute:: pir_shape_type
                                                
                                                	PIR Shaper type
                                                	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                                    self.cir_shape.parent = self
                                                    self.cir_shape_type = None
                                                    self.pir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                                    self.pir_shape.parent = self
                                                    self.pir_shape_type = None


                                                class CirShape(object):
                                                    """
                                                    CIR shaper params
                                                    
                                                    .. attribute:: cbs
                                                    
                                                    	CBS in bytes
                                                    	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: cir
                                                    
                                                    	CIR in kbps
                                                    	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                                    
                                                    .. attribute:: config_bandwidth
                                                    
                                                    	Config bandwidth
                                                    	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                        self.cbs.parent = self
                                                        self.chunk_id = None
                                                        self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                        self.cir.parent = self
                                                        self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                        self.config_bandwidth.parent = self
                                                        self.profile_id = None
                                                        self.scale_factor = None


                                                    class Cir(object):
                                                        """
                                                        CIR in kbps
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir']['meta_info']


                                                    class ConfigBandwidth(object):
                                                        """
                                                        Config bandwidth
                                                        
                                                        .. attribute:: minimum_rate
                                                        
                                                        	Minimum bandwidth rate
                                                        	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                            self.minimum_rate.parent = self


                                                        class MinimumRate(object):
                                                            """
                                                            Minimum bandwidth rate
                                                            
                                                            .. attribute:: unit
                                                            
                                                            	Config unit
                                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                            
                                                            .. attribute:: value
                                                            
                                                            	Config value
                                                            	**type**\:  int
                                                            
                                                            	**range:** 0..4294967295
                                                            
                                                            

                                                            """

                                                            _prefix = 'asr9k-qos-oper'
                                                            _revision = '2015-11-09'

                                                            def __init__(self):
                                                                self.parent = None
                                                                self.unit = None
                                                                self.value = None

                                                            @property
                                                            def _common_path(self):
                                                                if self.parent is None:
                                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                            def is_config(self):
                                                                ''' Returns True if this instance represents config data else returns False '''
                                                                return False

                                                            def _has_data(self):
                                                                if not self.is_config():
                                                                    return False
                                                                if self.unit is not None:
                                                                    return True

                                                                if self.value is not None:
                                                                    return True

                                                                return False

                                                            @staticmethod
                                                            def _meta_info():
                                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate']['meta_info']

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth']['meta_info']


                                                    class Cbs(object):
                                                        """
                                                        CBS in bytes
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir-shape'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.cbs is not None and self.cbs._has_data():
                                                            return True

                                                        if self.chunk_id is not None:
                                                            return True

                                                        if self.cir is not None and self.cir._has_data():
                                                            return True

                                                        if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                            return True

                                                        if self.profile_id is not None:
                                                            return True

                                                        if self.scale_factor is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape']['meta_info']


                                                class PirShape(object):
                                                    """
                                                    PIR shaper params
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: pbs
                                                    
                                                    	PBS in bytes
                                                    	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                                    
                                                    .. attribute:: pir
                                                    
                                                    	PIR in kbps
                                                    	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.chunk_id = None
                                                        self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                        self.pbs.parent = self
                                                        self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                        self.pir.parent = self
                                                        self.profile_id = None
                                                        self.scale_factor = None


                                                    class Pir(object):
                                                        """
                                                        PIR in kbps
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir']['meta_info']


                                                    class Pbs(object):
                                                        """
                                                        PBS in bytes
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir-shape'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.chunk_id is not None:
                                                            return True

                                                        if self.pbs is not None and self.pbs._has_data():
                                                            return True

                                                        if self.pir is not None and self.pir._has_data():
                                                            return True

                                                        if self.profile_id is not None:
                                                            return True

                                                        if self.scale_factor is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cir_shape is not None and self.cir_shape._has_data():
                                                        return True

                                                    if self.cir_shape_type is not None:
                                                        return True

                                                    if self.pir_shape is not None and self.pir_shape._has_data():
                                                        return True

                                                    if self.pir_shape_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape']['meta_info']


                                            class Police(object):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                                    self.cir.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                                    self.pir.parent = self
                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self.policer_type = None
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs']['meta_info']


                                                class PoliceConfigParameters(object):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self


                                                    class AverageRate(object):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                                    class PeakRate(object):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                                    class ConformBurst(object):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                                    class ExceedBurst(object):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.average_rate is not None and self.average_rate._has_data():
                                                            return True

                                                        if self.conform_burst is not None and self.conform_burst._has_data():
                                                            return True

                                                        if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                            return True

                                                        if self.peak_rate is not None and self.peak_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                        return True

                                                    if self.policer_type is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police']['meta_info']


                                            class Wfq(object):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self.chunk_id = None
                                                    self.committed_weight = None
                                                    self.excess_ratio = None
                                                    self.excess_weight = None
                                                    self.level = None
                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self.profile_id = None


                                                class ParentBandwidth(object):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth']['meta_info']


                                                class Bandwidth(object):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.bandwidth is not None and self.bandwidth._has_data():
                                                        return True

                                                    if self.chunk_id is not None:
                                                        return True

                                                    if self.committed_weight is not None:
                                                        return True

                                                    if self.excess_ratio is not None:
                                                        return True

                                                    if self.excess_weight is not None:
                                                        return True

                                                    if self.level is not None:
                                                        return True

                                                    if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq']['meta_info']


                                            class Wred(object):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.curve = YList()
                                                    self.curve.parent = self
                                                    self.curve.name = 'curve'
                                                    self.curve_xr = None
                                                    self.type = None


                                                class Curve(object):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: absolute_index
                                                    
                                                    	Absolute Index
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: curve_id
                                                    
                                                    	Curve ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: exp_match
                                                    
                                                    	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: template_id
                                                    
                                                    	Template ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.absolute_index = None
                                                        self.curve_id = None
                                                        self.exp_match = None
                                                        self.match = None
                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self.template_id = None


                                                    class MinThreshold(object):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold']['meta_info']


                                                    class MinThresholdUserConfig(object):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                                    class MaxThreshold(object):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold']['meta_info']


                                                    class MaxThresholdUserConfig(object):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.absolute_index is not None:
                                                            return True

                                                        if self.curve_id is not None:
                                                            return True

                                                        if self.exp_match is not None:
                                                            return True

                                                        if self.match is not None:
                                                            return True

                                                        if self.max_threshold is not None and self.max_threshold._has_data():
                                                            return True

                                                        if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                            return True

                                                        if self.min_threshold is not None and self.min_threshold._has_data():
                                                            return True

                                                        if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                            return True

                                                        if self.template_id is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.curve is not None:
                                                        for child_ref in self.curve:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.curve_xr is not None:
                                                        return True

                                                    if self.type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred']['meta_info']


                                            class Mark(object):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                                    self.police_violate.parent = self


                                                class ChildMark(object):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark']['meta_info']


                                                class PoliceConform(object):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform']['meta_info']


                                                class PoliceExceed(object):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed']['meta_info']


                                                class PoliceViolate(object):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate']['meta_info']


                                                class ParentMark(object):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark']['meta_info']


                                                class ParentPoliceConform(object):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform']['meta_info']


                                                class ParentPoliceExceed(object):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed']['meta_info']


                                                class ParentPoliceViolate(object):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.child_mark is not None and self.child_mark._has_data():
                                                        return True

                                                    if self.parent_mark is not None and self.parent_mark._has_data():
                                                        return True

                                                    if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                        return True

                                                    if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                        return True

                                                    if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                        return True

                                                    if self.police_conform is not None and self.police_conform._has_data():
                                                        return True

                                                    if self.police_exceed is not None and self.police_exceed._has_data():
                                                        return True

                                                    if self.police_violate is not None and self.police_violate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v2'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.class_level is not None:
                                                    return True

                                                if self.class_name is not None:
                                                    return True

                                                if self.mark is not None and self.mark._has_data():
                                                    return True

                                                if self.parent_class_name is not None:
                                                    return True

                                                if self.parent_policy_name is not None:
                                                    return True

                                                if self.police is not None and self.police._has_data():
                                                    return True

                                                if self.policy_name is not None:
                                                    return True

                                                if self.queue is not None and self.queue._has_data():
                                                    return True

                                                if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                                    return True

                                                if self.shape is not None and self.shape._has_data():
                                                    return True

                                                if self.wfq is not None and self.wfq._has_data():
                                                    return True

                                                if self.wred is not None and self.wred._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy-typhoon'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.qos_show_ea_st_v2 is not None:
                                                for child_ref in self.qos_show_ea_st_v2:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:details'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header is not None and self.header._has_data():
                                            return True

                                        if self.policy is not None and self.policy._has_data():
                                            return True

                                        if self.policy_typhoon is not None and self.policy_typhoon._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.interface_name is None:
                                        raise YPYModelError('Key property interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:member-interface[Cisco-IOS-XR-asr9k-qos-oper:interface-name = ' + str(self.interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.details is not None and self.details._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:member-interfaces'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_interface is not None:
                                    for child_ref in self.member_interface:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bundle-output'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interfaces is not None and self.member_interfaces._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput']['meta_info']


                    class BundleInput(object):
                        """
                        QoS policy direction output
                        
                        .. attribute:: member_interfaces
                        
                        	QoS list of member interfaces
                        	**type**\:   :py:class:`MemberInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interfaces = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces()
                            self.member_interfaces.parent = self


                        class MemberInterfaces(object):
                            """
                            QoS list of member interfaces
                            
                            .. attribute:: member_interface
                            
                            	QoS interface name
                            	**type**\: list of    :py:class:`MemberInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_interface = YList()
                                self.member_interface.parent = self
                                self.member_interface.name = 'member_interface'


                            class MemberInterface(object):
                                """
                                QoS interface name
                                
                                .. attribute:: interface_name  <key>
                                
                                	Memeber interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: details
                                
                                	QoS policy direction egress
                                	**type**\:   :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.details = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details()
                                    self.details.parent = self


                                class Details(object):
                                    """
                                    QoS policy direction egress
                                    
                                    .. attribute:: header
                                    
                                    	QoS policy header
                                    	**type**\:   :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header>`
                                    
                                    .. attribute:: policy
                                    
                                    	Trident QoS policy details
                                    	**type**\:   :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy>`
                                    
                                    .. attribute:: policy_typhoon
                                    
                                    	Typhoon QoS policy details
                                    	**type**\:   :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.header = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header()
                                        self.header.parent = self
                                        self.policy = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy()
                                        self.policy.parent = self
                                        self.policy_typhoon = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon()
                                        self.policy_typhoon.parent = self


                                    class Header(object):
                                        """
                                        QoS policy header
                                        
                                        .. attribute:: classes
                                        
                                        	Number of classes
                                        	**type**\:  int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: interface_parameters
                                        
                                        	Interface config and programmed parameters
                                        	**type**\:   :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters>`
                                        
                                        .. attribute:: policy_name
                                        
                                        	Policy name
                                        	**type**\:  str
                                        
                                        	**length:** 0..65
                                        
                                        .. attribute:: programmed_bandwidth
                                        
                                        	Bandwidth that was programmed
                                        	**type**\:   :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.classes = None
                                            self.interface_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters()
                                            self.interface_parameters.parent = self
                                            self.policy_name = None
                                            self.programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth()
                                            self.programmed_bandwidth.parent = self


                                        class InterfaceParameters(object):
                                            """
                                            Interface config and programmed parameters
                                            
                                            .. attribute:: ancp_config_bandwidth
                                            
                                            	Bandwidth obtain from IM
                                            	**type**\:   :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                            
                                            .. attribute:: ancp_programmed_bandwidth
                                            
                                            	ANCP bandwidth that was programmed
                                            	**type**\:   :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                            
                                            .. attribute:: port_config_bandwidth
                                            
                                            	Bandwidth due to port speed change
                                            	**type**\:   :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                            
                                            .. attribute:: port_shaper_rate
                                            
                                            	Bandwidth that was programmed
                                            	**type**\:   :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.ancp_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                                self.ancp_config_bandwidth.parent = self
                                                self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                                self.ancp_programmed_bandwidth.parent = self
                                                self.port_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                                self.port_config_bandwidth.parent = self
                                                self.port_shaper_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate()
                                                self.port_shaper_rate.parent = self


                                            class PortConfigBandwidth(object):
                                                """
                                                Bandwidth due to port speed change
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth']['meta_info']


                                            class AncpConfigBandwidth(object):
                                                """
                                                Bandwidth obtain from IM
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-config-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth']['meta_info']


                                            class AncpProgrammedBandwidth(object):
                                                """
                                                ANCP bandwidth that was programmed
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:ancp-programmed-bandwidth'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth']['meta_info']


                                            class PortShaperRate(object):
                                                """
                                                Bandwidth that was programmed
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.unit = None
                                                    self.value = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:port-shaper-rate'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.unit is not None:
                                                        return True

                                                    if self.value is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:interface-parameters'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.ancp_config_bandwidth is not None and self.ancp_config_bandwidth._has_data():
                                                    return True

                                                if self.ancp_programmed_bandwidth is not None and self.ancp_programmed_bandwidth._has_data():
                                                    return True

                                                if self.port_config_bandwidth is not None and self.port_config_bandwidth._has_data():
                                                    return True

                                                if self.port_shaper_rate is not None and self.port_shaper_rate._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters']['meta_info']


                                        class ProgrammedBandwidth(object):
                                            """
                                            Bandwidth that was programmed
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\:  int
                                            
                                            	**range:** 0..4294967295
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.unit = None
                                                self.value = None

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:programmed-bandwidth'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.unit is not None:
                                                    return True

                                                if self.value is not None:
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:header'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.classes is not None:
                                                return True

                                            if self.interface_parameters is not None and self.interface_parameters._has_data():
                                                return True

                                            if self.policy_name is not None:
                                                return True

                                            if self.programmed_bandwidth is not None and self.programmed_bandwidth._has_data():
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header']['meta_info']


                                    class Policy(object):
                                        """
                                        Trident QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v1
                                        
                                        	qos show ea st v1
                                        	**type**\: list of    :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.qos_show_ea_st_v1 = YList()
                                            self.qos_show_ea_st_v1.parent = self
                                            self.qos_show_ea_st_v1.name = 'qos_show_ea_st_v1'


                                        class QosShowEaStV1(object):
                                            """
                                            qos show ea st v1
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark>`
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police>`
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.class_level = None
                                                self.class_name = None
                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark()
                                                self.mark.parent = self
                                                self.parent_class_name = None
                                                self.parent_policy_name = None
                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police()
                                                self.police.parent = self
                                                self.policy_name = None
                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue()
                                                self.queue.parent = self
                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape()
                                                self.shape.parent = self
                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq()
                                                self.wfq.parent = self
                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred()
                                                self.wred.parent = self


                                            class Queue(object):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\:  str
                                                
                                                	**length:** 0..65
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.class_name = None
                                                    self.queue_id = None
                                                    self.queue_type = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.class_name is not None:
                                                        return True

                                                    if self.queue_id is not None:
                                                        return True

                                                    if self.queue_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue']['meta_info']


                                            class QueueLimitParameters(object):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self.profile_id = None
                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self.scaling_profile_id = None


                                                class QueueLimit(object):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit']['meta_info']


                                                class ConfigQueueLimit(object):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    if self.queue_limit is not None and self.queue_limit._has_data():
                                                        return True

                                                    if self.scaling_profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters']['meta_info']


                                            class Shape(object):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS in bytes
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR in kbps
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                                
                                                .. attribute:: config_bandwidth
                                                
                                                	Config bandwidth
                                                	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS in bytes
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR in kbps
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Shape profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir()
                                                    self.cir.parent = self
                                                    self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                                    self.config_bandwidth.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir()
                                                    self.pir.parent = self
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR in kbps
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir']['meta_info']


                                                class ConfigBandwidth(object):
                                                    """
                                                    Config bandwidth
                                                    
                                                    .. attribute:: minimum_rate
                                                    
                                                    	Minimum bandwidth rate
                                                    	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                        self.minimum_rate.parent = self


                                                    class MinimumRate(object):
                                                        """
                                                        Minimum bandwidth rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS in bytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR in kbps
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS in bytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape']['meta_info']


                                            class Police(object):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir()
                                                    self.cir.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir()
                                                    self.pir.parent = self
                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self.policer_type = None
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs']['meta_info']


                                                class PoliceConfigParameters(object):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self


                                                    class AverageRate(object):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                                    class PeakRate(object):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                                    class ConformBurst(object):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                                    class ExceedBurst(object):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.average_rate is not None and self.average_rate._has_data():
                                                            return True

                                                        if self.conform_burst is not None and self.conform_burst._has_data():
                                                            return True

                                                        if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                            return True

                                                        if self.peak_rate is not None and self.peak_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                        return True

                                                    if self.policer_type is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police']['meta_info']


                                            class Wfq(object):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self.chunk_id = None
                                                    self.committed_weight = None
                                                    self.excess_ratio = None
                                                    self.excess_weight = None
                                                    self.level = None
                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self.profile_id = None


                                                class ParentBandwidth(object):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth']['meta_info']


                                                class Bandwidth(object):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.bandwidth is not None and self.bandwidth._has_data():
                                                        return True

                                                    if self.chunk_id is not None:
                                                        return True

                                                    if self.committed_weight is not None:
                                                        return True

                                                    if self.excess_ratio is not None:
                                                        return True

                                                    if self.excess_weight is not None:
                                                        return True

                                                    if self.level is not None:
                                                        return True

                                                    if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq']['meta_info']


                                            class Wred(object):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: table_id
                                                
                                                	Table ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.curve = YList()
                                                    self.curve.parent = self
                                                    self.curve.name = 'curve'
                                                    self.curve_xr = None
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None
                                                    self.table_id = None
                                                    self.type = None


                                                class Curve(object):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.match = None
                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self


                                                    class MinThreshold(object):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold']['meta_info']


                                                    class MinThresholdUserConfig(object):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                                    class MaxThreshold(object):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold']['meta_info']


                                                    class MaxThresholdUserConfig(object):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.match is not None:
                                                            return True

                                                        if self.max_threshold is not None and self.max_threshold._has_data():
                                                            return True

                                                        if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                            return True

                                                        if self.min_threshold is not None and self.min_threshold._has_data():
                                                            return True

                                                        if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.curve is not None:
                                                        for child_ref in self.curve:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.curve_xr is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    if self.scaling_profile_id is not None:
                                                        return True

                                                    if self.table_id is not None:
                                                        return True

                                                    if self.type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred']['meta_info']


                                            class Mark(object):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                                    self.police_violate.parent = self


                                                class ChildMark(object):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark']['meta_info']


                                                class PoliceConform(object):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform']['meta_info']


                                                class PoliceExceed(object):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed']['meta_info']


                                                class PoliceViolate(object):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate']['meta_info']


                                                class ParentMark(object):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark']['meta_info']


                                                class ParentPoliceConform(object):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform']['meta_info']


                                                class ParentPoliceExceed(object):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed']['meta_info']


                                                class ParentPoliceViolate(object):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.child_mark is not None and self.child_mark._has_data():
                                                        return True

                                                    if self.parent_mark is not None and self.parent_mark._has_data():
                                                        return True

                                                    if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                        return True

                                                    if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                        return True

                                                    if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                        return True

                                                    if self.police_conform is not None and self.police_conform._has_data():
                                                        return True

                                                    if self.police_exceed is not None and self.police_exceed._has_data():
                                                        return True

                                                    if self.police_violate is not None and self.police_violate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v1'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.class_level is not None:
                                                    return True

                                                if self.class_name is not None:
                                                    return True

                                                if self.mark is not None and self.mark._has_data():
                                                    return True

                                                if self.parent_class_name is not None:
                                                    return True

                                                if self.parent_policy_name is not None:
                                                    return True

                                                if self.police is not None and self.police._has_data():
                                                    return True

                                                if self.policy_name is not None:
                                                    return True

                                                if self.queue is not None and self.queue._has_data():
                                                    return True

                                                if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                                    return True

                                                if self.shape is not None and self.shape._has_data():
                                                    return True

                                                if self.wfq is not None and self.wfq._has_data():
                                                    return True

                                                if self.wred is not None and self.wred._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.qos_show_ea_st_v1 is not None:
                                                for child_ref in self.qos_show_ea_st_v1:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy']['meta_info']


                                    class PolicyTyphoon(object):
                                        """
                                        Typhoon QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v2
                                        
                                        	qos show ea st v2
                                        	**type**\: list of    :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.qos_show_ea_st_v2 = YList()
                                            self.qos_show_ea_st_v2.parent = self
                                            self.qos_show_ea_st_v2.name = 'qos_show_ea_st_v2'


                                        class QosShowEaStV2(object):
                                            """
                                            qos show ea st v2
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\:  int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:   :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:   :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\:  str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:   :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:   :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:   :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:   :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:   :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                self.parent = None
                                                self.class_level = None
                                                self.class_name = None
                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                                self.mark.parent = self
                                                self.parent_class_name = None
                                                self.parent_policy_name = None
                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                                self.police.parent = self
                                                self.policy_name = None
                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                                self.queue.parent = self
                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                                self.shape.parent = self
                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                                self.wfq.parent = self
                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                                self.wred.parent = self


                                            class Queue(object):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\:  str
                                                
                                                	**length:** 0..65
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:   :py:class:`QueueEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QueueEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.class_name = None
                                                    self.queue_id = None
                                                    self.queue_type = None

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.class_name is not None:
                                                        return True

                                                    if self.queue_id is not None:
                                                        return True

                                                    if self.queue_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue']['meta_info']


                                            class QueueLimitParameters(object):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: absolute_index
                                                
                                                	Absolute Index
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:   :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: curve_id
                                                
                                                	Curve ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:   :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: template_id
                                                
                                                	Template ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.absolute_index = None
                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self.curve_id = None
                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self.template_id = None


                                                class QueueLimit(object):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit']['meta_info']


                                                class ConfigQueueLimit(object):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-queue-limit'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:queue-limit-parameters'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.absolute_index is not None:
                                                        return True

                                                    if self.config_queue_limit is not None and self.config_queue_limit._has_data():
                                                        return True

                                                    if self.curve_id is not None:
                                                        return True

                                                    if self.queue_limit is not None and self.queue_limit._has_data():
                                                        return True

                                                    if self.template_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters']['meta_info']


                                            class Shape(object):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir_shape
                                                
                                                	CIR shaper params
                                                	**type**\:   :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                                
                                                .. attribute:: cir_shape_type
                                                
                                                	CIR Shaper type
                                                	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                                
                                                .. attribute:: pir_shape
                                                
                                                	PIR shaper params
                                                	**type**\:   :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                                
                                                .. attribute:: pir_shape_type
                                                
                                                	PIR Shaper type
                                                	**type**\:   :py:class:`ShapeProfiletypeV2Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2Enum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                                    self.cir_shape.parent = self
                                                    self.cir_shape_type = None
                                                    self.pir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                                    self.pir_shape.parent = self
                                                    self.pir_shape_type = None


                                                class CirShape(object):
                                                    """
                                                    CIR shaper params
                                                    
                                                    .. attribute:: cbs
                                                    
                                                    	CBS in bytes
                                                    	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: cir
                                                    
                                                    	CIR in kbps
                                                    	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                                    
                                                    .. attribute:: config_bandwidth
                                                    
                                                    	Config bandwidth
                                                    	**type**\:   :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                        self.cbs.parent = self
                                                        self.chunk_id = None
                                                        self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                        self.cir.parent = self
                                                        self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                        self.config_bandwidth.parent = self
                                                        self.profile_id = None
                                                        self.scale_factor = None


                                                    class Cir(object):
                                                        """
                                                        CIR in kbps
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir']['meta_info']


                                                    class ConfigBandwidth(object):
                                                        """
                                                        Config bandwidth
                                                        
                                                        .. attribute:: minimum_rate
                                                        
                                                        	Minimum bandwidth rate
                                                        	**type**\:   :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                            self.minimum_rate.parent = self


                                                        class MinimumRate(object):
                                                            """
                                                            Minimum bandwidth rate
                                                            
                                                            .. attribute:: unit
                                                            
                                                            	Config unit
                                                            	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                            
                                                            .. attribute:: value
                                                            
                                                            	Config value
                                                            	**type**\:  int
                                                            
                                                            	**range:** 0..4294967295
                                                            
                                                            

                                                            """

                                                            _prefix = 'asr9k-qos-oper'
                                                            _revision = '2015-11-09'

                                                            def __init__(self):
                                                                self.parent = None
                                                                self.unit = None
                                                                self.value = None

                                                            @property
                                                            def _common_path(self):
                                                                if self.parent is None:
                                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:minimum-rate'

                                                            def is_config(self):
                                                                ''' Returns True if this instance represents config data else returns False '''
                                                                return False

                                                            def _has_data(self):
                                                                if not self.is_config():
                                                                    return False
                                                                if self.unit is not None:
                                                                    return True

                                                                if self.value is not None:
                                                                    return True

                                                                return False

                                                            @staticmethod
                                                            def _meta_info():
                                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate']['meta_info']

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:config-bandwidth'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.minimum_rate is not None and self.minimum_rate._has_data():
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth']['meta_info']


                                                    class Cbs(object):
                                                        """
                                                        CBS in bytes
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir-shape'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.cbs is not None and self.cbs._has_data():
                                                            return True

                                                        if self.chunk_id is not None:
                                                            return True

                                                        if self.cir is not None and self.cir._has_data():
                                                            return True

                                                        if self.config_bandwidth is not None and self.config_bandwidth._has_data():
                                                            return True

                                                        if self.profile_id is not None:
                                                            return True

                                                        if self.scale_factor is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape']['meta_info']


                                                class PirShape(object):
                                                    """
                                                    PIR shaper params
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: pbs
                                                    
                                                    	PBS in bytes
                                                    	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                                    
                                                    .. attribute:: pir
                                                    
                                                    	PIR in kbps
                                                    	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.chunk_id = None
                                                        self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                        self.pbs.parent = self
                                                        self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                        self.pir.parent = self
                                                        self.profile_id = None
                                                        self.scale_factor = None


                                                    class Pir(object):
                                                        """
                                                        PIR in kbps
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir']['meta_info']


                                                    class Pbs(object):
                                                        """
                                                        PBS in bytes
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir-shape'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.chunk_id is not None:
                                                            return True

                                                        if self.pbs is not None and self.pbs._has_data():
                                                            return True

                                                        if self.pir is not None and self.pir._has_data():
                                                            return True

                                                        if self.profile_id is not None:
                                                            return True

                                                        if self.scale_factor is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:shape'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cir_shape is not None and self.cir_shape._has_data():
                                                        return True

                                                    if self.cir_shape_type is not None:
                                                        return True

                                                    if self.pir_shape is not None and self.pir_shape._has_data():
                                                        return True

                                                    if self.pir_shape_type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape']['meta_info']


                                            class Police(object):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:   :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:   :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:   :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:   :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:   :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:   :py:class:`TbAlgorithmEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithmEnum>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                                    self.cir.parent = self
                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                                    self.pir.parent = self
                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self.policer_type = None
                                                    self.profile_id = None


                                                class Cir(object):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir']['meta_info']


                                                class Cbs(object):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:cbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs']['meta_info']


                                                class Pir(object):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pir'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir']['meta_info']


                                                class Pbs(object):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:pbs'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs']['meta_info']


                                                class PoliceConfigParameters(object):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:   :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:   :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:   :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:   :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self


                                                    class AverageRate(object):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:average-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate']['meta_info']


                                                    class PeakRate(object):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:peak-rate'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate']['meta_info']


                                                    class ConformBurst(object):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:conform-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst']['meta_info']


                                                    class ExceedBurst(object):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:exceed-burst'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-config-parameters'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.average_rate is not None and self.average_rate._has_data():
                                                            return True

                                                        if self.conform_burst is not None and self.conform_burst._has_data():
                                                            return True

                                                        if self.exceed_burst is not None and self.exceed_burst._has_data():
                                                            return True

                                                        if self.peak_rate is not None and self.peak_rate._has_data():
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.cbs is not None and self.cbs._has_data():
                                                        return True

                                                    if self.cir is not None and self.cir._has_data():
                                                        return True

                                                    if self.pbs is not None and self.pbs._has_data():
                                                        return True

                                                    if self.pir is not None and self.pir._has_data():
                                                        return True

                                                    if self.police_config_parameters is not None and self.police_config_parameters._has_data():
                                                        return True

                                                    if self.policer_type is not None:
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police']['meta_info']


                                            class Wfq(object):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:   :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\:  int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:   :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\:  int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self.chunk_id = None
                                                    self.committed_weight = None
                                                    self.excess_ratio = None
                                                    self.excess_weight = None
                                                    self.level = None
                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self.profile_id = None


                                                class ParentBandwidth(object):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth']['meta_info']


                                                class Bandwidth(object):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.unit = None
                                                        self.value = None

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bandwidth'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.unit is not None:
                                                            return True

                                                        if self.value is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wfq'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.bandwidth is not None and self.bandwidth._has_data():
                                                        return True

                                                    if self.chunk_id is not None:
                                                        return True

                                                    if self.committed_weight is not None:
                                                        return True

                                                    if self.excess_ratio is not None:
                                                        return True

                                                    if self.excess_weight is not None:
                                                        return True

                                                    if self.level is not None:
                                                        return True

                                                    if self.parent_bandwidth is not None and self.parent_bandwidth._has_data():
                                                        return True

                                                    if self.profile_id is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq']['meta_info']


                                            class Wred(object):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of    :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\:  int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:   :py:class:`WredEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.WredEnum>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.curve = YList()
                                                    self.curve.parent = self
                                                    self.curve.name = 'curve'
                                                    self.curve_xr = None
                                                    self.type = None


                                                class Curve(object):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: absolute_index
                                                    
                                                    	Absolute Index
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: curve_id
                                                    
                                                    	Curve ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: exp_match
                                                    
                                                    	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\:  str
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:   :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:   :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:   :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:   :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: template_id
                                                    
                                                    	Template ID
                                                    	**type**\:  int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.absolute_index = None
                                                        self.curve_id = None
                                                        self.exp_match = None
                                                        self.match = None
                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self.template_id = None


                                                    class MinThreshold(object):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold']['meta_info']


                                                    class MinThresholdUserConfig(object):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:min-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig']['meta_info']


                                                    class MaxThreshold(object):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold']['meta_info']


                                                    class MaxThresholdUserConfig(object):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:   :py:class:`QosUnitEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnitEnum>`
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.unit = None
                                                            self.value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:max-threshold-user-config'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.unit is not None:
                                                                return True

                                                            if self.value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:curve'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.absolute_index is not None:
                                                            return True

                                                        if self.curve_id is not None:
                                                            return True

                                                        if self.exp_match is not None:
                                                            return True

                                                        if self.match is not None:
                                                            return True

                                                        if self.max_threshold is not None and self.max_threshold._has_data():
                                                            return True

                                                        if self.max_threshold_user_config is not None and self.max_threshold_user_config._has_data():
                                                            return True

                                                        if self.min_threshold is not None and self.min_threshold._has_data():
                                                            return True

                                                        if self.min_threshold_user_config is not None and self.min_threshold_user_config._has_data():
                                                            return True

                                                        if self.template_id is not None:
                                                            return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:wred'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.curve is not None:
                                                        for child_ref in self.curve:
                                                            if child_ref._has_data():
                                                                return True

                                                    if self.curve_xr is not None:
                                                        return True

                                                    if self.type is not None:
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred']['meta_info']


                                            class Mark(object):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:   :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:   :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:   :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:   :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:   :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:   :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:   :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:   :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    self.parent = None
                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                                    self.police_violate.parent = self


                                                class ChildMark(object):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:child-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark']['meta_info']


                                                class PoliceConform(object):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform']['meta_info']


                                                class PoliceExceed(object):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed']['meta_info']


                                                class PoliceViolate(object):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate']['meta_info']


                                                class ParentMark(object):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-mark'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark']['meta_info']


                                                class ParentPoliceConform(object):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-conform'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform']['meta_info']


                                                class ParentPoliceExceed(object):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-exceed'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed']['meta_info']


                                                class ParentPoliceViolate(object):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:   :py:class:`ActionEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionEnum>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of    :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        self.parent = None
                                                        self.action_type = None
                                                        self.mark_detail = YList()
                                                        self.mark_detail.parent = self
                                                        self.mark_detail.name = 'mark_detail'


                                                    class MarkDetail(object):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:   :py:class:`ActionOpcodeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcodeEnum>`
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\:  int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            self.parent = None
                                                            self.action_opcode = None
                                                            self.mark_value = None

                                                        @property
                                                        def _common_path(self):
                                                            if self.parent is None:
                                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark-detail'

                                                        def is_config(self):
                                                            ''' Returns True if this instance represents config data else returns False '''
                                                            return False

                                                        def _has_data(self):
                                                            if not self.is_config():
                                                                return False
                                                            if self.action_opcode is not None:
                                                                return True

                                                            if self.mark_value is not None:
                                                                return True

                                                            return False

                                                        @staticmethod
                                                        def _meta_info():
                                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail']['meta_info']

                                                    @property
                                                    def _common_path(self):
                                                        if self.parent is None:
                                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:parent-police-violate'

                                                    def is_config(self):
                                                        ''' Returns True if this instance represents config data else returns False '''
                                                        return False

                                                    def _has_data(self):
                                                        if not self.is_config():
                                                            return False
                                                        if self.action_type is not None:
                                                            return True

                                                        if self.mark_detail is not None:
                                                            for child_ref in self.mark_detail:
                                                                if child_ref._has_data():
                                                                    return True

                                                        return False

                                                    @staticmethod
                                                    def _meta_info():
                                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate']['meta_info']

                                                @property
                                                def _common_path(self):
                                                    if self.parent is None:
                                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:mark'

                                                def is_config(self):
                                                    ''' Returns True if this instance represents config data else returns False '''
                                                    return False

                                                def _has_data(self):
                                                    if not self.is_config():
                                                        return False
                                                    if self.child_mark is not None and self.child_mark._has_data():
                                                        return True

                                                    if self.parent_mark is not None and self.parent_mark._has_data():
                                                        return True

                                                    if self.parent_police_conform is not None and self.parent_police_conform._has_data():
                                                        return True

                                                    if self.parent_police_exceed is not None and self.parent_police_exceed._has_data():
                                                        return True

                                                    if self.parent_police_violate is not None and self.parent_police_violate._has_data():
                                                        return True

                                                    if self.police_conform is not None and self.police_conform._has_data():
                                                        return True

                                                    if self.police_exceed is not None and self.police_exceed._has_data():
                                                        return True

                                                    if self.police_violate is not None and self.police_violate._has_data():
                                                        return True

                                                    return False

                                                @staticmethod
                                                def _meta_info():
                                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark']['meta_info']

                                            @property
                                            def _common_path(self):
                                                if self.parent is None:
                                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:qos-show-ea-st-v2'

                                            def is_config(self):
                                                ''' Returns True if this instance represents config data else returns False '''
                                                return False

                                            def _has_data(self):
                                                if not self.is_config():
                                                    return False
                                                if self.class_level is not None:
                                                    return True

                                                if self.class_name is not None:
                                                    return True

                                                if self.mark is not None and self.mark._has_data():
                                                    return True

                                                if self.parent_class_name is not None:
                                                    return True

                                                if self.parent_policy_name is not None:
                                                    return True

                                                if self.police is not None and self.police._has_data():
                                                    return True

                                                if self.policy_name is not None:
                                                    return True

                                                if self.queue is not None and self.queue._has_data():
                                                    return True

                                                if self.queue_limit_parameters is not None and self.queue_limit_parameters._has_data():
                                                    return True

                                                if self.shape is not None and self.shape._has_data():
                                                    return True

                                                if self.wfq is not None and self.wfq._has_data():
                                                    return True

                                                if self.wred is not None and self.wred._has_data():
                                                    return True

                                                return False

                                            @staticmethod
                                            def _meta_info():
                                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2']['meta_info']

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:policy-typhoon'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.qos_show_ea_st_v2 is not None:
                                                for child_ref in self.qos_show_ea_st_v2:
                                                    if child_ref._has_data():
                                                        return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:details'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.header is not None and self.header._has_data():
                                            return True

                                        if self.policy is not None and self.policy._has_data():
                                            return True

                                        if self.policy_typhoon is not None and self.policy_typhoon._has_data():
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')
                                    if self.interface_name is None:
                                        raise YPYModelError('Key property interface_name is None')

                                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:member-interface[Cisco-IOS-XR-asr9k-qos-oper:interface-name = ' + str(self.interface_name) + ']'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.details is not None and self.details._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:member-interfaces'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_interface is not None:
                                    for child_ref in self.member_interface:
                                        if child_ref._has_data():
                                            return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                                return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bundle-input'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interfaces is not None and self.member_interfaces._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                            return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bundle-interface[Cisco-IOS-XR-asr9k-qos-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.bundle_input is not None and self.bundle_input._has_data():
                            return True

                        if self.bundle_output is not None and self.bundle_output._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                        return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-asr9k-qos-oper:bundle-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        for child_ref in self.bundle_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                    return meta._meta_table['PlatformQos.Nodes.Node.BundleInterfaces']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-asr9k-qos-oper:platform-qos/Cisco-IOS-XR-asr9k-qos-oper:nodes/Cisco-IOS-XR-asr9k-qos-oper:node[Cisco-IOS-XR-asr9k-qos-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.bundle_interfaces is not None and self.bundle_interfaces._has_data():
                    return True

                if self.capability is not None and self.capability._has_data():
                    return True

                if self.interfaces is not None and self.interfaces._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
                return meta._meta_table['PlatformQos.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-asr9k-qos-oper:platform-qos/Cisco-IOS-XR-asr9k-qos-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
            return meta._meta_table['PlatformQos.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-asr9k-qos-oper:platform-qos'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_asr9k_qos_oper as meta
        return meta._meta_table['PlatformQos']['meta_info']


