""" Cisco_IOS_XR_ipv4_igmp_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR ipv4\-igmp package operational data.

This module contains definitions
for the following management objects\:
  mld\: MLD operational data
  igmp\: igmp

Copyright (c) 2013\-2016 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class IgmpAfiEnum(Enum):
    """
    IgmpAfiEnum

    Address family

    .. data:: ipv4_unicast = 0

    	IP v4 unicast

    .. data:: ipv6_unicast = 1

    	IP v6 unicast

    """

    ipv4_unicast = 0

    ipv6_unicast = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
        return meta._meta_table['IgmpAfiEnum']


class IgmpEdmProtocolEnum(Enum):
    """
    IgmpEdmProtocolEnum

    IGMP Protocol

    .. data:: no_route = 0

    	no route

    .. data:: sm = 1

    	sm

    .. data:: dm = 2

    	dm

    .. data:: bidir = 3

    	bidir

    .. data:: ssm = 4

    	ssm

    .. data:: any = 6

    	any

    """

    no_route = 0

    sm = 1

    dm = 2

    bidir = 3

    ssm = 4

    any = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
        return meta._meta_table['IgmpEdmProtocolEnum']


class IgmpssmMapEnum(Enum):
    """
    IgmpssmMapEnum

    Igmpssm map

    .. data:: static = 0

    	Static

    .. data:: dns = 1

    	Dns

    .. data:: all = 2

    	All

    """

    static = 0

    dns = 1

    all = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
        return meta._meta_table['IgmpssmMapEnum']



class Mld(object):
    """
    MLD operational data
    
    .. attribute:: active
    
    	Active Process
    	**type**\:   :py:class:`Active <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active>`
    
    .. attribute:: standby
    
    	Standby Process
    	**type**\:   :py:class:`Standby <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby>`
    
    

    """

    _prefix = 'ipv4-igmp-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.active = Mld.Active()
        self.active.parent = self
        self.standby = Mld.Standby()
        self.standby.parent = self


    class Standby(object):
        """
        Standby Process
        
        .. attribute:: default_context
        
        	Default Context
        	**type**\:   :py:class:`DefaultContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext>`
        
        .. attribute:: process
        
        	Process
        	**type**\:   :py:class:`Process <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process>`
        
        .. attribute:: vrfs
        
        	VRF Table
        	**type**\:   :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs>`
        
        

        """

        _prefix = 'ipv4-igmp-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.default_context = Mld.Standby.DefaultContext()
            self.default_context.parent = self
            self.process = Mld.Standby.Process()
            self.process.parent = self
            self.vrfs = Mld.Standby.Vrfs()
            self.vrfs.parent = self


        class Vrfs(object):
            """
            VRF Table
            
            .. attribute:: vrf
            
            	VRF table Names
            	**type**\: list of    :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf = YList()
                self.vrf.parent = self
                self.vrf.name = 'vrf'


            class Vrf(object):
                """
                VRF table Names
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**length:** 1..32
                
                .. attribute:: detail_groups
                
                	IGMP Detail Group Database
                	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups>`
                
                .. attribute:: explicit_groups
                
                	IGMP Explicit Group Database
                	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups>`
                
                .. attribute:: global_interface_table
                
                	IGMP Global Interface 
                	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable>`
                
                .. attribute:: group_summary
                
                	IGMP Groups Summary
                	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GroupSummary>`
                
                .. attribute:: groups
                
                	IGMP Group Database Table
                	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Groups>`
                
                .. attribute:: ifrs_interface_summary
                
                	IGMP IFRS Interface summary
                	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaceSummary>`
                
                .. attribute:: ifrs_interfaces
                
                	IGMP Interface specific
                	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces>`
                
                .. attribute:: interface_old_format_state_ons
                
                	IGMP Interface state on old format
                	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns>`
                
                .. attribute:: interface_old_formats
                
                	IGMP Interface specific Table in old format
                	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormats>`
                
                .. attribute:: interface_state_off_old_formats
                
                	IGMP Interface state off old format
                	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats>`
                
                .. attribute:: interface_state_offs
                
                	IGMP Interface state off
                	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffs>`
                
                .. attribute:: interface_state_ons
                
                	IGMP Interface state on
                	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOns>`
                
                .. attribute:: interface_table
                
                	IGMP Interface specific Table
                	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceTable>`
                
                .. attribute:: interface_unicast_qos_adjusts
                
                	IGMP Interface Unicast\-Qos\-Adjust
                	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts>`
                
                .. attribute:: non_active_groups
                
                	IGMP Non\-Active Groups Information
                	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.NonActiveGroups>`
                
                .. attribute:: ranges
                
                	Range table
                	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Ranges>`
                
                .. attribute:: ssm_map_details
                
                	SSM Map Detail
                	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMapDetails>`
                
                .. attribute:: ssm_maps
                
                	SSM Map Table
                	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMaps>`
                
                .. attribute:: summary
                
                	IGMP Summary Information
                	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Summary>`
                
                .. attribute:: traffic_counters
                
                	IGMP Message Traffic Counters
                	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.TrafficCounters>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.detail_groups = Mld.Standby.Vrfs.Vrf.DetailGroups()
                    self.detail_groups.parent = self
                    self.explicit_groups = Mld.Standby.Vrfs.Vrf.ExplicitGroups()
                    self.explicit_groups.parent = self
                    self.global_interface_table = Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable()
                    self.global_interface_table.parent = self
                    self.group_summary = Mld.Standby.Vrfs.Vrf.GroupSummary()
                    self.group_summary.parent = self
                    self.groups = Mld.Standby.Vrfs.Vrf.Groups()
                    self.groups.parent = self
                    self.ifrs_interface_summary = Mld.Standby.Vrfs.Vrf.IfrsInterfaceSummary()
                    self.ifrs_interface_summary.parent = self
                    self.ifrs_interfaces = Mld.Standby.Vrfs.Vrf.IfrsInterfaces()
                    self.ifrs_interfaces.parent = self
                    self.interface_old_format_state_ons = Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns()
                    self.interface_old_format_state_ons.parent = self
                    self.interface_old_formats = Mld.Standby.Vrfs.Vrf.InterfaceOldFormats()
                    self.interface_old_formats.parent = self
                    self.interface_state_off_old_formats = Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats()
                    self.interface_state_off_old_formats.parent = self
                    self.interface_state_offs = Mld.Standby.Vrfs.Vrf.InterfaceStateOffs()
                    self.interface_state_offs.parent = self
                    self.interface_state_ons = Mld.Standby.Vrfs.Vrf.InterfaceStateOns()
                    self.interface_state_ons.parent = self
                    self.interface_table = Mld.Standby.Vrfs.Vrf.InterfaceTable()
                    self.interface_table.parent = self
                    self.interface_unicast_qos_adjusts = Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts()
                    self.interface_unicast_qos_adjusts.parent = self
                    self.non_active_groups = Mld.Standby.Vrfs.Vrf.NonActiveGroups()
                    self.non_active_groups.parent = self
                    self.ranges = Mld.Standby.Vrfs.Vrf.Ranges()
                    self.ranges.parent = self
                    self.ssm_map_details = Mld.Standby.Vrfs.Vrf.SsmMapDetails()
                    self.ssm_map_details.parent = self
                    self.ssm_maps = Mld.Standby.Vrfs.Vrf.SsmMaps()
                    self.ssm_maps.parent = self
                    self.summary = Mld.Standby.Vrfs.Vrf.Summary()
                    self.summary.parent = self
                    self.traffic_counters = Mld.Standby.Vrfs.Vrf.TrafficCounters()
                    self.traffic_counters.parent = self


                class Summary(object):
                    """
                    IGMP Summary Information
                    
                    .. attribute:: disabled_interface_count
                    
                    	No. of disabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: enabled_interface_count
                    
                    	No. of enabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface
                    
                    	Maximum and current groups accepted for each interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Summary.Interface>`
                    
                    .. attribute:: is_disabled
                    
                    	Is maximum enforcement disabled
                    	**type**\:  bool
                    
                    .. attribute:: node_low_memory
                    
                    	Is node in low memory condition
                    	**type**\:  bool
                    
                    .. attribute:: robustness
                    
                    	Robustness variable
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: supported_interfaces
                    
                    	No. of supported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: tunnel_mte_config_count
                    
                    	No. of static group commands
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: unsupported_interfaces
                    
                    	No. of unsupported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.disabled_interface_count = None
                        self.enabled_interface_count = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'
                        self.is_disabled = None
                        self.node_low_memory = None
                        self.robustness = None
                        self.supported_interfaces = None
                        self.tunnel_mte_config_count = None
                        self.unsupported_interfaces = None


                    class Interface(object):
                        """
                        Maximum and current groups accepted for each
                        interface
                        
                        .. attribute:: group_count
                        
                        	Current groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_limit
                        
                        	Maximum groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: on_off
                        
                        	Enabled/Disabled
                        	**type**\:  bool
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent if handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Time elapsed since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_count = None
                            self.group_limit = None
                            self.interface_name = None
                            self.on_off = None
                            self.parent_ifhandle = None
                            self.router_uptime_in_seconds = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_count is not None:
                                return True

                            if self.group_limit is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.on_off is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.Summary.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.disabled_interface_count is not None:
                            return True

                        if self.enabled_interface_count is not None:
                            return True

                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        if self.is_disabled is not None:
                            return True

                        if self.node_low_memory is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.supported_interfaces is not None:
                            return True

                        if self.tunnel_mte_config_count is not None:
                            return True

                        if self.unsupported_interfaces is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.Summary']['meta_info']


                class InterfaceStateOns(object):
                    """
                    IGMP Interface state on
                    
                    .. attribute:: interface_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_on = YList()
                        self.interface_state_on.parent = self
                        self.interface_state_on.name = 'interface_state_on'


                    class InterfaceStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_on is not None:
                            for child_ref in self.interface_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOns']['meta_info']


                class DetailGroups(object):
                    """
                    IGMP Detail Group Database
                    
                    .. attribute:: detail_group
                    
                    	IGMP Detail Group Entry Information
                    	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.detail_group = YList()
                        self.detail_group.parent = self
                        self.detail_group.name = 'detail_group'


                    class DetailGroup(object):
                        """
                        IGMP Detail Group Entry Information
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_host_exclude_mode
                        
                        	Group host filter mode
                        	**type**\:  bool
                        
                        .. attribute:: is_router_exclude_mode
                        
                        	Group router filter mode
                        	**type**\:  bool
                        
                        .. attribute:: source
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source>`
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_info = Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo()
                            self.group_info.parent = self
                            self.interface_name = None
                            self.is_host_exclude_mode = None
                            self.is_router_exclude_mode = None
                            self.source = YList()
                            self.source.parent = self
                            self.source.name = 'source'
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                        class Source(object):
                            """
                            List of sources
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: flags
                            
                            	Source flags
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_forward
                            
                            	Should we forward on this entry
                            	**type**\:  bool
                            
                            .. attribute:: is_local
                            
                            	Is this a local source
                            	**type**\:  bool
                            
                            .. attribute:: is_remote
                            
                            	Is this a remote source
                            	**type**\:  bool
                            
                            .. attribute:: is_we_report
                            
                            	Should we report the source
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.flags = None
                                self.is_added = None
                                self.is_forward = None
                                self.is_local = None
                                self.is_remote = None
                                self.is_we_report = None
                                self.source_address = Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.flags is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_forward is not None:
                                    return True

                                if self.is_local is not None:
                                    return True

                                if self.is_remote is not None:
                                    return True

                                if self.is_we_report is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.is_host_exclude_mode is not None:
                                return True

                            if self.is_router_exclude_mode is not None:
                                return True

                            if self.source is not None:
                                for child_ref in self.source:
                                    if child_ref._has_data():
                                        return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups.DetailGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.detail_group is not None:
                            for child_ref in self.detail_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.DetailGroups']['meta_info']


                class NonActiveGroups(object):
                    """
                    IGMP Non\-Active Groups Information
                    
                    .. attribute:: non_active_groups
                    
                    	List of non\-active groups
                    	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.non_active_groups = YList()
                        self.non_active_groups.parent = self
                        self.non_active_groups.name = 'non_active_groups'


                    class NonActiveGroups_(object):
                        """
                        List of non\-active groups
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                        
                        .. attribute:: interface
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**length:** 0..65
                        
                        .. attribute:: reason_for_non_activity
                        
                        	Reason for group join not being processed
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress()
                            self.group_address.parent = self
                            self.interface = None
                            self.reason_for_non_activity = None
                            self.source_address = Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress()
                            self.source_address.parent = self


                        class GroupAddress(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.interface is not None:
                                return True

                            if self.reason_for_non_activity is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.non_active_groups is not None:
                            for child_ref in self.non_active_groups:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.NonActiveGroups']['meta_info']


                class SsmMaps(object):
                    """
                    SSM Map Table
                    
                    .. attribute:: ssm_map
                    
                    	SSM Map information
                    	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMaps.SsmMap>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map = YList()
                        self.ssm_map.parent = self
                        self.ssm_map.name = 'ssm_map'


                    class SsmMap(object):
                        """
                        SSM Map information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Mld.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None
                            self.ssm_map_type = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMaps.SsmMap']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map is not None:
                            for child_ref in self.ssm_map:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMaps']['meta_info']


                class ExplicitGroups(object):
                    """
                    IGMP Explicit Group Database
                    
                    .. attribute:: explicit_group
                    
                    	IGMP Explicit Group Entry Information
                    	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.explicit_group = YList()
                        self.explicit_group.parent = self
                        self.explicit_group.name = 'explicit_group'


                    class ExplicitGroup(object):
                        """
                        IGMP Explicit Group Entry Information
                        
                        .. attribute:: exclude_hosts
                        
                        	No. of hosts who are excluded
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo>`
                        
                        .. attribute:: host
                        
                        	List of hosts
                        	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host>`
                        
                        .. attribute:: include_hosts
                        
                        	No. of hosts who are included
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.exclude_hosts = None
                            self.group_address = None
                            self.group_info = Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo()
                            self.group_info.parent = self
                            self.host = YList()
                            self.host.parent = self
                            self.host.name = 'host'
                            self.include_hosts = None
                            self.interface_name = None
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                        class Host(object):
                            """
                            List of hosts
                            
                            .. attribute:: address
                            
                            	Host Address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address>`
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            .. attribute:: is_exclude
                            
                            	Exclude flag set
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	First 3 source addresses
                            	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                            
                            .. attribute:: source_count
                            
                            	No. of sources in entry
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address()
                                self.address.parent = self
                                self.expiration_time = None
                                self.is_exclude = None
                                self.source_address = YList()
                                self.source_address.parent = self
                                self.source_address.name = 'source_address'
                                self.source_count = None
                                self.uptime = None


                            class Address(object):
                                """
                                Host Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                            class SourceAddress(object):
                                """
                                First 3 source addresses
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:host'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.expiration_time is not None:
                                    return True

                                if self.is_exclude is not None:
                                    return True

                                if self.source_address is not None:
                                    for child_ref in self.source_address:
                                        if child_ref._has_data():
                                            return True

                                if self.source_count is not None:
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.exclude_hosts is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.host is not None:
                                for child_ref in self.host:
                                    if child_ref._has_data():
                                        return True

                            if self.include_hosts is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.explicit_group is not None:
                            for child_ref in self.explicit_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.ExplicitGroups']['meta_info']


                class InterfaceTable(object):
                    """
                    IGMP Interface specific Table
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceTable']['meta_info']


                class InterfaceOldFormats(object):
                    """
                    IGMP Interface specific Table in old format
                    
                    .. attribute:: interface_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format = YList()
                        self.interface_old_format.parent = self
                        self.interface_old_format.name = 'interface_old_format'


                    class InterfaceOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format is not None:
                            for child_ref in self.interface_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormats']['meta_info']


                class InterfaceStateOffOldFormats(object):
                    """
                    IGMP Interface state off old format
                    
                    .. attribute:: interface_state_off_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off_old_format = YList()
                        self.interface_state_off_old_format.parent = self
                        self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                    class InterfaceStateOffOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off_old_format is not None:
                            for child_ref in self.interface_state_off_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats']['meta_info']


                class InterfaceUnicastQosAdjusts(object):
                    """
                    IGMP Interface Unicast\-Qos\-Adjust
                    
                    .. attribute:: interface_unicast_qos_adjust
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_unicast_qos_adjust = YList()
                        self.interface_unicast_qos_adjust.parent = self
                        self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                    class InterfaceUnicastQosAdjust(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_virtual_access
                        
                        	Is VirtualAccess Interface
                        	**type**\:  bool
                        
                        .. attribute:: rate
                        
                        	Overall rate in Kbps
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: rate_decrements
                        
                        	Count of rate decrements
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rate_increments
                        
                        	Count of rate increments
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: update
                        
                        	List of updates
                        	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_virtual_access = None
                            self.rate = None
                            self.rate_decrements = None
                            self.rate_increments = None
                            self.update = YList()
                            self.update.parent = self
                            self.update.name = 'update'


                        class Update(object):
                            """
                            List of updates
                            
                            .. attribute:: group_address
                            
                            	Group address
                            	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                            
                            .. attribute:: is_add
                            
                            	Is this a rate increment
                            	**type**\:  bool
                            
                            .. attribute:: received_time
                            
                            	Time this update is received
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: source_address
                            
                            	Source address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                            
                            .. attribute:: weight
                            
                            	Weight from policy
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address = Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                                self.group_address.parent = self
                                self.is_add = None
                                self.received_time = None
                                self.source_address = Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                                self.source_address.parent = self
                                self.weight = None


                            class SourceAddress(object):
                                """
                                Source address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                            class GroupAddress(object):
                                """
                                Group address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address is not None and self.group_address._has_data():
                                    return True

                                if self.is_add is not None:
                                    return True

                                if self.received_time is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.weight is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.is_virtual_access is not None:
                                return True

                            if self.rate is not None:
                                return True

                            if self.rate_decrements is not None:
                                return True

                            if self.rate_increments is not None:
                                return True

                            if self.update is not None:
                                for child_ref in self.update:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_unicast_qos_adjust is not None:
                            for child_ref in self.interface_unicast_qos_adjust:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts']['meta_info']


                class Ranges(object):
                    """
                    Range table
                    
                    .. attribute:: range
                    
                    	Range information
                    	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Ranges.Range>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.range = YList()
                        self.range.parent = self
                        self.range.name = 'range'


                    class Range(object):
                        """
                        Range information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr>`
                        
                        .. attribute:: group_mask
                        
                        	Group Mask
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_stale
                        
                        	Is the entry stale
                        	**type**\:  bool
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: protocol
                        
                        	Protocol
                        	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Mld.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.group_mask = None
                            self.is_stale = None
                            self.prefix_length = None
                            self.protocol = None


                        class GroupAddressXr(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:range'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.group_mask is not None:
                                return True

                            if self.is_stale is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.protocol is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.Ranges.Range']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.range is not None:
                            for child_ref in self.range:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.Ranges']['meta_info']


                class IfrsInterfaces(object):
                    """
                    IGMP Interface specific
                    
                    .. attribute:: ifrs_interface
                    
                    	IGMP IFRS Interface
                    	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ifrs_interface = YList()
                        self.ifrs_interface.parent = self
                        self.ifrs_interface.name = 'ifrs_interface'


                    class IfrsInterface(object):
                        """
                        IGMP IFRS Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	IFRS Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: igmp_interface_entry
                        
                        	IGMP interface entry
                        	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                        
                        .. attribute:: join_group_count
                        
                        	Join group count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.igmp_interface_entry = Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                            self.igmp_interface_entry.parent = self
                            self.join_group_count = None


                        class IgmpInterfaceEntry(object):
                            """
                            IGMP interface entry
                            
                            .. attribute:: address
                            
                            	IP address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                            
                            .. attribute:: configuration_mcast_vrf_error
                            
                            	Is mcast error
                            	**type**\:  bool
                            
                            .. attribute:: configuration_mcast_vrf_set
                            
                            	Is mcast set
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_error
                            
                            	CFG vrf error
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_set
                            
                            	CFG vrf set
                            	**type**\:  bool
                            
                            .. attribute:: group_joins
                            
                            	No. of group joins
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: group_leaves
                            
                            	No. of group leaves
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: host_version
                            
                            	IGMP Host version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: igmp_version
                            
                            	IGMP Router version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_configurationverify
                            
                            	CFG verify
                            	**type**\:  bool
                            
                            .. attribute:: is_identity_present
                            
                            	Subscriber ID or Address available from AAA
                            	**type**\:  bool
                            
                            .. attribute:: is_im_state_registered
                            
                            	Im state registered
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_up
                            
                            	Is interface up
                            	**type**\:  bool
                            
                            .. attribute:: is_ip_enabled
                            
                            	Is IP enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_las_registered
                            
                            	LAS registered
                            	**type**\:  bool
                            
                            .. attribute:: is_las_request
                            
                            	LAS req
                            	**type**\:  bool
                            
                            .. attribute:: is_querier
                            
                            	Are we querier
                            	**type**\:  bool
                            
                            .. attribute:: is_router_enabled
                            
                            	Is Router functionality enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_subscriber
                            
                            	Subscriber interface
                            	**type**\:  bool
                            
                            .. attribute:: las_get_address_count
                            
                            	LAS get addr count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_add_update_count
                            
                            	LAS LL add update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_registration_count
                            
                            	LAS reg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_remove_update_count
                            
                            	LAS LL remove update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_null_update_count
                            
                            	LAS Null update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_unregistration_count
                            
                            	LAS unreg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_update_count
                            
                            	LAS Update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_member_query_interval
                            
                            	Last Member Query Interval
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: location
                            
                            	Location
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_tuple_count
                            
                            	MTE Tuple count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_vrf_id
                            
                            	MTE VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mtu
                            
                            	MTU
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: parent_ifhandle
                            
                            	Parent If Handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: proxy_interface
                            
                            	Proxy interface index
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: querier_address
                            
                            	Address of the Querier
                            	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                            
                            .. attribute:: querier_uptime
                            
                            	Time since the last querier took over
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_interval
                            
                            	Query Interval value in seconds
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: query_maximum_response_time
                            
                            	Max Response Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_timeout
                            
                            	Query Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: robustness
                            
                            	Robustness Variable value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_uptime_in_seconds
                            
                            	Uptime since router enabled event
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state
                            
                            	Interface state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: subscriber_address
                            
                            	Address of subscriber
                            	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                            
                            .. attribute:: subscriber_id
                            
                            	ID string of subscriber
                            	**type**\:  str
                            
                            	**length:** 0..257
                            
                            .. attribute:: subscriber_mode
                            
                            	Subscriber mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_query_in_seconds
                            
                            	Time elapsed since last query
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_report_in_seconds
                            
                            	Time elapsed since last report
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_active_groups
                            
                            	Actual number of groups on interface
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_id
                            
                            	VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_state
                            
                            	Vrf State
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                                self.address.parent = self
                                self.configuration_mcast_vrf_error = None
                                self.configuration_mcast_vrf_set = None
                                self.configurationvrf_error = None
                                self.configurationvrf_set = None
                                self.group_joins = None
                                self.group_leaves = None
                                self.host_version = None
                                self.igmp_version = None
                                self.interface_name_xr = None
                                self.is_configurationverify = None
                                self.is_identity_present = None
                                self.is_im_state_registered = None
                                self.is_interface_up = None
                                self.is_ip_enabled = None
                                self.is_las_registered = None
                                self.is_las_request = None
                                self.is_querier = None
                                self.is_router_enabled = None
                                self.is_subscriber = None
                                self.las_get_address_count = None
                                self.las_ll_add_update_count = None
                                self.las_ll_registration_count = None
                                self.las_ll_remove_update_count = None
                                self.las_null_update_count = None
                                self.las_unregistration_count = None
                                self.las_update_count = None
                                self.last_member_query_interval = None
                                self.location = None
                                self.mte_tuple_count = None
                                self.mte_vrf_id = None
                                self.mtu = None
                                self.parent_ifhandle = None
                                self.prefix_length = None
                                self.proxy_interface = None
                                self.querier_address = Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                                self.querier_address.parent = self
                                self.querier_uptime = None
                                self.query_interval = None
                                self.query_maximum_response_time = None
                                self.query_timeout = None
                                self.robustness = None
                                self.router_uptime_in_seconds = None
                                self.state = None
                                self.subscriber_address = Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                                self.subscriber_address.parent = self
                                self.subscriber_id = None
                                self.subscriber_mode = None
                                self.time_since_last_query_in_seconds = None
                                self.time_since_last_report_in_seconds = None
                                self.total_active_groups = None
                                self.vrf_id = None
                                self.vrf_state = None


                            class Address(object):
                                """
                                IP address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                            class QuerierAddress(object):
                                """
                                Address of the Querier
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                            class SubscriberAddress(object):
                                """
                                Address of subscriber
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.configuration_mcast_vrf_error is not None:
                                    return True

                                if self.configuration_mcast_vrf_set is not None:
                                    return True

                                if self.configurationvrf_error is not None:
                                    return True

                                if self.configurationvrf_set is not None:
                                    return True

                                if self.group_joins is not None:
                                    return True

                                if self.group_leaves is not None:
                                    return True

                                if self.host_version is not None:
                                    return True

                                if self.igmp_version is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_configurationverify is not None:
                                    return True

                                if self.is_identity_present is not None:
                                    return True

                                if self.is_im_state_registered is not None:
                                    return True

                                if self.is_interface_up is not None:
                                    return True

                                if self.is_ip_enabled is not None:
                                    return True

                                if self.is_las_registered is not None:
                                    return True

                                if self.is_las_request is not None:
                                    return True

                                if self.is_querier is not None:
                                    return True

                                if self.is_router_enabled is not None:
                                    return True

                                if self.is_subscriber is not None:
                                    return True

                                if self.las_get_address_count is not None:
                                    return True

                                if self.las_ll_add_update_count is not None:
                                    return True

                                if self.las_ll_registration_count is not None:
                                    return True

                                if self.las_ll_remove_update_count is not None:
                                    return True

                                if self.las_null_update_count is not None:
                                    return True

                                if self.las_unregistration_count is not None:
                                    return True

                                if self.las_update_count is not None:
                                    return True

                                if self.last_member_query_interval is not None:
                                    return True

                                if self.location is not None:
                                    return True

                                if self.mte_tuple_count is not None:
                                    return True

                                if self.mte_vrf_id is not None:
                                    return True

                                if self.mtu is not None:
                                    return True

                                if self.parent_ifhandle is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.proxy_interface is not None:
                                    return True

                                if self.querier_address is not None and self.querier_address._has_data():
                                    return True

                                if self.querier_uptime is not None:
                                    return True

                                if self.query_interval is not None:
                                    return True

                                if self.query_maximum_response_time is not None:
                                    return True

                                if self.query_timeout is not None:
                                    return True

                                if self.robustness is not None:
                                    return True

                                if self.router_uptime_in_seconds is not None:
                                    return True

                                if self.state is not None:
                                    return True

                                if self.subscriber_address is not None and self.subscriber_address._has_data():
                                    return True

                                if self.subscriber_id is not None:
                                    return True

                                if self.subscriber_mode is not None:
                                    return True

                                if self.time_since_last_query_in_seconds is not None:
                                    return True

                                if self.time_since_last_report_in_seconds is not None:
                                    return True

                                if self.total_active_groups is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                if self.vrf_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                                return True

                            if self.join_group_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ifrs_interface is not None:
                            for child_ref in self.ifrs_interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaces']['meta_info']


                class TrafficCounters(object):
                    """
                    IGMP Message Traffic Counters
                    
                    .. attribute:: auxillary_data_length_errors
                    
                    	AuxDataLen errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: bad_scope_errors
                    
                    	BadScope errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: checksum_errors
                    
                    	Checksum errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: elapsed_time
                    
                    	Running time for counters
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: format_errors
                    
                    	Malformed packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: get_packet_failure
                    
                    	Packet get failed
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_disabled_idb
                    
                    	Packet received on disabled idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_dvmrp
                    
                    	DVMRP packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_leaves
                    
                    	Leaves in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_martian_address
                    
                    	Packets received with Martian Address
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_mtrace
                    
                    	Mtrace packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_assigned_vrf_id
                    
                    	Packets received with no assigned vrf id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_idb
                    
                    	Packets received without idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_platform_support_mtrace
                    
                    	mtrace packets without platform support
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_in_idb
                    
                    	Packets received on idb without VRF
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_mtrace
                    
                    	mtrace packets with no vrf associated
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_pim
                    
                    	PIM packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_queries
                    
                    	Query packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_reports
                    
                    	Reports in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: invalid_source_address_errors
                    
                    	Invalid Source Address errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: miscellaneous_errors
                    
                    	Packets dropped for other reasons
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: no_socket_connection
                    
                    	Packets dropped since no socket connection
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_dvmrp
                    
                    	DVMRP packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_leaves
                    
                    	Leaves out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_mtrace
                    
                    	Mtrace packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_no_parent_interface_handle
                    
                    	Failures setting 2nd ifhandle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_pim
                    
                    	PIM packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_queries
                    
                    	Query packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_reports
                    
                    	Reports out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_input_errors
                    
                    	Incoming Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_output_errors
                    
                    	Outgoing Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_in
                    
                    	Packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_out
                    
                    	Packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: receive_socket_errors
                    
                    	Socket errors on reception
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: socket_errors
                    
                    	Socket errors on send
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.auxillary_data_length_errors = None
                        self.bad_scope_errors = None
                        self.checksum_errors = None
                        self.elapsed_time = None
                        self.format_errors = None
                        self.get_packet_failure = None
                        self.input_disabled_idb = None
                        self.input_dvmrp = None
                        self.input_leaves = None
                        self.input_martian_address = None
                        self.input_mtrace = None
                        self.input_no_assigned_vrf_id = None
                        self.input_no_idb = None
                        self.input_no_platform_support_mtrace = None
                        self.input_no_vrf_in_idb = None
                        self.input_no_vrf_mtrace = None
                        self.input_pim = None
                        self.input_queries = None
                        self.input_reports = None
                        self.invalid_source_address_errors = None
                        self.miscellaneous_errors = None
                        self.no_socket_connection = None
                        self.output_dvmrp = None
                        self.output_leaves = None
                        self.output_mtrace = None
                        self.output_no_parent_interface_handle = None
                        self.output_pim = None
                        self.output_queries = None
                        self.output_reports = None
                        self.packet_manager_input_errors = None
                        self.packet_manager_output_errors = None
                        self.packets_in = None
                        self.packets_out = None
                        self.receive_socket_errors = None
                        self.socket_errors = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.auxillary_data_length_errors is not None:
                            return True

                        if self.bad_scope_errors is not None:
                            return True

                        if self.checksum_errors is not None:
                            return True

                        if self.elapsed_time is not None:
                            return True

                        if self.format_errors is not None:
                            return True

                        if self.get_packet_failure is not None:
                            return True

                        if self.input_disabled_idb is not None:
                            return True

                        if self.input_dvmrp is not None:
                            return True

                        if self.input_leaves is not None:
                            return True

                        if self.input_martian_address is not None:
                            return True

                        if self.input_mtrace is not None:
                            return True

                        if self.input_no_assigned_vrf_id is not None:
                            return True

                        if self.input_no_idb is not None:
                            return True

                        if self.input_no_platform_support_mtrace is not None:
                            return True

                        if self.input_no_vrf_in_idb is not None:
                            return True

                        if self.input_no_vrf_mtrace is not None:
                            return True

                        if self.input_pim is not None:
                            return True

                        if self.input_queries is not None:
                            return True

                        if self.input_reports is not None:
                            return True

                        if self.invalid_source_address_errors is not None:
                            return True

                        if self.miscellaneous_errors is not None:
                            return True

                        if self.no_socket_connection is not None:
                            return True

                        if self.output_dvmrp is not None:
                            return True

                        if self.output_leaves is not None:
                            return True

                        if self.output_mtrace is not None:
                            return True

                        if self.output_no_parent_interface_handle is not None:
                            return True

                        if self.output_pim is not None:
                            return True

                        if self.output_queries is not None:
                            return True

                        if self.output_reports is not None:
                            return True

                        if self.packet_manager_input_errors is not None:
                            return True

                        if self.packet_manager_output_errors is not None:
                            return True

                        if self.packets_in is not None:
                            return True

                        if self.packets_out is not None:
                            return True

                        if self.receive_socket_errors is not None:
                            return True

                        if self.socket_errors is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.TrafficCounters']['meta_info']


                class Groups(object):
                    """
                    IGMP Group Database Table
                    
                    .. attribute:: group
                    
                    	IGMP Group Entry Information
                    	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Groups.Group>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group = YList()
                        self.group.parent = self
                        self.group.name = 'group'


                    class Group(object):
                        """
                        IGMP Group Entry Information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Groups.Group.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.Groups.Group.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address = None
                            self.group_address_xr = Mld.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name = None
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Standby.Vrfs.Vrf.Groups.Group.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Standby.Vrfs.Vrf.Groups.Group.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.Groups.Group.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.Groups.Group.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.Groups.Group']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group is not None:
                            for child_ref in self.group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.Groups']['meta_info']


                class GroupSummary(object):
                    """
                    IGMP Groups Summary
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: groutes
                    
                    	No. of (\*,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: sg_routes
                    
                    	No. of (S,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.groutes = None
                        self.is_low_memory = None
                        self.sg_routes = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.groutes is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.sg_routes is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.GroupSummary']['meta_info']


                class IfrsInterfaceSummary(object):
                    """
                    IGMP IFRS Interface summary
                    
                    .. attribute:: configuration_count
                    
                    	Configuration count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_count
                    
                    	Interface Count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.configuration_count = None
                        self.interface_count = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.configuration_count is not None:
                            return True

                        if self.interface_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.IfrsInterfaceSummary']['meta_info']


                class GlobalInterfaceTable(object):
                    """
                    IGMP Global Interface 
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.GlobalInterfaceTable']['meta_info']


                class SsmMapDetails(object):
                    """
                    SSM Map Detail
                    
                    .. attribute:: ssm_map_detail
                    
                    	SSM Map Detail Table information
                    	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map_detail = YList()
                        self.ssm_map_detail.parent = self
                        self.ssm_map_detail.name = 'ssm_map_detail'


                    class SsmMapDetail(object):
                        """
                        SSM Map Detail Table information
                        
                        .. attribute:: elapsed_time
                        
                        	Elapsed time
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: expiration_time
                        
                        	Expiration Time in Seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: map_info
                        
                        	Basic Map Info
                        	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo>`
                        
                        .. attribute:: query_interval
                        
                        	Query interval
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: response_pending
                        
                        	Response Pending
                        	**type**\:  bool
                        
                        .. attribute:: sources
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources>`
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.elapsed_time = None
                            self.expiration_time = None
                            self.group_address = None
                            self.map_info = Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo()
                            self.map_info.parent = self
                            self.query_interval = None
                            self.response_pending = None
                            self.sources = YList()
                            self.sources.parent = self
                            self.sources.name = 'sources'
                            self.ssm_map_type = None


                        class MapInfo(object):
                            """
                            Basic Map Info
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                            
                            .. attribute:: map_type
                            
                            	Map Type of group
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_counts
                            
                            	Count of Sources
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address_xr = Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.map_type = None
                                self.source_counts = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.map_type is not None:
                                    return True

                                if self.source_counts is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                        class Sources(object):
                            """
                            List of sources
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.elapsed_time is not None:
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.map_info is not None and self.map_info._has_data():
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.response_pending is not None:
                                return True

                            if self.sources is not None:
                                for child_ref in self.sources:
                                    if child_ref._has_data():
                                        return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map_detail is not None:
                            for child_ref in self.ssm_map_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.SsmMapDetails']['meta_info']


                class InterfaceStateOffs(object):
                    """
                    IGMP Interface state off
                    
                    .. attribute:: interface_state_off
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off = YList()
                        self.interface_state_off.parent = self
                        self.interface_state_off.name = 'interface_state_off'


                    class InterfaceStateOff(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off is not None:
                            for child_ref in self.interface_state_off:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceStateOffs']['meta_info']


                class InterfaceOldFormatStateOns(object):
                    """
                    IGMP Interface state on old format
                    
                    .. attribute:: interface_old_format_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format_state_on = YList()
                        self.interface_old_format_state_on.parent = self
                        self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                    class InterfaceOldFormatStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format_state_on is not None:
                            for child_ref in self.interface_old_format_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns']['meta_info']

                @property
                def _common_path(self):
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:vrfs/Cisco-IOS-XR-ipv4-igmp-oper:vrf[Cisco-IOS-XR-ipv4-igmp-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.vrf_name is not None:
                        return True

                    if self.detail_groups is not None and self.detail_groups._has_data():
                        return True

                    if self.explicit_groups is not None and self.explicit_groups._has_data():
                        return True

                    if self.global_interface_table is not None and self.global_interface_table._has_data():
                        return True

                    if self.group_summary is not None and self.group_summary._has_data():
                        return True

                    if self.groups is not None and self.groups._has_data():
                        return True

                    if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                        return True

                    if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                        return True

                    if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                        return True

                    if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                        return True

                    if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                        return True

                    if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                        return True

                    if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                        return True

                    if self.interface_table is not None and self.interface_table._has_data():
                        return True

                    if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                        return True

                    if self.non_active_groups is not None and self.non_active_groups._has_data():
                        return True

                    if self.ranges is not None and self.ranges._has_data():
                        return True

                    if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                        return True

                    if self.ssm_maps is not None and self.ssm_maps._has_data():
                        return True

                    if self.summary is not None and self.summary._has_data():
                        return True

                    if self.traffic_counters is not None and self.traffic_counters._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Vrfs.Vrf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.vrf is not None:
                    for child_ref in self.vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Standby.Vrfs']['meta_info']


        class Process(object):
            """
            Process
            
            .. attribute:: amt_gatewaies
            
            	Table containing AMT Gateway DataBase information
            	**type**\:   :py:class:`AmtGatewaies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.AmtGatewaies>`
            
            .. attribute:: amt_summary
            
            	MRIB RouteDB Expiry Information
            	**type**\:   :py:class:`AmtSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.AmtSummary>`
            
            .. attribute:: bvi_statistics
            
            	IGMP BVI Stats
            	**type**\:   :py:class:`BviStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.BviStatistics>`
            
            .. attribute:: nsf
            
            	NSF Information
            	**type**\:   :py:class:`Nsf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.Nsf>`
            
            .. attribute:: nsr
            
            	NSR Information
            	**type**\:   :py:class:`Nsr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.Nsr>`
            
            .. attribute:: unicast_qos_adjust_stats
            
            	IGMP Unicast\-Qos\-Adjust Statistics
            	**type**\:   :py:class:`UnicastQosAdjustStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.UnicastQosAdjustStats>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.amt_gatewaies = Mld.Standby.Process.AmtGatewaies()
                self.amt_gatewaies.parent = self
                self.amt_summary = Mld.Standby.Process.AmtSummary()
                self.amt_summary.parent = self
                self.bvi_statistics = Mld.Standby.Process.BviStatistics()
                self.bvi_statistics.parent = self
                self.nsf = Mld.Standby.Process.Nsf()
                self.nsf.parent = self
                self.nsr = Mld.Standby.Process.Nsr()
                self.nsr.parent = self
                self.unicast_qos_adjust_stats = Mld.Standby.Process.UnicastQosAdjustStats()
                self.unicast_qos_adjust_stats.parent = self


            class AmtSummary(object):
                """
                MRIB RouteDB Expiry Information
                
                .. attribute:: anycast_prefix
                
                	Robustness variable
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: gateway_count
                
                	Number of AMT Gateway
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_acl_configured
                
                	ACL configured under AMT
                	**type**\:  bool
                
                .. attribute:: is_gateway_simulation
                
                	AMT Gateway Simulation
                	**type**\:  bool
                
                .. attribute:: is_ou_of_resource
                
                	AMT Out Of Resource
                	**type**\:  bool
                
                .. attribute:: max_gateway
                
                	Maximum Gateway allowed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mtu
                
                	AMT Tunnel MTU
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: prefix_length
                
                	Advertize AMT prefix length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: query_interval
                
                	AMT Query interval
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: relay_address
                
                	Advertaisment for AMT Relay address
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: tos
                
                	Type Of Service value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ttl
                
                	Time To Live value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_configured_maximum
                
                	AMT Tunnel configured Maximum
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_count
                
                	AMT Tunnel Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.anycast_prefix = None
                    self.gateway_count = None
                    self.is_acl_configured = None
                    self.is_gateway_simulation = None
                    self.is_ou_of_resource = None
                    self.max_gateway = None
                    self.mtu = None
                    self.prefix_length = None
                    self.query_interval = None
                    self.relay_address = None
                    self.tos = None
                    self.ttl = None
                    self.tunnel_configured_maximum = None
                    self.tunnel_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.anycast_prefix is not None:
                        return True

                    if self.gateway_count is not None:
                        return True

                    if self.is_acl_configured is not None:
                        return True

                    if self.is_gateway_simulation is not None:
                        return True

                    if self.is_ou_of_resource is not None:
                        return True

                    if self.max_gateway is not None:
                        return True

                    if self.mtu is not None:
                        return True

                    if self.prefix_length is not None:
                        return True

                    if self.query_interval is not None:
                        return True

                    if self.relay_address is not None:
                        return True

                    if self.tos is not None:
                        return True

                    if self.ttl is not None:
                        return True

                    if self.tunnel_configured_maximum is not None:
                        return True

                    if self.tunnel_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.AmtSummary']['meta_info']


            class Nsr(object):
                """
                NSR Information
                
                .. attribute:: collab_conv_done
                
                	Collaborators convergence done
                	**type**\:  bool
                
                .. attribute:: count_proc_connection_dn
                
                	No. of times process connection went down
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_proc_connection_up
                
                	No. of times process connection went up
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_not_ready
                
                	No. of times RMF Not Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_ready
                
                	No. of times RMF Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_proc
                
                	Time when process came up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_dn
                
                	Time when process connection went down
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_up
                
                	Time when process connection went up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_not_ready
                
                	Time when RMF Not\-Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_ready
                
                	Time when RMF Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: partner_proc_connected
                
                	Partner process connected
                	**type**\:  bool
                
                .. attribute:: rmf_notification_done
                
                	RMF Notification done
                	**type**\:  bool
                
                .. attribute:: state
                
                	NSR state
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.collab_conv_done = None
                    self.count_proc_connection_dn = None
                    self.count_proc_connection_up = None
                    self.count_rmf_not_ready = None
                    self.count_rmf_ready = None
                    self.last_proc = None
                    self.last_proc_connection_dn = None
                    self.last_proc_connection_up = None
                    self.last_rmf_not_ready = None
                    self.last_rmf_ready = None
                    self.partner_proc_connected = None
                    self.rmf_notification_done = None
                    self.state = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsr'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.collab_conv_done is not None:
                        return True

                    if self.count_proc_connection_dn is not None:
                        return True

                    if self.count_proc_connection_up is not None:
                        return True

                    if self.count_rmf_not_ready is not None:
                        return True

                    if self.count_rmf_ready is not None:
                        return True

                    if self.last_proc is not None:
                        return True

                    if self.last_proc_connection_dn is not None:
                        return True

                    if self.last_proc_connection_up is not None:
                        return True

                    if self.last_rmf_not_ready is not None:
                        return True

                    if self.last_rmf_ready is not None:
                        return True

                    if self.partner_proc_connected is not None:
                        return True

                    if self.rmf_notification_done is not None:
                        return True

                    if self.state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.Nsr']['meta_info']


            class AmtGatewaies(object):
                """
                Table containing AMT Gateway DataBase
                information
                
                .. attribute:: amt_gateway
                
                	AMT Gateway DataBase information
                	**type**\: list of    :py:class:`AmtGateway <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.Process.AmtGatewaies.AmtGateway>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.amt_gateway = YList()
                    self.amt_gateway.parent = self
                    self.amt_gateway.name = 'amt_gateway'


                class AmtGateway(object):
                    """
                    AMT Gateway DataBase information
                    
                    .. attribute:: amt_nonce
                    
                    	Nonce
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amt_port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amtgw
                    
                    	GW
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: amtnh
                    
                    	AMT NH
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: gateway_address
                    
                    	Gateway Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: idb
                    
                    	IDB
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: key_len
                    
                    	Len
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_in
                    
                    	UpdIn
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_out
                    
                    	UpdOut
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.amt_nonce = None
                        self.amt_port = None
                        self.amtgw = None
                        self.amtnh = None
                        self.gateway_address = None
                        self.idb = None
                        self.key_len = None
                        self.mem_upd_in = None
                        self.mem_upd_out = None
                        self.port = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies/Cisco-IOS-XR-ipv4-igmp-oper:amt-gateway'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.amt_nonce is not None:
                            return True

                        if self.amt_port is not None:
                            return True

                        if self.amtgw is not None:
                            return True

                        if self.amtnh is not None:
                            return True

                        if self.gateway_address is not None:
                            return True

                        if self.idb is not None:
                            return True

                        if self.key_len is not None:
                            return True

                        if self.mem_upd_in is not None:
                            return True

                        if self.mem_upd_out is not None:
                            return True

                        if self.port is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.Process.AmtGatewaies.AmtGateway']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.amt_gateway is not None:
                        for child_ref in self.amt_gateway:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.AmtGatewaies']['meta_info']


            class UnicastQosAdjustStats(object):
                """
                IGMP Unicast\-Qos\-Adjust Statistics
                
                .. attribute:: add_to_batches
                
                	Add to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: batches
                
                	I2Q Rate Batch count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: delete_to_batches
                
                	Delete to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_qos_s_sweeped
                
                	Is QOS Sweeped once 
                	**type**\:  bool
                
                .. attribute:: is_resync_received
                
                	Is Resync request received
                	**type**\:  bool
                
                .. attribute:: is_resync_required
                
                	Is Resync required
                	**type**\:  bool
                
                .. attribute:: is_resync_start_sent
                
                	Is Resync Start message sent
                	**type**\:  bool
                
                .. attribute:: last_download_time
                
                	Time elapsed since Last download to QOS in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: last_sweep_time
                
                	Time elapsed since Last mark and sweep in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: queues
                
                	I2Q Queue count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: received_resync_requests
                
                	Number of Resync request received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_comm_errors
                
                	Send Error due to comms count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_errors
                
                	Number of Send errors in batch
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_partial_errors
                
                	Send Error due to partial issue count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_success
                
                	Send Success count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: sent_resync_bulks
                
                	Number of bulks sent for last resync received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.add_to_batches = None
                    self.batches = None
                    self.delete_to_batches = None
                    self.is_qos_s_sweeped = None
                    self.is_resync_received = None
                    self.is_resync_required = None
                    self.is_resync_start_sent = None
                    self.last_download_time = None
                    self.last_sweep_time = None
                    self.queues = None
                    self.received_resync_requests = None
                    self.send_comm_errors = None
                    self.send_errors = None
                    self.send_partial_errors = None
                    self.send_success = None
                    self.sent_resync_bulks = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:unicast-qos-adjust-stats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.add_to_batches is not None:
                        return True

                    if self.batches is not None:
                        return True

                    if self.delete_to_batches is not None:
                        return True

                    if self.is_qos_s_sweeped is not None:
                        return True

                    if self.is_resync_received is not None:
                        return True

                    if self.is_resync_required is not None:
                        return True

                    if self.is_resync_start_sent is not None:
                        return True

                    if self.last_download_time is not None:
                        return True

                    if self.last_sweep_time is not None:
                        return True

                    if self.queues is not None:
                        return True

                    if self.received_resync_requests is not None:
                        return True

                    if self.send_comm_errors is not None:
                        return True

                    if self.send_errors is not None:
                        return True

                    if self.send_partial_errors is not None:
                        return True

                    if self.send_success is not None:
                        return True

                    if self.sent_resync_bulks is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.UnicastQosAdjustStats']['meta_info']


            class BviStatistics(object):
                """
                IGMP BVI Stats
                
                .. attribute:: null_buffer_handles
                
                	Number of AIPC NULL buffer handles
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_buffers
                
                	Number of AIPC buffers received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_buffers
                
                	Number of AIPC buffers released
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_fail_buffers
                
                	Number of AIPC buffers release failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_igmp_packet_success
                
                	Number of IGMP protocol messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_close_notif
                
                	Number of AIPC close notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_connect_notif
                
                	Number of AIPC connect notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_error_notif
                
                	Number of AIPC error notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_input_wait_notif
                
                	Number of AIPC input waiting notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_lwm_notif
                
                	Number of AIPC LWM notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_open_notif
                
                	Number of AIPC open notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_output_notif
                
                	Number of AIPC output notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_publish_notif
                
                	Number of AIPC publish notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_q_full_notif
                
                	Number of AIPC queue full notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_send_status_notif
                
                	Number of AIPC send status notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_blocks
                
                	Number of AIPC buffers send blocked
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffer_errors
                
                	Number of AIPC transmission errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffers
                
                	Number of AIPC buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_mrouter_buffers
                
                	Number of IGMP Mrouter buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_protocol_buffers
                
                	Number of IGMP protocol buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_buffers
                
                	Number of IGMP Unknown buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_dc
                
                	Number of WTX messages dropped due to disconnect
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_nomem
                
                	Number of WTX messages dropped to memory
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_freed
                
                	Number of WTX messages freed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_proto_sent
                
                	Number of WTX messages sent to Protocol
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_recvd
                
                	Number of WTX messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_sent
                
                	Number of WTX messages sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.null_buffer_handles = None
                    self.receive_buffers = None
                    self.release_buffers = None
                    self.release_fail_buffers = None
                    self.rx_add_mrouter_msg = None
                    self.rx_delete_mrouter_msg = None
                    self.rx_igmp_packet_success = None
                    self.rx_ipc_close_notif = None
                    self.rx_ipc_connect_notif = None
                    self.rx_ipc_error_notif = None
                    self.rx_ipc_input_wait_notif = None
                    self.rx_ipc_lwm_notif = None
                    self.rx_ipc_open_notif = None
                    self.rx_ipc_output_notif = None
                    self.rx_ipc_publish_notif = None
                    self.rx_ipc_q_full_notif = None
                    self.rx_ipc_send_status_notif = None
                    self.rx_sweep_mrouter_msg = None
                    self.rx_unknown_mrouter_msg = None
                    self.send_blocks = None
                    self.tx_add_mrouter_msg = None
                    self.tx_buffer_errors = None
                    self.tx_buffers = None
                    self.tx_delete_mrouter_msg = None
                    self.tx_mrouter_buffers = None
                    self.tx_protocol_buffers = None
                    self.tx_sweep_mrouter_msg = None
                    self.tx_unknown_buffers = None
                    self.tx_unknown_mrouter_msg = None
                    self.wtx_msg_drop_dc = None
                    self.wtx_msg_drop_nomem = None
                    self.wtx_msg_freed = None
                    self.wtx_msg_proto_sent = None
                    self.wtx_msg_recvd = None
                    self.wtx_msg_sent = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:bvi-statistics'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.null_buffer_handles is not None:
                        return True

                    if self.receive_buffers is not None:
                        return True

                    if self.release_buffers is not None:
                        return True

                    if self.release_fail_buffers is not None:
                        return True

                    if self.rx_add_mrouter_msg is not None:
                        return True

                    if self.rx_delete_mrouter_msg is not None:
                        return True

                    if self.rx_igmp_packet_success is not None:
                        return True

                    if self.rx_ipc_close_notif is not None:
                        return True

                    if self.rx_ipc_connect_notif is not None:
                        return True

                    if self.rx_ipc_error_notif is not None:
                        return True

                    if self.rx_ipc_input_wait_notif is not None:
                        return True

                    if self.rx_ipc_lwm_notif is not None:
                        return True

                    if self.rx_ipc_open_notif is not None:
                        return True

                    if self.rx_ipc_output_notif is not None:
                        return True

                    if self.rx_ipc_publish_notif is not None:
                        return True

                    if self.rx_ipc_q_full_notif is not None:
                        return True

                    if self.rx_ipc_send_status_notif is not None:
                        return True

                    if self.rx_sweep_mrouter_msg is not None:
                        return True

                    if self.rx_unknown_mrouter_msg is not None:
                        return True

                    if self.send_blocks is not None:
                        return True

                    if self.tx_add_mrouter_msg is not None:
                        return True

                    if self.tx_buffer_errors is not None:
                        return True

                    if self.tx_buffers is not None:
                        return True

                    if self.tx_delete_mrouter_msg is not None:
                        return True

                    if self.tx_mrouter_buffers is not None:
                        return True

                    if self.tx_protocol_buffers is not None:
                        return True

                    if self.tx_sweep_mrouter_msg is not None:
                        return True

                    if self.tx_unknown_buffers is not None:
                        return True

                    if self.tx_unknown_mrouter_msg is not None:
                        return True

                    if self.wtx_msg_drop_dc is not None:
                        return True

                    if self.wtx_msg_drop_nomem is not None:
                        return True

                    if self.wtx_msg_freed is not None:
                        return True

                    if self.wtx_msg_proto_sent is not None:
                        return True

                    if self.wtx_msg_recvd is not None:
                        return True

                    if self.wtx_msg_sent is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.BviStatistics']['meta_info']


            class Nsf(object):
                """
                NSF Information
                
                .. attribute:: is_multicast_nsf_active
                
                	Is Multicast NSF active
                	**type**\:  bool
                
                .. attribute:: last_icd_notif_recv
                
                	Last ICD Notif Recv
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_icd_notif_recv_min
                
                	Last ICD Notif Recv in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_off
                
                	Last NSF time off
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_off_min
                
                	Last NSF time OFF in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_on
                
                	Last NSF time ON
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_on_min
                
                	Last NSF time ON in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_time_left
                
                	Multicast NSF time remaining in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_timeout
                
                	Multicast NSF timeout in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: respawn_count
                
                	Respawn Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.is_multicast_nsf_active = None
                    self.last_icd_notif_recv = None
                    self.last_icd_notif_recv_min = None
                    self.last_nsf_off = None
                    self.last_nsf_off_min = None
                    self.last_nsf_on = None
                    self.last_nsf_on_min = None
                    self.multicast_nsf_time_left = None
                    self.multicast_nsf_timeout = None
                    self.respawn_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsf'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.is_multicast_nsf_active is not None:
                        return True

                    if self.last_icd_notif_recv is not None:
                        return True

                    if self.last_icd_notif_recv_min is not None:
                        return True

                    if self.last_nsf_off is not None:
                        return True

                    if self.last_nsf_off_min is not None:
                        return True

                    if self.last_nsf_on is not None:
                        return True

                    if self.last_nsf_on_min is not None:
                        return True

                    if self.multicast_nsf_time_left is not None:
                        return True

                    if self.multicast_nsf_timeout is not None:
                        return True

                    if self.respawn_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.Process.Nsf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.amt_gatewaies is not None and self.amt_gatewaies._has_data():
                    return True

                if self.amt_summary is not None and self.amt_summary._has_data():
                    return True

                if self.bvi_statistics is not None and self.bvi_statistics._has_data():
                    return True

                if self.nsf is not None and self.nsf._has_data():
                    return True

                if self.nsr is not None and self.nsr._has_data():
                    return True

                if self.unicast_qos_adjust_stats is not None and self.unicast_qos_adjust_stats._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Standby.Process']['meta_info']


        class DefaultContext(object):
            """
            Default Context
            
            .. attribute:: detail_groups
            
            	IGMP Detail Group Database
            	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups>`
            
            .. attribute:: explicit_groups
            
            	IGMP Explicit Group Database
            	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups>`
            
            .. attribute:: global_interface_table
            
            	IGMP Global Interface 
            	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GlobalInterfaceTable>`
            
            .. attribute:: group_summary
            
            	IGMP Groups Summary
            	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GroupSummary>`
            
            .. attribute:: groups
            
            	IGMP Group Database Table
            	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Groups>`
            
            .. attribute:: ifrs_interface_summary
            
            	IGMP IFRS Interface summary
            	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaceSummary>`
            
            .. attribute:: ifrs_interfaces
            
            	IGMP Interface specific
            	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces>`
            
            .. attribute:: interface_old_format_state_ons
            
            	IGMP Interface state on old format
            	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormatStateOns>`
            
            .. attribute:: interface_old_formats
            
            	IGMP Interface specific Table in old format
            	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormats>`
            
            .. attribute:: interface_state_off_old_formats
            
            	IGMP Interface state off old format
            	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffOldFormats>`
            
            .. attribute:: interface_state_offs
            
            	IGMP Interface state off
            	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffs>`
            
            .. attribute:: interface_state_ons
            
            	IGMP Interface state on
            	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOns>`
            
            .. attribute:: interface_table
            
            	IGMP Interface specific Table
            	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceTable>`
            
            .. attribute:: interface_unicast_qos_adjusts
            
            	IGMP Interface Unicast\-Qos\-Adjust
            	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts>`
            
            .. attribute:: non_active_groups
            
            	IGMP Non\-Active Groups Information
            	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.NonActiveGroups>`
            
            .. attribute:: ranges
            
            	Range table
            	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Ranges>`
            
            .. attribute:: ssm_map_details
            
            	SSM Map Detail
            	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMapDetails>`
            
            .. attribute:: ssm_maps
            
            	SSM Map Table
            	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMaps>`
            
            .. attribute:: summary
            
            	IGMP Summary Information
            	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Summary>`
            
            .. attribute:: traffic_counters
            
            	IGMP Message Traffic Counters
            	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.TrafficCounters>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.detail_groups = Mld.Standby.DefaultContext.DetailGroups()
                self.detail_groups.parent = self
                self.explicit_groups = Mld.Standby.DefaultContext.ExplicitGroups()
                self.explicit_groups.parent = self
                self.global_interface_table = Mld.Standby.DefaultContext.GlobalInterfaceTable()
                self.global_interface_table.parent = self
                self.group_summary = Mld.Standby.DefaultContext.GroupSummary()
                self.group_summary.parent = self
                self.groups = Mld.Standby.DefaultContext.Groups()
                self.groups.parent = self
                self.ifrs_interface_summary = Mld.Standby.DefaultContext.IfrsInterfaceSummary()
                self.ifrs_interface_summary.parent = self
                self.ifrs_interfaces = Mld.Standby.DefaultContext.IfrsInterfaces()
                self.ifrs_interfaces.parent = self
                self.interface_old_format_state_ons = Mld.Standby.DefaultContext.InterfaceOldFormatStateOns()
                self.interface_old_format_state_ons.parent = self
                self.interface_old_formats = Mld.Standby.DefaultContext.InterfaceOldFormats()
                self.interface_old_formats.parent = self
                self.interface_state_off_old_formats = Mld.Standby.DefaultContext.InterfaceStateOffOldFormats()
                self.interface_state_off_old_formats.parent = self
                self.interface_state_offs = Mld.Standby.DefaultContext.InterfaceStateOffs()
                self.interface_state_offs.parent = self
                self.interface_state_ons = Mld.Standby.DefaultContext.InterfaceStateOns()
                self.interface_state_ons.parent = self
                self.interface_table = Mld.Standby.DefaultContext.InterfaceTable()
                self.interface_table.parent = self
                self.interface_unicast_qos_adjusts = Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts()
                self.interface_unicast_qos_adjusts.parent = self
                self.non_active_groups = Mld.Standby.DefaultContext.NonActiveGroups()
                self.non_active_groups.parent = self
                self.ranges = Mld.Standby.DefaultContext.Ranges()
                self.ranges.parent = self
                self.ssm_map_details = Mld.Standby.DefaultContext.SsmMapDetails()
                self.ssm_map_details.parent = self
                self.ssm_maps = Mld.Standby.DefaultContext.SsmMaps()
                self.ssm_maps.parent = self
                self.summary = Mld.Standby.DefaultContext.Summary()
                self.summary.parent = self
                self.traffic_counters = Mld.Standby.DefaultContext.TrafficCounters()
                self.traffic_counters.parent = self


            class Summary(object):
                """
                IGMP Summary Information
                
                .. attribute:: disabled_interface_count
                
                	No. of disabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: enabled_interface_count
                
                	No. of enabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_limit
                
                	Maximum groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface
                
                	Maximum and current groups accepted for each interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Summary.Interface>`
                
                .. attribute:: is_disabled
                
                	Is maximum enforcement disabled
                	**type**\:  bool
                
                .. attribute:: node_low_memory
                
                	Is node in low memory condition
                	**type**\:  bool
                
                .. attribute:: robustness
                
                	Robustness variable
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: supported_interfaces
                
                	No. of supported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_mte_config_count
                
                	No. of static group commands
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: unsupported_interfaces
                
                	No. of unsupported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.disabled_interface_count = None
                    self.enabled_interface_count = None
                    self.group_count = None
                    self.group_limit = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'
                    self.is_disabled = None
                    self.node_low_memory = None
                    self.robustness = None
                    self.supported_interfaces = None
                    self.tunnel_mte_config_count = None
                    self.unsupported_interfaces = None


                class Interface(object):
                    """
                    Maximum and current groups accepted for each
                    interface
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: on_off
                    
                    	Enabled/Disabled
                    	**type**\:  bool
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent if handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Time elapsed since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface_name = None
                        self.on_off = None
                        self.parent_ifhandle = None
                        self.router_uptime_in_seconds = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.on_off is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.Summary.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.disabled_interface_count is not None:
                        return True

                    if self.enabled_interface_count is not None:
                        return True

                    if self.group_count is not None:
                        return True

                    if self.group_limit is not None:
                        return True

                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    if self.is_disabled is not None:
                        return True

                    if self.node_low_memory is not None:
                        return True

                    if self.robustness is not None:
                        return True

                    if self.supported_interfaces is not None:
                        return True

                    if self.tunnel_mte_config_count is not None:
                        return True

                    if self.unsupported_interfaces is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.Summary']['meta_info']


            class InterfaceStateOns(object):
                """
                IGMP Interface state on
                
                .. attribute:: interface_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_on = YList()
                    self.interface_state_on.parent = self
                    self.interface_state_on.name = 'interface_state_on'


                class InterfaceStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_on is not None:
                        for child_ref in self.interface_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOns']['meta_info']


            class DetailGroups(object):
                """
                IGMP Detail Group Database
                
                .. attribute:: detail_group
                
                	IGMP Detail Group Entry Information
                	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.detail_group = YList()
                    self.detail_group.parent = self
                    self.detail_group.name = 'detail_group'


                class DetailGroup(object):
                    """
                    IGMP Detail Group Entry Information
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_host_exclude_mode
                    
                    	Group host filter mode
                    	**type**\:  bool
                    
                    .. attribute:: is_router_exclude_mode
                    
                    	Group router filter mode
                    	**type**\:  bool
                    
                    .. attribute:: source
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.Source>`
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_info = Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo()
                        self.group_info.parent = self
                        self.interface_name = None
                        self.is_host_exclude_mode = None
                        self.is_router_exclude_mode = None
                        self.source = YList()
                        self.source.parent = self
                        self.source.name = 'source'
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                    class Source(object):
                        """
                        List of sources
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: flags
                        
                        	Source flags
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_forward
                        
                        	Should we forward on this entry
                        	**type**\:  bool
                        
                        .. attribute:: is_local
                        
                        	Is this a local source
                        	**type**\:  bool
                        
                        .. attribute:: is_remote
                        
                        	Is this a remote source
                        	**type**\:  bool
                        
                        .. attribute:: is_we_report
                        
                        	Should we report the source
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.flags = None
                            self.is_added = None
                            self.is_forward = None
                            self.is_local = None
                            self.is_remote = None
                            self.is_we_report = None
                            self.source_address = Mld.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.flags is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_forward is not None:
                                return True

                            if self.is_local is not None:
                                return True

                            if self.is_remote is not None:
                                return True

                            if self.is_we_report is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup.Source']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.is_host_exclude_mode is not None:
                            return True

                        if self.is_router_exclude_mode is not None:
                            return True

                        if self.source is not None:
                            for child_ref in self.source:
                                if child_ref._has_data():
                                    return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups.DetailGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.detail_group is not None:
                        for child_ref in self.detail_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.DetailGroups']['meta_info']


            class NonActiveGroups(object):
                """
                IGMP Non\-Active Groups Information
                
                .. attribute:: non_active_groups
                
                	List of non\-active groups
                	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.non_active_groups = YList()
                    self.non_active_groups.parent = self
                    self.non_active_groups.name = 'non_active_groups'


                class NonActiveGroups_(object):
                    """
                    List of non\-active groups
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                    
                    .. attribute:: interface
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**length:** 0..65
                    
                    .. attribute:: reason_for_non_activity
                    
                    	Reason for group join not being processed
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress()
                        self.group_address.parent = self
                        self.interface = None
                        self.reason_for_non_activity = None
                        self.source_address = Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress()
                        self.source_address.parent = self


                    class GroupAddress(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None and self.group_address._has_data():
                            return True

                        if self.interface is not None:
                            return True

                        if self.reason_for_non_activity is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.non_active_groups is not None:
                        for child_ref in self.non_active_groups:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.NonActiveGroups']['meta_info']


            class SsmMaps(object):
                """
                SSM Map Table
                
                .. attribute:: ssm_map
                
                	SSM Map information
                	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMaps.SsmMap>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map = YList()
                    self.ssm_map.parent = self
                    self.ssm_map.name = 'ssm_map'


                class SsmMap(object):
                    """
                    SSM Map information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr>`
                    
                    .. attribute:: map_type
                    
                    	Map Type of group
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: source_counts
                    
                    	Count of Sources
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Mld.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.map_type = None
                        self.source_counts = None
                        self.ssm_map_type = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.map_type is not None:
                            return True

                        if self.source_counts is not None:
                            return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.SsmMaps.SsmMap']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map is not None:
                        for child_ref in self.ssm_map:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.SsmMaps']['meta_info']


            class ExplicitGroups(object):
                """
                IGMP Explicit Group Database
                
                .. attribute:: explicit_group
                
                	IGMP Explicit Group Entry Information
                	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.explicit_group = YList()
                    self.explicit_group.parent = self
                    self.explicit_group.name = 'explicit_group'


                class ExplicitGroup(object):
                    """
                    IGMP Explicit Group Entry Information
                    
                    .. attribute:: exclude_hosts
                    
                    	No. of hosts who are excluded
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo>`
                    
                    .. attribute:: host
                    
                    	List of hosts
                    	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host>`
                    
                    .. attribute:: include_hosts
                    
                    	No. of hosts who are included
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.exclude_hosts = None
                        self.group_address = None
                        self.group_info = Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo()
                        self.group_info.parent = self
                        self.host = YList()
                        self.host.parent = self
                        self.host.name = 'host'
                        self.include_hosts = None
                        self.interface_name = None
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                    class Host(object):
                        """
                        List of hosts
                        
                        .. attribute:: address
                        
                        	Host Address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address>`
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: is_exclude
                        
                        	Exclude flag set
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	First 3 source addresses
                        	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                        
                        .. attribute:: source_count
                        
                        	No. of sources in entry
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address()
                            self.address.parent = self
                            self.expiration_time = None
                            self.is_exclude = None
                            self.source_address = YList()
                            self.source_address.parent = self
                            self.source_address.name = 'source_address'
                            self.source_count = None
                            self.uptime = None


                        class Address(object):
                            """
                            Host Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                        class SourceAddress(object):
                            """
                            First 3 source addresses
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.is_exclude is not None:
                                return True

                            if self.source_address is not None:
                                for child_ref in self.source_address:
                                    if child_ref._has_data():
                                        return True

                            if self.source_count is not None:
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.exclude_hosts is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.host is not None:
                            for child_ref in self.host:
                                if child_ref._has_data():
                                    return True

                        if self.include_hosts is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups.ExplicitGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.explicit_group is not None:
                        for child_ref in self.explicit_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.ExplicitGroups']['meta_info']


            class InterfaceTable(object):
                """
                IGMP Interface specific Table
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceTable']['meta_info']


            class InterfaceOldFormats(object):
                """
                IGMP Interface specific Table in old format
                
                .. attribute:: interface_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format = YList()
                    self.interface_old_format.parent = self
                    self.interface_old_format.name = 'interface_old_format'


                class InterfaceOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format is not None:
                        for child_ref in self.interface_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormats']['meta_info']


            class InterfaceStateOffOldFormats(object):
                """
                IGMP Interface state off old format
                
                .. attribute:: interface_state_off_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off_old_format = YList()
                    self.interface_state_off_old_format.parent = self
                    self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                class InterfaceStateOffOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off_old_format is not None:
                        for child_ref in self.interface_state_off_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffOldFormats']['meta_info']


            class InterfaceUnicastQosAdjusts(object):
                """
                IGMP Interface Unicast\-Qos\-Adjust
                
                .. attribute:: interface_unicast_qos_adjust
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_unicast_qos_adjust = YList()
                    self.interface_unicast_qos_adjust.parent = self
                    self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                class InterfaceUnicastQosAdjust(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_virtual_access
                    
                    	Is VirtualAccess Interface
                    	**type**\:  bool
                    
                    .. attribute:: rate
                    
                    	Overall rate in Kbps
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: rate_decrements
                    
                    	Count of rate decrements
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: rate_increments
                    
                    	Count of rate increments
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: update
                    
                    	List of updates
                    	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.is_virtual_access = None
                        self.rate = None
                        self.rate_decrements = None
                        self.rate_increments = None
                        self.update = YList()
                        self.update.parent = self
                        self.update.name = 'update'


                    class Update(object):
                        """
                        List of updates
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                        
                        .. attribute:: is_add
                        
                        	Is this a rate increment
                        	**type**\:  bool
                        
                        .. attribute:: received_time
                        
                        	Time this update is received
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: source_address
                        
                        	Source address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                        
                        .. attribute:: weight
                        
                        	Weight from policy
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                            self.group_address.parent = self
                            self.is_add = None
                            self.received_time = None
                            self.source_address = Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                            self.source_address.parent = self
                            self.weight = None


                        class SourceAddress(object):
                            """
                            Source address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                        class GroupAddress(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.is_add is not None:
                                return True

                            if self.received_time is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.weight is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.is_virtual_access is not None:
                            return True

                        if self.rate is not None:
                            return True

                        if self.rate_decrements is not None:
                            return True

                        if self.rate_increments is not None:
                            return True

                        if self.update is not None:
                            for child_ref in self.update:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_unicast_qos_adjust is not None:
                        for child_ref in self.interface_unicast_qos_adjust:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceUnicastQosAdjusts']['meta_info']


            class Ranges(object):
                """
                Range table
                
                .. attribute:: range
                
                	Range information
                	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Ranges.Range>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.range = YList()
                    self.range.parent = self
                    self.range.name = 'range'


                class Range(object):
                    """
                    Range information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Ranges.Range.GroupAddressXr>`
                    
                    .. attribute:: group_mask
                    
                    	Group Mask
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: is_stale
                    
                    	Is the entry stale
                    	**type**\:  bool
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: protocol
                    
                    	Protocol
                    	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Mld.Standby.DefaultContext.Ranges.Range.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.group_mask = None
                        self.is_stale = None
                        self.prefix_length = None
                        self.protocol = None


                    class GroupAddressXr(object):
                        """
                        Group address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.Ranges.Range.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.group_mask is not None:
                            return True

                        if self.is_stale is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.protocol is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.Ranges.Range']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.range is not None:
                        for child_ref in self.range:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.Ranges']['meta_info']


            class IfrsInterfaces(object):
                """
                IGMP Interface specific
                
                .. attribute:: ifrs_interface
                
                	IGMP IFRS Interface
                	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ifrs_interface = YList()
                    self.ifrs_interface.parent = self
                    self.ifrs_interface.name = 'ifrs_interface'


                class IfrsInterface(object):
                    """
                    IGMP IFRS Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	IFRS Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: igmp_interface_entry
                    
                    	IGMP interface entry
                    	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                    
                    .. attribute:: join_group_count
                    
                    	Join group count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.igmp_interface_entry = Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                        self.igmp_interface_entry.parent = self
                        self.join_group_count = None


                    class IgmpInterfaceEntry(object):
                        """
                        IGMP interface entry
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                            return True

                        if self.join_group_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces.IfrsInterface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ifrs_interface is not None:
                        for child_ref in self.ifrs_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaces']['meta_info']


            class TrafficCounters(object):
                """
                IGMP Message Traffic Counters
                
                .. attribute:: auxillary_data_length_errors
                
                	AuxDataLen errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: bad_scope_errors
                
                	BadScope errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: checksum_errors
                
                	Checksum errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: elapsed_time
                
                	Running time for counters
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: format_errors
                
                	Malformed packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: get_packet_failure
                
                	Packet get failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_disabled_idb
                
                	Packet received on disabled idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_dvmrp
                
                	DVMRP packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_leaves
                
                	Leaves in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_martian_address
                
                	Packets received with Martian Address
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_mtrace
                
                	Mtrace packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_assigned_vrf_id
                
                	Packets received with no assigned vrf id
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_idb
                
                	Packets received without idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_platform_support_mtrace
                
                	mtrace packets without platform support
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_in_idb
                
                	Packets received on idb without VRF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_mtrace
                
                	mtrace packets with no vrf associated
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_pim
                
                	PIM packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_queries
                
                	Query packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_reports
                
                	Reports in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: invalid_source_address_errors
                
                	Invalid Source Address errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: miscellaneous_errors
                
                	Packets dropped for other reasons
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: no_socket_connection
                
                	Packets dropped since no socket connection
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_dvmrp
                
                	DVMRP packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_leaves
                
                	Leaves out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_mtrace
                
                	Mtrace packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_no_parent_interface_handle
                
                	Failures setting 2nd ifhandle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_pim
                
                	PIM packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_queries
                
                	Query packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_reports
                
                	Reports out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_input_errors
                
                	Incoming Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_output_errors
                
                	Outgoing Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_in
                
                	Packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_out
                
                	Packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_socket_errors
                
                	Socket errors on reception
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: socket_errors
                
                	Socket errors on send
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.auxillary_data_length_errors = None
                    self.bad_scope_errors = None
                    self.checksum_errors = None
                    self.elapsed_time = None
                    self.format_errors = None
                    self.get_packet_failure = None
                    self.input_disabled_idb = None
                    self.input_dvmrp = None
                    self.input_leaves = None
                    self.input_martian_address = None
                    self.input_mtrace = None
                    self.input_no_assigned_vrf_id = None
                    self.input_no_idb = None
                    self.input_no_platform_support_mtrace = None
                    self.input_no_vrf_in_idb = None
                    self.input_no_vrf_mtrace = None
                    self.input_pim = None
                    self.input_queries = None
                    self.input_reports = None
                    self.invalid_source_address_errors = None
                    self.miscellaneous_errors = None
                    self.no_socket_connection = None
                    self.output_dvmrp = None
                    self.output_leaves = None
                    self.output_mtrace = None
                    self.output_no_parent_interface_handle = None
                    self.output_pim = None
                    self.output_queries = None
                    self.output_reports = None
                    self.packet_manager_input_errors = None
                    self.packet_manager_output_errors = None
                    self.packets_in = None
                    self.packets_out = None
                    self.receive_socket_errors = None
                    self.socket_errors = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.auxillary_data_length_errors is not None:
                        return True

                    if self.bad_scope_errors is not None:
                        return True

                    if self.checksum_errors is not None:
                        return True

                    if self.elapsed_time is not None:
                        return True

                    if self.format_errors is not None:
                        return True

                    if self.get_packet_failure is not None:
                        return True

                    if self.input_disabled_idb is not None:
                        return True

                    if self.input_dvmrp is not None:
                        return True

                    if self.input_leaves is not None:
                        return True

                    if self.input_martian_address is not None:
                        return True

                    if self.input_mtrace is not None:
                        return True

                    if self.input_no_assigned_vrf_id is not None:
                        return True

                    if self.input_no_idb is not None:
                        return True

                    if self.input_no_platform_support_mtrace is not None:
                        return True

                    if self.input_no_vrf_in_idb is not None:
                        return True

                    if self.input_no_vrf_mtrace is not None:
                        return True

                    if self.input_pim is not None:
                        return True

                    if self.input_queries is not None:
                        return True

                    if self.input_reports is not None:
                        return True

                    if self.invalid_source_address_errors is not None:
                        return True

                    if self.miscellaneous_errors is not None:
                        return True

                    if self.no_socket_connection is not None:
                        return True

                    if self.output_dvmrp is not None:
                        return True

                    if self.output_leaves is not None:
                        return True

                    if self.output_mtrace is not None:
                        return True

                    if self.output_no_parent_interface_handle is not None:
                        return True

                    if self.output_pim is not None:
                        return True

                    if self.output_queries is not None:
                        return True

                    if self.output_reports is not None:
                        return True

                    if self.packet_manager_input_errors is not None:
                        return True

                    if self.packet_manager_output_errors is not None:
                        return True

                    if self.packets_in is not None:
                        return True

                    if self.packets_out is not None:
                        return True

                    if self.receive_socket_errors is not None:
                        return True

                    if self.socket_errors is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.TrafficCounters']['meta_info']


            class Groups(object):
                """
                IGMP Group Database Table
                
                .. attribute:: group
                
                	IGMP Group Entry Information
                	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Groups.Group>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group = YList()
                    self.group.parent = self
                    self.group.name = 'group'


                class Group(object):
                    """
                    IGMP Group Entry Information
                    
                    .. attribute:: expiration_time
                    
                    	Expiration time in seconds
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**units**\: second
                    
                    .. attribute:: explicit_tracking_enabled
                    
                    	Is explicit tracking enabled
                    	**type**\:  bool
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Groups.Group.GroupAddressXr>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_added
                    
                    	Joined
                    	**type**\:  bool
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: is_self_join
                    
                    	If local system is member of this group on this interface
                    	**type**\:  bool
                    
                    .. attribute:: is_suppressed
                    
                    	Suppressed
                    	**type**\:  bool
                    
                    .. attribute:: last_reporter
                    
                    	Last reporter address
                    	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Groups.Group.LastReporter>`
                    
                    .. attribute:: older_host_version1_timer
                    
                    	IGMP Hostversion1timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: older_host_version2_timer
                    
                    	IGMP Hostversion2timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_filter_mode
                    
                    	Filter mode
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: row_status
                    
                    	interface on or off for the group
                    	**type**\:  str
                    
                    	**length:** 0..16
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.Groups.Group.SourceAddress>`
                    
                    .. attribute:: uptime
                    
                    	Uptime in seconds
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**units**\: second
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.expiration_time = None
                        self.explicit_tracking_enabled = None
                        self.group_address = None
                        self.group_address_xr = Mld.Standby.DefaultContext.Groups.Group.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.interface_name = None
                        self.interface_name_xr = None
                        self.is_added = None
                        self.is_low_memory = None
                        self.is_self_join = None
                        self.is_suppressed = None
                        self.last_reporter = Mld.Standby.DefaultContext.Groups.Group.LastReporter()
                        self.last_reporter.parent = self
                        self.older_host_version1_timer = None
                        self.older_host_version2_timer = None
                        self.router_filter_mode = None
                        self.row_status = None
                        self.source_address = Mld.Standby.DefaultContext.Groups.Group.SourceAddress()
                        self.source_address.parent = self
                        self.uptime = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.Groups.Group.GroupAddressXr']['meta_info']


                    class LastReporter(object):
                        """
                        Last reporter address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.Groups.Group.LastReporter']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.Groups.Group.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.expiration_time is not None:
                            return True

                        if self.explicit_tracking_enabled is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_added is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.is_self_join is not None:
                            return True

                        if self.is_suppressed is not None:
                            return True

                        if self.last_reporter is not None and self.last_reporter._has_data():
                            return True

                        if self.older_host_version1_timer is not None:
                            return True

                        if self.older_host_version2_timer is not None:
                            return True

                        if self.router_filter_mode is not None:
                            return True

                        if self.row_status is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        if self.uptime is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.Groups.Group']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group is not None:
                        for child_ref in self.group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.Groups']['meta_info']


            class GroupSummary(object):
                """
                IGMP Groups Summary
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: groutes
                
                	No. of (\*,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_low_memory
                
                	Node is running low on memory
                	**type**\:  bool
                
                .. attribute:: sg_routes
                
                	No. of (S,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group_count = None
                    self.groutes = None
                    self.is_low_memory = None
                    self.sg_routes = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group_count is not None:
                        return True

                    if self.groutes is not None:
                        return True

                    if self.is_low_memory is not None:
                        return True

                    if self.sg_routes is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.GroupSummary']['meta_info']


            class IfrsInterfaceSummary(object):
                """
                IGMP IFRS Interface summary
                
                .. attribute:: configuration_count
                
                	Configuration count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_count
                
                	Interface Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.configuration_count = None
                    self.interface_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.configuration_count is not None:
                        return True

                    if self.interface_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.IfrsInterfaceSummary']['meta_info']


            class GlobalInterfaceTable(object):
                """
                IGMP Global Interface 
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.GlobalInterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.GlobalInterfaceTable']['meta_info']


            class SsmMapDetails(object):
                """
                SSM Map Detail
                
                .. attribute:: ssm_map_detail
                
                	SSM Map Detail Table information
                	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map_detail = YList()
                    self.ssm_map_detail.parent = self
                    self.ssm_map_detail.name = 'ssm_map_detail'


                class SsmMapDetail(object):
                    """
                    SSM Map Detail Table information
                    
                    .. attribute:: elapsed_time
                    
                    	Elapsed time
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: expiration_time
                    
                    	Expiration Time in Seconds
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: second
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: map_info
                    
                    	Basic Map Info
                    	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo>`
                    
                    .. attribute:: query_interval
                    
                    	Query interval
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: response_pending
                    
                    	Response Pending
                    	**type**\:  bool
                    
                    .. attribute:: sources
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.Sources>`
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.elapsed_time = None
                        self.expiration_time = None
                        self.group_address = None
                        self.map_info = Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo()
                        self.map_info.parent = self
                        self.query_interval = None
                        self.response_pending = None
                        self.sources = YList()
                        self.sources.parent = self
                        self.sources.name = 'sources'
                        self.ssm_map_type = None


                    class MapInfo(object):
                        """
                        Basic Map Info
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address_xr = Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                    class Sources(object):
                        """
                        List of sources
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.elapsed_time is not None:
                            return True

                        if self.expiration_time is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.map_info is not None and self.map_info._has_data():
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.response_pending is not None:
                            return True

                        if self.sources is not None:
                            for child_ref in self.sources:
                                if child_ref._has_data():
                                    return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.SsmMapDetails.SsmMapDetail']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map_detail is not None:
                        for child_ref in self.ssm_map_detail:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.SsmMapDetails']['meta_info']


            class InterfaceStateOffs(object):
                """
                IGMP Interface state off
                
                .. attribute:: interface_state_off
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off = YList()
                    self.interface_state_off.parent = self
                    self.interface_state_off.name = 'interface_state_off'


                class InterfaceStateOff(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off is not None:
                        for child_ref in self.interface_state_off:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceStateOffs']['meta_info']


            class InterfaceOldFormatStateOns(object):
                """
                IGMP Interface state on old format
                
                .. attribute:: interface_old_format_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format_state_on = YList()
                    self.interface_old_format_state_on.parent = self
                    self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                class InterfaceOldFormatStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format_state_on is not None:
                        for child_ref in self.interface_old_format_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Standby.DefaultContext.InterfaceOldFormatStateOns']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.detail_groups is not None and self.detail_groups._has_data():
                    return True

                if self.explicit_groups is not None and self.explicit_groups._has_data():
                    return True

                if self.global_interface_table is not None and self.global_interface_table._has_data():
                    return True

                if self.group_summary is not None and self.group_summary._has_data():
                    return True

                if self.groups is not None and self.groups._has_data():
                    return True

                if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                    return True

                if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                    return True

                if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                    return True

                if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                    return True

                if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                    return True

                if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                    return True

                if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                    return True

                if self.interface_table is not None and self.interface_table._has_data():
                    return True

                if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                    return True

                if self.non_active_groups is not None and self.non_active_groups._has_data():
                    return True

                if self.ranges is not None and self.ranges._has_data():
                    return True

                if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                    return True

                if self.ssm_maps is not None and self.ssm_maps._has_data():
                    return True

                if self.summary is not None and self.summary._has_data():
                    return True

                if self.traffic_counters is not None and self.traffic_counters._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Standby.DefaultContext']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:standby'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if self.default_context is not None and self.default_context._has_data():
                return True

            if self.process is not None and self.process._has_data():
                return True

            if self.vrfs is not None and self.vrfs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
            return meta._meta_table['Mld.Standby']['meta_info']


    class Active(object):
        """
        Active Process
        
        .. attribute:: default_context
        
        	Default Context
        	**type**\:   :py:class:`DefaultContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext>`
        
        .. attribute:: process
        
        	Process
        	**type**\:   :py:class:`Process <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process>`
        
        .. attribute:: vrfs
        
        	VRF Table
        	**type**\:   :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs>`
        
        

        """

        _prefix = 'ipv4-igmp-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.default_context = Mld.Active.DefaultContext()
            self.default_context.parent = self
            self.process = Mld.Active.Process()
            self.process.parent = self
            self.vrfs = Mld.Active.Vrfs()
            self.vrfs.parent = self


        class Vrfs(object):
            """
            VRF Table
            
            .. attribute:: vrf
            
            	VRF table Names
            	**type**\: list of    :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf = YList()
                self.vrf.parent = self
                self.vrf.name = 'vrf'


            class Vrf(object):
                """
                VRF table Names
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**length:** 1..32
                
                .. attribute:: detail_groups
                
                	IGMP Detail Group Database
                	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups>`
                
                .. attribute:: explicit_groups
                
                	IGMP Explicit Group Database
                	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups>`
                
                .. attribute:: global_interface_table
                
                	IGMP Global Interface 
                	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GlobalInterfaceTable>`
                
                .. attribute:: group_summary
                
                	IGMP Groups Summary
                	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GroupSummary>`
                
                .. attribute:: groups
                
                	IGMP Group Database Table
                	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Groups>`
                
                .. attribute:: ifrs_interface_summary
                
                	IGMP IFRS Interface summary
                	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaceSummary>`
                
                .. attribute:: ifrs_interfaces
                
                	IGMP Interface specific
                	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces>`
                
                .. attribute:: interface_old_format_state_ons
                
                	IGMP Interface state on old format
                	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns>`
                
                .. attribute:: interface_old_formats
                
                	IGMP Interface specific Table in old format
                	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormats>`
                
                .. attribute:: interface_state_off_old_formats
                
                	IGMP Interface state off old format
                	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats>`
                
                .. attribute:: interface_state_offs
                
                	IGMP Interface state off
                	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffs>`
                
                .. attribute:: interface_state_ons
                
                	IGMP Interface state on
                	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOns>`
                
                .. attribute:: interface_table
                
                	IGMP Interface specific Table
                	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceTable>`
                
                .. attribute:: interface_unicast_qos_adjusts
                
                	IGMP Interface Unicast\-Qos\-Adjust
                	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts>`
                
                .. attribute:: non_active_groups
                
                	IGMP Non\-Active Groups Information
                	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.NonActiveGroups>`
                
                .. attribute:: ranges
                
                	Range table
                	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Ranges>`
                
                .. attribute:: ssm_map_details
                
                	SSM Map Detail
                	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMapDetails>`
                
                .. attribute:: ssm_maps
                
                	SSM Map Table
                	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMaps>`
                
                .. attribute:: summary
                
                	IGMP Summary Information
                	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Summary>`
                
                .. attribute:: traffic_counters
                
                	IGMP Message Traffic Counters
                	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.TrafficCounters>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.detail_groups = Mld.Active.Vrfs.Vrf.DetailGroups()
                    self.detail_groups.parent = self
                    self.explicit_groups = Mld.Active.Vrfs.Vrf.ExplicitGroups()
                    self.explicit_groups.parent = self
                    self.global_interface_table = Mld.Active.Vrfs.Vrf.GlobalInterfaceTable()
                    self.global_interface_table.parent = self
                    self.group_summary = Mld.Active.Vrfs.Vrf.GroupSummary()
                    self.group_summary.parent = self
                    self.groups = Mld.Active.Vrfs.Vrf.Groups()
                    self.groups.parent = self
                    self.ifrs_interface_summary = Mld.Active.Vrfs.Vrf.IfrsInterfaceSummary()
                    self.ifrs_interface_summary.parent = self
                    self.ifrs_interfaces = Mld.Active.Vrfs.Vrf.IfrsInterfaces()
                    self.ifrs_interfaces.parent = self
                    self.interface_old_format_state_ons = Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns()
                    self.interface_old_format_state_ons.parent = self
                    self.interface_old_formats = Mld.Active.Vrfs.Vrf.InterfaceOldFormats()
                    self.interface_old_formats.parent = self
                    self.interface_state_off_old_formats = Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats()
                    self.interface_state_off_old_formats.parent = self
                    self.interface_state_offs = Mld.Active.Vrfs.Vrf.InterfaceStateOffs()
                    self.interface_state_offs.parent = self
                    self.interface_state_ons = Mld.Active.Vrfs.Vrf.InterfaceStateOns()
                    self.interface_state_ons.parent = self
                    self.interface_table = Mld.Active.Vrfs.Vrf.InterfaceTable()
                    self.interface_table.parent = self
                    self.interface_unicast_qos_adjusts = Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts()
                    self.interface_unicast_qos_adjusts.parent = self
                    self.non_active_groups = Mld.Active.Vrfs.Vrf.NonActiveGroups()
                    self.non_active_groups.parent = self
                    self.ranges = Mld.Active.Vrfs.Vrf.Ranges()
                    self.ranges.parent = self
                    self.ssm_map_details = Mld.Active.Vrfs.Vrf.SsmMapDetails()
                    self.ssm_map_details.parent = self
                    self.ssm_maps = Mld.Active.Vrfs.Vrf.SsmMaps()
                    self.ssm_maps.parent = self
                    self.summary = Mld.Active.Vrfs.Vrf.Summary()
                    self.summary.parent = self
                    self.traffic_counters = Mld.Active.Vrfs.Vrf.TrafficCounters()
                    self.traffic_counters.parent = self


                class Summary(object):
                    """
                    IGMP Summary Information
                    
                    .. attribute:: disabled_interface_count
                    
                    	No. of disabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: enabled_interface_count
                    
                    	No. of enabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface
                    
                    	Maximum and current groups accepted for each interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Summary.Interface>`
                    
                    .. attribute:: is_disabled
                    
                    	Is maximum enforcement disabled
                    	**type**\:  bool
                    
                    .. attribute:: node_low_memory
                    
                    	Is node in low memory condition
                    	**type**\:  bool
                    
                    .. attribute:: robustness
                    
                    	Robustness variable
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: supported_interfaces
                    
                    	No. of supported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: tunnel_mte_config_count
                    
                    	No. of static group commands
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: unsupported_interfaces
                    
                    	No. of unsupported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.disabled_interface_count = None
                        self.enabled_interface_count = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'
                        self.is_disabled = None
                        self.node_low_memory = None
                        self.robustness = None
                        self.supported_interfaces = None
                        self.tunnel_mte_config_count = None
                        self.unsupported_interfaces = None


                    class Interface(object):
                        """
                        Maximum and current groups accepted for each
                        interface
                        
                        .. attribute:: group_count
                        
                        	Current groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_limit
                        
                        	Maximum groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: on_off
                        
                        	Enabled/Disabled
                        	**type**\:  bool
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent if handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Time elapsed since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_count = None
                            self.group_limit = None
                            self.interface_name = None
                            self.on_off = None
                            self.parent_ifhandle = None
                            self.router_uptime_in_seconds = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_count is not None:
                                return True

                            if self.group_limit is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.on_off is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.Summary.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.disabled_interface_count is not None:
                            return True

                        if self.enabled_interface_count is not None:
                            return True

                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        if self.is_disabled is not None:
                            return True

                        if self.node_low_memory is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.supported_interfaces is not None:
                            return True

                        if self.tunnel_mte_config_count is not None:
                            return True

                        if self.unsupported_interfaces is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.Summary']['meta_info']


                class InterfaceStateOns(object):
                    """
                    IGMP Interface state on
                    
                    .. attribute:: interface_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_on = YList()
                        self.interface_state_on.parent = self
                        self.interface_state_on.name = 'interface_state_on'


                    class InterfaceStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_on is not None:
                            for child_ref in self.interface_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOns']['meta_info']


                class DetailGroups(object):
                    """
                    IGMP Detail Group Database
                    
                    .. attribute:: detail_group
                    
                    	IGMP Detail Group Entry Information
                    	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.detail_group = YList()
                        self.detail_group.parent = self
                        self.detail_group.name = 'detail_group'


                    class DetailGroup(object):
                        """
                        IGMP Detail Group Entry Information
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_host_exclude_mode
                        
                        	Group host filter mode
                        	**type**\:  bool
                        
                        .. attribute:: is_router_exclude_mode
                        
                        	Group router filter mode
                        	**type**\:  bool
                        
                        .. attribute:: source
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source>`
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_info = Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo()
                            self.group_info.parent = self
                            self.interface_name = None
                            self.is_host_exclude_mode = None
                            self.is_router_exclude_mode = None
                            self.source = YList()
                            self.source.parent = self
                            self.source.name = 'source'
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                        class Source(object):
                            """
                            List of sources
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: flags
                            
                            	Source flags
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_forward
                            
                            	Should we forward on this entry
                            	**type**\:  bool
                            
                            .. attribute:: is_local
                            
                            	Is this a local source
                            	**type**\:  bool
                            
                            .. attribute:: is_remote
                            
                            	Is this a remote source
                            	**type**\:  bool
                            
                            .. attribute:: is_we_report
                            
                            	Should we report the source
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.flags = None
                                self.is_added = None
                                self.is_forward = None
                                self.is_local = None
                                self.is_remote = None
                                self.is_we_report = None
                                self.source_address = Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.flags is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_forward is not None:
                                    return True

                                if self.is_local is not None:
                                    return True

                                if self.is_remote is not None:
                                    return True

                                if self.is_we_report is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.is_host_exclude_mode is not None:
                                return True

                            if self.is_router_exclude_mode is not None:
                                return True

                            if self.source is not None:
                                for child_ref in self.source:
                                    if child_ref._has_data():
                                        return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups.DetailGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.detail_group is not None:
                            for child_ref in self.detail_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.DetailGroups']['meta_info']


                class NonActiveGroups(object):
                    """
                    IGMP Non\-Active Groups Information
                    
                    .. attribute:: non_active_groups
                    
                    	List of non\-active groups
                    	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.non_active_groups = YList()
                        self.non_active_groups.parent = self
                        self.non_active_groups.name = 'non_active_groups'


                    class NonActiveGroups_(object):
                        """
                        List of non\-active groups
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                        
                        .. attribute:: interface
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**length:** 0..65
                        
                        .. attribute:: reason_for_non_activity
                        
                        	Reason for group join not being processed
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress()
                            self.group_address.parent = self
                            self.interface = None
                            self.reason_for_non_activity = None
                            self.source_address = Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress()
                            self.source_address.parent = self


                        class GroupAddress(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.interface is not None:
                                return True

                            if self.reason_for_non_activity is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.non_active_groups is not None:
                            for child_ref in self.non_active_groups:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.NonActiveGroups']['meta_info']


                class SsmMaps(object):
                    """
                    SSM Map Table
                    
                    .. attribute:: ssm_map
                    
                    	SSM Map information
                    	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMaps.SsmMap>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map = YList()
                        self.ssm_map.parent = self
                        self.ssm_map.name = 'ssm_map'


                    class SsmMap(object):
                        """
                        SSM Map information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Mld.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None
                            self.ssm_map_type = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMaps.SsmMap']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map is not None:
                            for child_ref in self.ssm_map:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMaps']['meta_info']


                class ExplicitGroups(object):
                    """
                    IGMP Explicit Group Database
                    
                    .. attribute:: explicit_group
                    
                    	IGMP Explicit Group Entry Information
                    	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.explicit_group = YList()
                        self.explicit_group.parent = self
                        self.explicit_group.name = 'explicit_group'


                    class ExplicitGroup(object):
                        """
                        IGMP Explicit Group Entry Information
                        
                        .. attribute:: exclude_hosts
                        
                        	No. of hosts who are excluded
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo>`
                        
                        .. attribute:: host
                        
                        	List of hosts
                        	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host>`
                        
                        .. attribute:: include_hosts
                        
                        	No. of hosts who are included
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.exclude_hosts = None
                            self.group_address = None
                            self.group_info = Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo()
                            self.group_info.parent = self
                            self.host = YList()
                            self.host.parent = self
                            self.host.name = 'host'
                            self.include_hosts = None
                            self.interface_name = None
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                        class Host(object):
                            """
                            List of hosts
                            
                            .. attribute:: address
                            
                            	Host Address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address>`
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            .. attribute:: is_exclude
                            
                            	Exclude flag set
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	First 3 source addresses
                            	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                            
                            .. attribute:: source_count
                            
                            	No. of sources in entry
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address()
                                self.address.parent = self
                                self.expiration_time = None
                                self.is_exclude = None
                                self.source_address = YList()
                                self.source_address.parent = self
                                self.source_address.name = 'source_address'
                                self.source_count = None
                                self.uptime = None


                            class Address(object):
                                """
                                Host Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                            class SourceAddress(object):
                                """
                                First 3 source addresses
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:host'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.expiration_time is not None:
                                    return True

                                if self.is_exclude is not None:
                                    return True

                                if self.source_address is not None:
                                    for child_ref in self.source_address:
                                        if child_ref._has_data():
                                            return True

                                if self.source_count is not None:
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.exclude_hosts is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.host is not None:
                                for child_ref in self.host:
                                    if child_ref._has_data():
                                        return True

                            if self.include_hosts is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.explicit_group is not None:
                            for child_ref in self.explicit_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.ExplicitGroups']['meta_info']


                class InterfaceTable(object):
                    """
                    IGMP Interface specific Table
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceTable']['meta_info']


                class InterfaceOldFormats(object):
                    """
                    IGMP Interface specific Table in old format
                    
                    .. attribute:: interface_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format = YList()
                        self.interface_old_format.parent = self
                        self.interface_old_format.name = 'interface_old_format'


                    class InterfaceOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format is not None:
                            for child_ref in self.interface_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormats']['meta_info']


                class InterfaceStateOffOldFormats(object):
                    """
                    IGMP Interface state off old format
                    
                    .. attribute:: interface_state_off_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off_old_format = YList()
                        self.interface_state_off_old_format.parent = self
                        self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                    class InterfaceStateOffOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off_old_format is not None:
                            for child_ref in self.interface_state_off_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffOldFormats']['meta_info']


                class InterfaceUnicastQosAdjusts(object):
                    """
                    IGMP Interface Unicast\-Qos\-Adjust
                    
                    .. attribute:: interface_unicast_qos_adjust
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_unicast_qos_adjust = YList()
                        self.interface_unicast_qos_adjust.parent = self
                        self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                    class InterfaceUnicastQosAdjust(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_virtual_access
                        
                        	Is VirtualAccess Interface
                        	**type**\:  bool
                        
                        .. attribute:: rate
                        
                        	Overall rate in Kbps
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: rate_decrements
                        
                        	Count of rate decrements
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rate_increments
                        
                        	Count of rate increments
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: update
                        
                        	List of updates
                        	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_virtual_access = None
                            self.rate = None
                            self.rate_decrements = None
                            self.rate_increments = None
                            self.update = YList()
                            self.update.parent = self
                            self.update.name = 'update'


                        class Update(object):
                            """
                            List of updates
                            
                            .. attribute:: group_address
                            
                            	Group address
                            	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                            
                            .. attribute:: is_add
                            
                            	Is this a rate increment
                            	**type**\:  bool
                            
                            .. attribute:: received_time
                            
                            	Time this update is received
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: source_address
                            
                            	Source address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                            
                            .. attribute:: weight
                            
                            	Weight from policy
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address = Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                                self.group_address.parent = self
                                self.is_add = None
                                self.received_time = None
                                self.source_address = Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                                self.source_address.parent = self
                                self.weight = None


                            class SourceAddress(object):
                                """
                                Source address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                            class GroupAddress(object):
                                """
                                Group address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address is not None and self.group_address._has_data():
                                    return True

                                if self.is_add is not None:
                                    return True

                                if self.received_time is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.weight is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.is_virtual_access is not None:
                                return True

                            if self.rate is not None:
                                return True

                            if self.rate_decrements is not None:
                                return True

                            if self.rate_increments is not None:
                                return True

                            if self.update is not None:
                                for child_ref in self.update:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_unicast_qos_adjust is not None:
                            for child_ref in self.interface_unicast_qos_adjust:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts']['meta_info']


                class Ranges(object):
                    """
                    Range table
                    
                    .. attribute:: range
                    
                    	Range information
                    	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Ranges.Range>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.range = YList()
                        self.range.parent = self
                        self.range.name = 'range'


                    class Range(object):
                        """
                        Range information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr>`
                        
                        .. attribute:: group_mask
                        
                        	Group Mask
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_stale
                        
                        	Is the entry stale
                        	**type**\:  bool
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: protocol
                        
                        	Protocol
                        	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Mld.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.group_mask = None
                            self.is_stale = None
                            self.prefix_length = None
                            self.protocol = None


                        class GroupAddressXr(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:range'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.group_mask is not None:
                                return True

                            if self.is_stale is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.protocol is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.Ranges.Range']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.range is not None:
                            for child_ref in self.range:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.Ranges']['meta_info']


                class IfrsInterfaces(object):
                    """
                    IGMP Interface specific
                    
                    .. attribute:: ifrs_interface
                    
                    	IGMP IFRS Interface
                    	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ifrs_interface = YList()
                        self.ifrs_interface.parent = self
                        self.ifrs_interface.name = 'ifrs_interface'


                    class IfrsInterface(object):
                        """
                        IGMP IFRS Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	IFRS Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: igmp_interface_entry
                        
                        	IGMP interface entry
                        	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                        
                        .. attribute:: join_group_count
                        
                        	Join group count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.igmp_interface_entry = Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                            self.igmp_interface_entry.parent = self
                            self.join_group_count = None


                        class IgmpInterfaceEntry(object):
                            """
                            IGMP interface entry
                            
                            .. attribute:: address
                            
                            	IP address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                            
                            .. attribute:: configuration_mcast_vrf_error
                            
                            	Is mcast error
                            	**type**\:  bool
                            
                            .. attribute:: configuration_mcast_vrf_set
                            
                            	Is mcast set
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_error
                            
                            	CFG vrf error
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_set
                            
                            	CFG vrf set
                            	**type**\:  bool
                            
                            .. attribute:: group_joins
                            
                            	No. of group joins
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: group_leaves
                            
                            	No. of group leaves
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: host_version
                            
                            	IGMP Host version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: igmp_version
                            
                            	IGMP Router version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_configurationverify
                            
                            	CFG verify
                            	**type**\:  bool
                            
                            .. attribute:: is_identity_present
                            
                            	Subscriber ID or Address available from AAA
                            	**type**\:  bool
                            
                            .. attribute:: is_im_state_registered
                            
                            	Im state registered
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_up
                            
                            	Is interface up
                            	**type**\:  bool
                            
                            .. attribute:: is_ip_enabled
                            
                            	Is IP enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_las_registered
                            
                            	LAS registered
                            	**type**\:  bool
                            
                            .. attribute:: is_las_request
                            
                            	LAS req
                            	**type**\:  bool
                            
                            .. attribute:: is_querier
                            
                            	Are we querier
                            	**type**\:  bool
                            
                            .. attribute:: is_router_enabled
                            
                            	Is Router functionality enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_subscriber
                            
                            	Subscriber interface
                            	**type**\:  bool
                            
                            .. attribute:: las_get_address_count
                            
                            	LAS get addr count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_add_update_count
                            
                            	LAS LL add update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_registration_count
                            
                            	LAS reg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_remove_update_count
                            
                            	LAS LL remove update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_null_update_count
                            
                            	LAS Null update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_unregistration_count
                            
                            	LAS unreg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_update_count
                            
                            	LAS Update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_member_query_interval
                            
                            	Last Member Query Interval
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: location
                            
                            	Location
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_tuple_count
                            
                            	MTE Tuple count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_vrf_id
                            
                            	MTE VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mtu
                            
                            	MTU
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: parent_ifhandle
                            
                            	Parent If Handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: proxy_interface
                            
                            	Proxy interface index
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: querier_address
                            
                            	Address of the Querier
                            	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                            
                            .. attribute:: querier_uptime
                            
                            	Time since the last querier took over
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_interval
                            
                            	Query Interval value in seconds
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: query_maximum_response_time
                            
                            	Max Response Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_timeout
                            
                            	Query Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: robustness
                            
                            	Robustness Variable value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_uptime_in_seconds
                            
                            	Uptime since router enabled event
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state
                            
                            	Interface state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: subscriber_address
                            
                            	Address of subscriber
                            	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                            
                            .. attribute:: subscriber_id
                            
                            	ID string of subscriber
                            	**type**\:  str
                            
                            	**length:** 0..257
                            
                            .. attribute:: subscriber_mode
                            
                            	Subscriber mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_query_in_seconds
                            
                            	Time elapsed since last query
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_report_in_seconds
                            
                            	Time elapsed since last report
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_active_groups
                            
                            	Actual number of groups on interface
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_id
                            
                            	VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_state
                            
                            	Vrf State
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                                self.address.parent = self
                                self.configuration_mcast_vrf_error = None
                                self.configuration_mcast_vrf_set = None
                                self.configurationvrf_error = None
                                self.configurationvrf_set = None
                                self.group_joins = None
                                self.group_leaves = None
                                self.host_version = None
                                self.igmp_version = None
                                self.interface_name_xr = None
                                self.is_configurationverify = None
                                self.is_identity_present = None
                                self.is_im_state_registered = None
                                self.is_interface_up = None
                                self.is_ip_enabled = None
                                self.is_las_registered = None
                                self.is_las_request = None
                                self.is_querier = None
                                self.is_router_enabled = None
                                self.is_subscriber = None
                                self.las_get_address_count = None
                                self.las_ll_add_update_count = None
                                self.las_ll_registration_count = None
                                self.las_ll_remove_update_count = None
                                self.las_null_update_count = None
                                self.las_unregistration_count = None
                                self.las_update_count = None
                                self.last_member_query_interval = None
                                self.location = None
                                self.mte_tuple_count = None
                                self.mte_vrf_id = None
                                self.mtu = None
                                self.parent_ifhandle = None
                                self.prefix_length = None
                                self.proxy_interface = None
                                self.querier_address = Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                                self.querier_address.parent = self
                                self.querier_uptime = None
                                self.query_interval = None
                                self.query_maximum_response_time = None
                                self.query_timeout = None
                                self.robustness = None
                                self.router_uptime_in_seconds = None
                                self.state = None
                                self.subscriber_address = Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                                self.subscriber_address.parent = self
                                self.subscriber_id = None
                                self.subscriber_mode = None
                                self.time_since_last_query_in_seconds = None
                                self.time_since_last_report_in_seconds = None
                                self.total_active_groups = None
                                self.vrf_id = None
                                self.vrf_state = None


                            class Address(object):
                                """
                                IP address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                            class QuerierAddress(object):
                                """
                                Address of the Querier
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                            class SubscriberAddress(object):
                                """
                                Address of subscriber
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.configuration_mcast_vrf_error is not None:
                                    return True

                                if self.configuration_mcast_vrf_set is not None:
                                    return True

                                if self.configurationvrf_error is not None:
                                    return True

                                if self.configurationvrf_set is not None:
                                    return True

                                if self.group_joins is not None:
                                    return True

                                if self.group_leaves is not None:
                                    return True

                                if self.host_version is not None:
                                    return True

                                if self.igmp_version is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_configurationverify is not None:
                                    return True

                                if self.is_identity_present is not None:
                                    return True

                                if self.is_im_state_registered is not None:
                                    return True

                                if self.is_interface_up is not None:
                                    return True

                                if self.is_ip_enabled is not None:
                                    return True

                                if self.is_las_registered is not None:
                                    return True

                                if self.is_las_request is not None:
                                    return True

                                if self.is_querier is not None:
                                    return True

                                if self.is_router_enabled is not None:
                                    return True

                                if self.is_subscriber is not None:
                                    return True

                                if self.las_get_address_count is not None:
                                    return True

                                if self.las_ll_add_update_count is not None:
                                    return True

                                if self.las_ll_registration_count is not None:
                                    return True

                                if self.las_ll_remove_update_count is not None:
                                    return True

                                if self.las_null_update_count is not None:
                                    return True

                                if self.las_unregistration_count is not None:
                                    return True

                                if self.las_update_count is not None:
                                    return True

                                if self.last_member_query_interval is not None:
                                    return True

                                if self.location is not None:
                                    return True

                                if self.mte_tuple_count is not None:
                                    return True

                                if self.mte_vrf_id is not None:
                                    return True

                                if self.mtu is not None:
                                    return True

                                if self.parent_ifhandle is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.proxy_interface is not None:
                                    return True

                                if self.querier_address is not None and self.querier_address._has_data():
                                    return True

                                if self.querier_uptime is not None:
                                    return True

                                if self.query_interval is not None:
                                    return True

                                if self.query_maximum_response_time is not None:
                                    return True

                                if self.query_timeout is not None:
                                    return True

                                if self.robustness is not None:
                                    return True

                                if self.router_uptime_in_seconds is not None:
                                    return True

                                if self.state is not None:
                                    return True

                                if self.subscriber_address is not None and self.subscriber_address._has_data():
                                    return True

                                if self.subscriber_id is not None:
                                    return True

                                if self.subscriber_mode is not None:
                                    return True

                                if self.time_since_last_query_in_seconds is not None:
                                    return True

                                if self.time_since_last_report_in_seconds is not None:
                                    return True

                                if self.total_active_groups is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                if self.vrf_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                                return True

                            if self.join_group_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ifrs_interface is not None:
                            for child_ref in self.ifrs_interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaces']['meta_info']


                class TrafficCounters(object):
                    """
                    IGMP Message Traffic Counters
                    
                    .. attribute:: auxillary_data_length_errors
                    
                    	AuxDataLen errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: bad_scope_errors
                    
                    	BadScope errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: checksum_errors
                    
                    	Checksum errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: elapsed_time
                    
                    	Running time for counters
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: format_errors
                    
                    	Malformed packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: get_packet_failure
                    
                    	Packet get failed
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_disabled_idb
                    
                    	Packet received on disabled idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_dvmrp
                    
                    	DVMRP packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_leaves
                    
                    	Leaves in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_martian_address
                    
                    	Packets received with Martian Address
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_mtrace
                    
                    	Mtrace packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_assigned_vrf_id
                    
                    	Packets received with no assigned vrf id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_idb
                    
                    	Packets received without idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_platform_support_mtrace
                    
                    	mtrace packets without platform support
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_in_idb
                    
                    	Packets received on idb without VRF
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_mtrace
                    
                    	mtrace packets with no vrf associated
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_pim
                    
                    	PIM packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_queries
                    
                    	Query packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_reports
                    
                    	Reports in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: invalid_source_address_errors
                    
                    	Invalid Source Address errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: miscellaneous_errors
                    
                    	Packets dropped for other reasons
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: no_socket_connection
                    
                    	Packets dropped since no socket connection
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_dvmrp
                    
                    	DVMRP packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_leaves
                    
                    	Leaves out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_mtrace
                    
                    	Mtrace packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_no_parent_interface_handle
                    
                    	Failures setting 2nd ifhandle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_pim
                    
                    	PIM packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_queries
                    
                    	Query packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_reports
                    
                    	Reports out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_input_errors
                    
                    	Incoming Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_output_errors
                    
                    	Outgoing Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_in
                    
                    	Packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_out
                    
                    	Packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: receive_socket_errors
                    
                    	Socket errors on reception
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: socket_errors
                    
                    	Socket errors on send
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.auxillary_data_length_errors = None
                        self.bad_scope_errors = None
                        self.checksum_errors = None
                        self.elapsed_time = None
                        self.format_errors = None
                        self.get_packet_failure = None
                        self.input_disabled_idb = None
                        self.input_dvmrp = None
                        self.input_leaves = None
                        self.input_martian_address = None
                        self.input_mtrace = None
                        self.input_no_assigned_vrf_id = None
                        self.input_no_idb = None
                        self.input_no_platform_support_mtrace = None
                        self.input_no_vrf_in_idb = None
                        self.input_no_vrf_mtrace = None
                        self.input_pim = None
                        self.input_queries = None
                        self.input_reports = None
                        self.invalid_source_address_errors = None
                        self.miscellaneous_errors = None
                        self.no_socket_connection = None
                        self.output_dvmrp = None
                        self.output_leaves = None
                        self.output_mtrace = None
                        self.output_no_parent_interface_handle = None
                        self.output_pim = None
                        self.output_queries = None
                        self.output_reports = None
                        self.packet_manager_input_errors = None
                        self.packet_manager_output_errors = None
                        self.packets_in = None
                        self.packets_out = None
                        self.receive_socket_errors = None
                        self.socket_errors = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.auxillary_data_length_errors is not None:
                            return True

                        if self.bad_scope_errors is not None:
                            return True

                        if self.checksum_errors is not None:
                            return True

                        if self.elapsed_time is not None:
                            return True

                        if self.format_errors is not None:
                            return True

                        if self.get_packet_failure is not None:
                            return True

                        if self.input_disabled_idb is not None:
                            return True

                        if self.input_dvmrp is not None:
                            return True

                        if self.input_leaves is not None:
                            return True

                        if self.input_martian_address is not None:
                            return True

                        if self.input_mtrace is not None:
                            return True

                        if self.input_no_assigned_vrf_id is not None:
                            return True

                        if self.input_no_idb is not None:
                            return True

                        if self.input_no_platform_support_mtrace is not None:
                            return True

                        if self.input_no_vrf_in_idb is not None:
                            return True

                        if self.input_no_vrf_mtrace is not None:
                            return True

                        if self.input_pim is not None:
                            return True

                        if self.input_queries is not None:
                            return True

                        if self.input_reports is not None:
                            return True

                        if self.invalid_source_address_errors is not None:
                            return True

                        if self.miscellaneous_errors is not None:
                            return True

                        if self.no_socket_connection is not None:
                            return True

                        if self.output_dvmrp is not None:
                            return True

                        if self.output_leaves is not None:
                            return True

                        if self.output_mtrace is not None:
                            return True

                        if self.output_no_parent_interface_handle is not None:
                            return True

                        if self.output_pim is not None:
                            return True

                        if self.output_queries is not None:
                            return True

                        if self.output_reports is not None:
                            return True

                        if self.packet_manager_input_errors is not None:
                            return True

                        if self.packet_manager_output_errors is not None:
                            return True

                        if self.packets_in is not None:
                            return True

                        if self.packets_out is not None:
                            return True

                        if self.receive_socket_errors is not None:
                            return True

                        if self.socket_errors is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.TrafficCounters']['meta_info']


                class Groups(object):
                    """
                    IGMP Group Database Table
                    
                    .. attribute:: group
                    
                    	IGMP Group Entry Information
                    	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Groups.Group>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group = YList()
                        self.group.parent = self
                        self.group.name = 'group'


                    class Group(object):
                        """
                        IGMP Group Entry Information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Groups.Group.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.Groups.Group.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address = None
                            self.group_address_xr = Mld.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name = None
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Active.Vrfs.Vrf.Groups.Group.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Active.Vrfs.Vrf.Groups.Group.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.Groups.Group.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.Groups.Group.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.Groups.Group']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group is not None:
                            for child_ref in self.group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.Groups']['meta_info']


                class GroupSummary(object):
                    """
                    IGMP Groups Summary
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: groutes
                    
                    	No. of (\*,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: sg_routes
                    
                    	No. of (S,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.groutes = None
                        self.is_low_memory = None
                        self.sg_routes = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.groutes is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.sg_routes is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.GroupSummary']['meta_info']


                class IfrsInterfaceSummary(object):
                    """
                    IGMP IFRS Interface summary
                    
                    .. attribute:: configuration_count
                    
                    	Configuration count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_count
                    
                    	Interface Count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.configuration_count = None
                        self.interface_count = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.configuration_count is not None:
                            return True

                        if self.interface_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.IfrsInterfaceSummary']['meta_info']


                class GlobalInterfaceTable(object):
                    """
                    IGMP Global Interface 
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.GlobalInterfaceTable']['meta_info']


                class SsmMapDetails(object):
                    """
                    SSM Map Detail
                    
                    .. attribute:: ssm_map_detail
                    
                    	SSM Map Detail Table information
                    	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map_detail = YList()
                        self.ssm_map_detail.parent = self
                        self.ssm_map_detail.name = 'ssm_map_detail'


                    class SsmMapDetail(object):
                        """
                        SSM Map Detail Table information
                        
                        .. attribute:: elapsed_time
                        
                        	Elapsed time
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: expiration_time
                        
                        	Expiration Time in Seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: map_info
                        
                        	Basic Map Info
                        	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo>`
                        
                        .. attribute:: query_interval
                        
                        	Query interval
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: response_pending
                        
                        	Response Pending
                        	**type**\:  bool
                        
                        .. attribute:: sources
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources>`
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.elapsed_time = None
                            self.expiration_time = None
                            self.group_address = None
                            self.map_info = Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo()
                            self.map_info.parent = self
                            self.query_interval = None
                            self.response_pending = None
                            self.sources = YList()
                            self.sources.parent = self
                            self.sources.name = 'sources'
                            self.ssm_map_type = None


                        class MapInfo(object):
                            """
                            Basic Map Info
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                            
                            .. attribute:: map_type
                            
                            	Map Type of group
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_counts
                            
                            	Count of Sources
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address_xr = Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.map_type = None
                                self.source_counts = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.map_type is not None:
                                    return True

                                if self.source_counts is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                        class Sources(object):
                            """
                            List of sources
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.elapsed_time is not None:
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.map_info is not None and self.map_info._has_data():
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.response_pending is not None:
                                return True

                            if self.sources is not None:
                                for child_ref in self.sources:
                                    if child_ref._has_data():
                                        return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map_detail is not None:
                            for child_ref in self.ssm_map_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.SsmMapDetails']['meta_info']


                class InterfaceStateOffs(object):
                    """
                    IGMP Interface state off
                    
                    .. attribute:: interface_state_off
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off = YList()
                        self.interface_state_off.parent = self
                        self.interface_state_off.name = 'interface_state_off'


                    class InterfaceStateOff(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off is not None:
                            for child_ref in self.interface_state_off:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceStateOffs']['meta_info']


                class InterfaceOldFormatStateOns(object):
                    """
                    IGMP Interface state on old format
                    
                    .. attribute:: interface_old_format_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format_state_on = YList()
                        self.interface_old_format_state_on.parent = self
                        self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                    class InterfaceOldFormatStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format_state_on is not None:
                            for child_ref in self.interface_old_format_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Vrfs.Vrf.InterfaceOldFormatStateOns']['meta_info']

                @property
                def _common_path(self):
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:vrfs/Cisco-IOS-XR-ipv4-igmp-oper:vrf[Cisco-IOS-XR-ipv4-igmp-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.vrf_name is not None:
                        return True

                    if self.detail_groups is not None and self.detail_groups._has_data():
                        return True

                    if self.explicit_groups is not None and self.explicit_groups._has_data():
                        return True

                    if self.global_interface_table is not None and self.global_interface_table._has_data():
                        return True

                    if self.group_summary is not None and self.group_summary._has_data():
                        return True

                    if self.groups is not None and self.groups._has_data():
                        return True

                    if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                        return True

                    if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                        return True

                    if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                        return True

                    if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                        return True

                    if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                        return True

                    if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                        return True

                    if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                        return True

                    if self.interface_table is not None and self.interface_table._has_data():
                        return True

                    if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                        return True

                    if self.non_active_groups is not None and self.non_active_groups._has_data():
                        return True

                    if self.ranges is not None and self.ranges._has_data():
                        return True

                    if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                        return True

                    if self.ssm_maps is not None and self.ssm_maps._has_data():
                        return True

                    if self.summary is not None and self.summary._has_data():
                        return True

                    if self.traffic_counters is not None and self.traffic_counters._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Vrfs.Vrf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.vrf is not None:
                    for child_ref in self.vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Active.Vrfs']['meta_info']


        class Process(object):
            """
            Process
            
            .. attribute:: amt_gatewaies
            
            	Table containing AMT Gateway DataBase information
            	**type**\:   :py:class:`AmtGatewaies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.AmtGatewaies>`
            
            .. attribute:: amt_summary
            
            	MRIB RouteDB Expiry Information
            	**type**\:   :py:class:`AmtSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.AmtSummary>`
            
            .. attribute:: bvi_statistics
            
            	IGMP BVI Stats
            	**type**\:   :py:class:`BviStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.BviStatistics>`
            
            .. attribute:: nsf
            
            	NSF Information
            	**type**\:   :py:class:`Nsf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.Nsf>`
            
            .. attribute:: nsr
            
            	NSR Information
            	**type**\:   :py:class:`Nsr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.Nsr>`
            
            .. attribute:: unicast_qos_adjust_stats
            
            	IGMP Unicast\-Qos\-Adjust Statistics
            	**type**\:   :py:class:`UnicastQosAdjustStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.UnicastQosAdjustStats>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.amt_gatewaies = Mld.Active.Process.AmtGatewaies()
                self.amt_gatewaies.parent = self
                self.amt_summary = Mld.Active.Process.AmtSummary()
                self.amt_summary.parent = self
                self.bvi_statistics = Mld.Active.Process.BviStatistics()
                self.bvi_statistics.parent = self
                self.nsf = Mld.Active.Process.Nsf()
                self.nsf.parent = self
                self.nsr = Mld.Active.Process.Nsr()
                self.nsr.parent = self
                self.unicast_qos_adjust_stats = Mld.Active.Process.UnicastQosAdjustStats()
                self.unicast_qos_adjust_stats.parent = self


            class AmtSummary(object):
                """
                MRIB RouteDB Expiry Information
                
                .. attribute:: anycast_prefix
                
                	Robustness variable
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: gateway_count
                
                	Number of AMT Gateway
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_acl_configured
                
                	ACL configured under AMT
                	**type**\:  bool
                
                .. attribute:: is_gateway_simulation
                
                	AMT Gateway Simulation
                	**type**\:  bool
                
                .. attribute:: is_ou_of_resource
                
                	AMT Out Of Resource
                	**type**\:  bool
                
                .. attribute:: max_gateway
                
                	Maximum Gateway allowed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mtu
                
                	AMT Tunnel MTU
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: prefix_length
                
                	Advertize AMT prefix length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: query_interval
                
                	AMT Query interval
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: relay_address
                
                	Advertaisment for AMT Relay address
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: tos
                
                	Type Of Service value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ttl
                
                	Time To Live value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_configured_maximum
                
                	AMT Tunnel configured Maximum
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_count
                
                	AMT Tunnel Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.anycast_prefix = None
                    self.gateway_count = None
                    self.is_acl_configured = None
                    self.is_gateway_simulation = None
                    self.is_ou_of_resource = None
                    self.max_gateway = None
                    self.mtu = None
                    self.prefix_length = None
                    self.query_interval = None
                    self.relay_address = None
                    self.tos = None
                    self.ttl = None
                    self.tunnel_configured_maximum = None
                    self.tunnel_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.anycast_prefix is not None:
                        return True

                    if self.gateway_count is not None:
                        return True

                    if self.is_acl_configured is not None:
                        return True

                    if self.is_gateway_simulation is not None:
                        return True

                    if self.is_ou_of_resource is not None:
                        return True

                    if self.max_gateway is not None:
                        return True

                    if self.mtu is not None:
                        return True

                    if self.prefix_length is not None:
                        return True

                    if self.query_interval is not None:
                        return True

                    if self.relay_address is not None:
                        return True

                    if self.tos is not None:
                        return True

                    if self.ttl is not None:
                        return True

                    if self.tunnel_configured_maximum is not None:
                        return True

                    if self.tunnel_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.AmtSummary']['meta_info']


            class Nsr(object):
                """
                NSR Information
                
                .. attribute:: collab_conv_done
                
                	Collaborators convergence done
                	**type**\:  bool
                
                .. attribute:: count_proc_connection_dn
                
                	No. of times process connection went down
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_proc_connection_up
                
                	No. of times process connection went up
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_not_ready
                
                	No. of times RMF Not Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_ready
                
                	No. of times RMF Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_proc
                
                	Time when process came up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_dn
                
                	Time when process connection went down
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_up
                
                	Time when process connection went up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_not_ready
                
                	Time when RMF Not\-Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_ready
                
                	Time when RMF Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: partner_proc_connected
                
                	Partner process connected
                	**type**\:  bool
                
                .. attribute:: rmf_notification_done
                
                	RMF Notification done
                	**type**\:  bool
                
                .. attribute:: state
                
                	NSR state
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.collab_conv_done = None
                    self.count_proc_connection_dn = None
                    self.count_proc_connection_up = None
                    self.count_rmf_not_ready = None
                    self.count_rmf_ready = None
                    self.last_proc = None
                    self.last_proc_connection_dn = None
                    self.last_proc_connection_up = None
                    self.last_rmf_not_ready = None
                    self.last_rmf_ready = None
                    self.partner_proc_connected = None
                    self.rmf_notification_done = None
                    self.state = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsr'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.collab_conv_done is not None:
                        return True

                    if self.count_proc_connection_dn is not None:
                        return True

                    if self.count_proc_connection_up is not None:
                        return True

                    if self.count_rmf_not_ready is not None:
                        return True

                    if self.count_rmf_ready is not None:
                        return True

                    if self.last_proc is not None:
                        return True

                    if self.last_proc_connection_dn is not None:
                        return True

                    if self.last_proc_connection_up is not None:
                        return True

                    if self.last_rmf_not_ready is not None:
                        return True

                    if self.last_rmf_ready is not None:
                        return True

                    if self.partner_proc_connected is not None:
                        return True

                    if self.rmf_notification_done is not None:
                        return True

                    if self.state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.Nsr']['meta_info']


            class AmtGatewaies(object):
                """
                Table containing AMT Gateway DataBase
                information
                
                .. attribute:: amt_gateway
                
                	AMT Gateway DataBase information
                	**type**\: list of    :py:class:`AmtGateway <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.Process.AmtGatewaies.AmtGateway>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.amt_gateway = YList()
                    self.amt_gateway.parent = self
                    self.amt_gateway.name = 'amt_gateway'


                class AmtGateway(object):
                    """
                    AMT Gateway DataBase information
                    
                    .. attribute:: amt_nonce
                    
                    	Nonce
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amt_port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amtgw
                    
                    	GW
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: amtnh
                    
                    	AMT NH
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: gateway_address
                    
                    	Gateway Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: idb
                    
                    	IDB
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: key_len
                    
                    	Len
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_in
                    
                    	UpdIn
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_out
                    
                    	UpdOut
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.amt_nonce = None
                        self.amt_port = None
                        self.amtgw = None
                        self.amtnh = None
                        self.gateway_address = None
                        self.idb = None
                        self.key_len = None
                        self.mem_upd_in = None
                        self.mem_upd_out = None
                        self.port = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies/Cisco-IOS-XR-ipv4-igmp-oper:amt-gateway'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.amt_nonce is not None:
                            return True

                        if self.amt_port is not None:
                            return True

                        if self.amtgw is not None:
                            return True

                        if self.amtnh is not None:
                            return True

                        if self.gateway_address is not None:
                            return True

                        if self.idb is not None:
                            return True

                        if self.key_len is not None:
                            return True

                        if self.mem_upd_in is not None:
                            return True

                        if self.mem_upd_out is not None:
                            return True

                        if self.port is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.Process.AmtGatewaies.AmtGateway']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.amt_gateway is not None:
                        for child_ref in self.amt_gateway:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.AmtGatewaies']['meta_info']


            class UnicastQosAdjustStats(object):
                """
                IGMP Unicast\-Qos\-Adjust Statistics
                
                .. attribute:: add_to_batches
                
                	Add to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: batches
                
                	I2Q Rate Batch count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: delete_to_batches
                
                	Delete to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_qos_s_sweeped
                
                	Is QOS Sweeped once 
                	**type**\:  bool
                
                .. attribute:: is_resync_received
                
                	Is Resync request received
                	**type**\:  bool
                
                .. attribute:: is_resync_required
                
                	Is Resync required
                	**type**\:  bool
                
                .. attribute:: is_resync_start_sent
                
                	Is Resync Start message sent
                	**type**\:  bool
                
                .. attribute:: last_download_time
                
                	Time elapsed since Last download to QOS in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: last_sweep_time
                
                	Time elapsed since Last mark and sweep in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: queues
                
                	I2Q Queue count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: received_resync_requests
                
                	Number of Resync request received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_comm_errors
                
                	Send Error due to comms count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_errors
                
                	Number of Send errors in batch
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_partial_errors
                
                	Send Error due to partial issue count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_success
                
                	Send Success count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: sent_resync_bulks
                
                	Number of bulks sent for last resync received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.add_to_batches = None
                    self.batches = None
                    self.delete_to_batches = None
                    self.is_qos_s_sweeped = None
                    self.is_resync_received = None
                    self.is_resync_required = None
                    self.is_resync_start_sent = None
                    self.last_download_time = None
                    self.last_sweep_time = None
                    self.queues = None
                    self.received_resync_requests = None
                    self.send_comm_errors = None
                    self.send_errors = None
                    self.send_partial_errors = None
                    self.send_success = None
                    self.sent_resync_bulks = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:unicast-qos-adjust-stats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.add_to_batches is not None:
                        return True

                    if self.batches is not None:
                        return True

                    if self.delete_to_batches is not None:
                        return True

                    if self.is_qos_s_sweeped is not None:
                        return True

                    if self.is_resync_received is not None:
                        return True

                    if self.is_resync_required is not None:
                        return True

                    if self.is_resync_start_sent is not None:
                        return True

                    if self.last_download_time is not None:
                        return True

                    if self.last_sweep_time is not None:
                        return True

                    if self.queues is not None:
                        return True

                    if self.received_resync_requests is not None:
                        return True

                    if self.send_comm_errors is not None:
                        return True

                    if self.send_errors is not None:
                        return True

                    if self.send_partial_errors is not None:
                        return True

                    if self.send_success is not None:
                        return True

                    if self.sent_resync_bulks is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.UnicastQosAdjustStats']['meta_info']


            class BviStatistics(object):
                """
                IGMP BVI Stats
                
                .. attribute:: null_buffer_handles
                
                	Number of AIPC NULL buffer handles
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_buffers
                
                	Number of AIPC buffers received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_buffers
                
                	Number of AIPC buffers released
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_fail_buffers
                
                	Number of AIPC buffers release failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_igmp_packet_success
                
                	Number of IGMP protocol messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_close_notif
                
                	Number of AIPC close notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_connect_notif
                
                	Number of AIPC connect notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_error_notif
                
                	Number of AIPC error notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_input_wait_notif
                
                	Number of AIPC input waiting notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_lwm_notif
                
                	Number of AIPC LWM notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_open_notif
                
                	Number of AIPC open notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_output_notif
                
                	Number of AIPC output notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_publish_notif
                
                	Number of AIPC publish notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_q_full_notif
                
                	Number of AIPC queue full notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_send_status_notif
                
                	Number of AIPC send status notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_blocks
                
                	Number of AIPC buffers send blocked
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffer_errors
                
                	Number of AIPC transmission errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffers
                
                	Number of AIPC buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_mrouter_buffers
                
                	Number of IGMP Mrouter buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_protocol_buffers
                
                	Number of IGMP protocol buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_buffers
                
                	Number of IGMP Unknown buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_dc
                
                	Number of WTX messages dropped due to disconnect
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_nomem
                
                	Number of WTX messages dropped to memory
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_freed
                
                	Number of WTX messages freed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_proto_sent
                
                	Number of WTX messages sent to Protocol
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_recvd
                
                	Number of WTX messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_sent
                
                	Number of WTX messages sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.null_buffer_handles = None
                    self.receive_buffers = None
                    self.release_buffers = None
                    self.release_fail_buffers = None
                    self.rx_add_mrouter_msg = None
                    self.rx_delete_mrouter_msg = None
                    self.rx_igmp_packet_success = None
                    self.rx_ipc_close_notif = None
                    self.rx_ipc_connect_notif = None
                    self.rx_ipc_error_notif = None
                    self.rx_ipc_input_wait_notif = None
                    self.rx_ipc_lwm_notif = None
                    self.rx_ipc_open_notif = None
                    self.rx_ipc_output_notif = None
                    self.rx_ipc_publish_notif = None
                    self.rx_ipc_q_full_notif = None
                    self.rx_ipc_send_status_notif = None
                    self.rx_sweep_mrouter_msg = None
                    self.rx_unknown_mrouter_msg = None
                    self.send_blocks = None
                    self.tx_add_mrouter_msg = None
                    self.tx_buffer_errors = None
                    self.tx_buffers = None
                    self.tx_delete_mrouter_msg = None
                    self.tx_mrouter_buffers = None
                    self.tx_protocol_buffers = None
                    self.tx_sweep_mrouter_msg = None
                    self.tx_unknown_buffers = None
                    self.tx_unknown_mrouter_msg = None
                    self.wtx_msg_drop_dc = None
                    self.wtx_msg_drop_nomem = None
                    self.wtx_msg_freed = None
                    self.wtx_msg_proto_sent = None
                    self.wtx_msg_recvd = None
                    self.wtx_msg_sent = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:bvi-statistics'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.null_buffer_handles is not None:
                        return True

                    if self.receive_buffers is not None:
                        return True

                    if self.release_buffers is not None:
                        return True

                    if self.release_fail_buffers is not None:
                        return True

                    if self.rx_add_mrouter_msg is not None:
                        return True

                    if self.rx_delete_mrouter_msg is not None:
                        return True

                    if self.rx_igmp_packet_success is not None:
                        return True

                    if self.rx_ipc_close_notif is not None:
                        return True

                    if self.rx_ipc_connect_notif is not None:
                        return True

                    if self.rx_ipc_error_notif is not None:
                        return True

                    if self.rx_ipc_input_wait_notif is not None:
                        return True

                    if self.rx_ipc_lwm_notif is not None:
                        return True

                    if self.rx_ipc_open_notif is not None:
                        return True

                    if self.rx_ipc_output_notif is not None:
                        return True

                    if self.rx_ipc_publish_notif is not None:
                        return True

                    if self.rx_ipc_q_full_notif is not None:
                        return True

                    if self.rx_ipc_send_status_notif is not None:
                        return True

                    if self.rx_sweep_mrouter_msg is not None:
                        return True

                    if self.rx_unknown_mrouter_msg is not None:
                        return True

                    if self.send_blocks is not None:
                        return True

                    if self.tx_add_mrouter_msg is not None:
                        return True

                    if self.tx_buffer_errors is not None:
                        return True

                    if self.tx_buffers is not None:
                        return True

                    if self.tx_delete_mrouter_msg is not None:
                        return True

                    if self.tx_mrouter_buffers is not None:
                        return True

                    if self.tx_protocol_buffers is not None:
                        return True

                    if self.tx_sweep_mrouter_msg is not None:
                        return True

                    if self.tx_unknown_buffers is not None:
                        return True

                    if self.tx_unknown_mrouter_msg is not None:
                        return True

                    if self.wtx_msg_drop_dc is not None:
                        return True

                    if self.wtx_msg_drop_nomem is not None:
                        return True

                    if self.wtx_msg_freed is not None:
                        return True

                    if self.wtx_msg_proto_sent is not None:
                        return True

                    if self.wtx_msg_recvd is not None:
                        return True

                    if self.wtx_msg_sent is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.BviStatistics']['meta_info']


            class Nsf(object):
                """
                NSF Information
                
                .. attribute:: is_multicast_nsf_active
                
                	Is Multicast NSF active
                	**type**\:  bool
                
                .. attribute:: last_icd_notif_recv
                
                	Last ICD Notif Recv
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_icd_notif_recv_min
                
                	Last ICD Notif Recv in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_off
                
                	Last NSF time off
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_off_min
                
                	Last NSF time OFF in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_on
                
                	Last NSF time ON
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_on_min
                
                	Last NSF time ON in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_time_left
                
                	Multicast NSF time remaining in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_timeout
                
                	Multicast NSF timeout in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: respawn_count
                
                	Respawn Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.is_multicast_nsf_active = None
                    self.last_icd_notif_recv = None
                    self.last_icd_notif_recv_min = None
                    self.last_nsf_off = None
                    self.last_nsf_off_min = None
                    self.last_nsf_on = None
                    self.last_nsf_on_min = None
                    self.multicast_nsf_time_left = None
                    self.multicast_nsf_timeout = None
                    self.respawn_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsf'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.is_multicast_nsf_active is not None:
                        return True

                    if self.last_icd_notif_recv is not None:
                        return True

                    if self.last_icd_notif_recv_min is not None:
                        return True

                    if self.last_nsf_off is not None:
                        return True

                    if self.last_nsf_off_min is not None:
                        return True

                    if self.last_nsf_on is not None:
                        return True

                    if self.last_nsf_on_min is not None:
                        return True

                    if self.multicast_nsf_time_left is not None:
                        return True

                    if self.multicast_nsf_timeout is not None:
                        return True

                    if self.respawn_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.Process.Nsf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.amt_gatewaies is not None and self.amt_gatewaies._has_data():
                    return True

                if self.amt_summary is not None and self.amt_summary._has_data():
                    return True

                if self.bvi_statistics is not None and self.bvi_statistics._has_data():
                    return True

                if self.nsf is not None and self.nsf._has_data():
                    return True

                if self.nsr is not None and self.nsr._has_data():
                    return True

                if self.unicast_qos_adjust_stats is not None and self.unicast_qos_adjust_stats._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Active.Process']['meta_info']


        class DefaultContext(object):
            """
            Default Context
            
            .. attribute:: detail_groups
            
            	IGMP Detail Group Database
            	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups>`
            
            .. attribute:: explicit_groups
            
            	IGMP Explicit Group Database
            	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups>`
            
            .. attribute:: global_interface_table
            
            	IGMP Global Interface 
            	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GlobalInterfaceTable>`
            
            .. attribute:: group_summary
            
            	IGMP Groups Summary
            	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GroupSummary>`
            
            .. attribute:: groups
            
            	IGMP Group Database Table
            	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Groups>`
            
            .. attribute:: ifrs_interface_summary
            
            	IGMP IFRS Interface summary
            	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaceSummary>`
            
            .. attribute:: ifrs_interfaces
            
            	IGMP Interface specific
            	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces>`
            
            .. attribute:: interface_old_format_state_ons
            
            	IGMP Interface state on old format
            	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormatStateOns>`
            
            .. attribute:: interface_old_formats
            
            	IGMP Interface specific Table in old format
            	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormats>`
            
            .. attribute:: interface_state_off_old_formats
            
            	IGMP Interface state off old format
            	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffOldFormats>`
            
            .. attribute:: interface_state_offs
            
            	IGMP Interface state off
            	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffs>`
            
            .. attribute:: interface_state_ons
            
            	IGMP Interface state on
            	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOns>`
            
            .. attribute:: interface_table
            
            	IGMP Interface specific Table
            	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceTable>`
            
            .. attribute:: interface_unicast_qos_adjusts
            
            	IGMP Interface Unicast\-Qos\-Adjust
            	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts>`
            
            .. attribute:: non_active_groups
            
            	IGMP Non\-Active Groups Information
            	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.NonActiveGroups>`
            
            .. attribute:: ranges
            
            	Range table
            	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Ranges>`
            
            .. attribute:: ssm_map_details
            
            	SSM Map Detail
            	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMapDetails>`
            
            .. attribute:: ssm_maps
            
            	SSM Map Table
            	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMaps>`
            
            .. attribute:: summary
            
            	IGMP Summary Information
            	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Summary>`
            
            .. attribute:: traffic_counters
            
            	IGMP Message Traffic Counters
            	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.TrafficCounters>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.detail_groups = Mld.Active.DefaultContext.DetailGroups()
                self.detail_groups.parent = self
                self.explicit_groups = Mld.Active.DefaultContext.ExplicitGroups()
                self.explicit_groups.parent = self
                self.global_interface_table = Mld.Active.DefaultContext.GlobalInterfaceTable()
                self.global_interface_table.parent = self
                self.group_summary = Mld.Active.DefaultContext.GroupSummary()
                self.group_summary.parent = self
                self.groups = Mld.Active.DefaultContext.Groups()
                self.groups.parent = self
                self.ifrs_interface_summary = Mld.Active.DefaultContext.IfrsInterfaceSummary()
                self.ifrs_interface_summary.parent = self
                self.ifrs_interfaces = Mld.Active.DefaultContext.IfrsInterfaces()
                self.ifrs_interfaces.parent = self
                self.interface_old_format_state_ons = Mld.Active.DefaultContext.InterfaceOldFormatStateOns()
                self.interface_old_format_state_ons.parent = self
                self.interface_old_formats = Mld.Active.DefaultContext.InterfaceOldFormats()
                self.interface_old_formats.parent = self
                self.interface_state_off_old_formats = Mld.Active.DefaultContext.InterfaceStateOffOldFormats()
                self.interface_state_off_old_formats.parent = self
                self.interface_state_offs = Mld.Active.DefaultContext.InterfaceStateOffs()
                self.interface_state_offs.parent = self
                self.interface_state_ons = Mld.Active.DefaultContext.InterfaceStateOns()
                self.interface_state_ons.parent = self
                self.interface_table = Mld.Active.DefaultContext.InterfaceTable()
                self.interface_table.parent = self
                self.interface_unicast_qos_adjusts = Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts()
                self.interface_unicast_qos_adjusts.parent = self
                self.non_active_groups = Mld.Active.DefaultContext.NonActiveGroups()
                self.non_active_groups.parent = self
                self.ranges = Mld.Active.DefaultContext.Ranges()
                self.ranges.parent = self
                self.ssm_map_details = Mld.Active.DefaultContext.SsmMapDetails()
                self.ssm_map_details.parent = self
                self.ssm_maps = Mld.Active.DefaultContext.SsmMaps()
                self.ssm_maps.parent = self
                self.summary = Mld.Active.DefaultContext.Summary()
                self.summary.parent = self
                self.traffic_counters = Mld.Active.DefaultContext.TrafficCounters()
                self.traffic_counters.parent = self


            class Summary(object):
                """
                IGMP Summary Information
                
                .. attribute:: disabled_interface_count
                
                	No. of disabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: enabled_interface_count
                
                	No. of enabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_limit
                
                	Maximum groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface
                
                	Maximum and current groups accepted for each interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Summary.Interface>`
                
                .. attribute:: is_disabled
                
                	Is maximum enforcement disabled
                	**type**\:  bool
                
                .. attribute:: node_low_memory
                
                	Is node in low memory condition
                	**type**\:  bool
                
                .. attribute:: robustness
                
                	Robustness variable
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: supported_interfaces
                
                	No. of supported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_mte_config_count
                
                	No. of static group commands
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: unsupported_interfaces
                
                	No. of unsupported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.disabled_interface_count = None
                    self.enabled_interface_count = None
                    self.group_count = None
                    self.group_limit = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'
                    self.is_disabled = None
                    self.node_low_memory = None
                    self.robustness = None
                    self.supported_interfaces = None
                    self.tunnel_mte_config_count = None
                    self.unsupported_interfaces = None


                class Interface(object):
                    """
                    Maximum and current groups accepted for each
                    interface
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: on_off
                    
                    	Enabled/Disabled
                    	**type**\:  bool
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent if handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Time elapsed since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface_name = None
                        self.on_off = None
                        self.parent_ifhandle = None
                        self.router_uptime_in_seconds = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.on_off is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.Summary.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.disabled_interface_count is not None:
                        return True

                    if self.enabled_interface_count is not None:
                        return True

                    if self.group_count is not None:
                        return True

                    if self.group_limit is not None:
                        return True

                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    if self.is_disabled is not None:
                        return True

                    if self.node_low_memory is not None:
                        return True

                    if self.robustness is not None:
                        return True

                    if self.supported_interfaces is not None:
                        return True

                    if self.tunnel_mte_config_count is not None:
                        return True

                    if self.unsupported_interfaces is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.Summary']['meta_info']


            class InterfaceStateOns(object):
                """
                IGMP Interface state on
                
                .. attribute:: interface_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_on = YList()
                    self.interface_state_on.parent = self
                    self.interface_state_on.name = 'interface_state_on'


                class InterfaceStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_on is not None:
                        for child_ref in self.interface_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOns']['meta_info']


            class DetailGroups(object):
                """
                IGMP Detail Group Database
                
                .. attribute:: detail_group
                
                	IGMP Detail Group Entry Information
                	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.detail_group = YList()
                    self.detail_group.parent = self
                    self.detail_group.name = 'detail_group'


                class DetailGroup(object):
                    """
                    IGMP Detail Group Entry Information
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_host_exclude_mode
                    
                    	Group host filter mode
                    	**type**\:  bool
                    
                    .. attribute:: is_router_exclude_mode
                    
                    	Group router filter mode
                    	**type**\:  bool
                    
                    .. attribute:: source
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.Source>`
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_info = Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo()
                        self.group_info.parent = self
                        self.interface_name = None
                        self.is_host_exclude_mode = None
                        self.is_router_exclude_mode = None
                        self.source = YList()
                        self.source.parent = self
                        self.source.name = 'source'
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                    class Source(object):
                        """
                        List of sources
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: flags
                        
                        	Source flags
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_forward
                        
                        	Should we forward on this entry
                        	**type**\:  bool
                        
                        .. attribute:: is_local
                        
                        	Is this a local source
                        	**type**\:  bool
                        
                        .. attribute:: is_remote
                        
                        	Is this a remote source
                        	**type**\:  bool
                        
                        .. attribute:: is_we_report
                        
                        	Should we report the source
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.flags = None
                            self.is_added = None
                            self.is_forward = None
                            self.is_local = None
                            self.is_remote = None
                            self.is_we_report = None
                            self.source_address = Mld.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.flags is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_forward is not None:
                                return True

                            if self.is_local is not None:
                                return True

                            if self.is_remote is not None:
                                return True

                            if self.is_we_report is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup.Source']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.is_host_exclude_mode is not None:
                            return True

                        if self.is_router_exclude_mode is not None:
                            return True

                        if self.source is not None:
                            for child_ref in self.source:
                                if child_ref._has_data():
                                    return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.DetailGroups.DetailGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.detail_group is not None:
                        for child_ref in self.detail_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.DetailGroups']['meta_info']


            class NonActiveGroups(object):
                """
                IGMP Non\-Active Groups Information
                
                .. attribute:: non_active_groups
                
                	List of non\-active groups
                	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.non_active_groups = YList()
                    self.non_active_groups.parent = self
                    self.non_active_groups.name = 'non_active_groups'


                class NonActiveGroups_(object):
                    """
                    List of non\-active groups
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                    
                    .. attribute:: interface
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**length:** 0..65
                    
                    .. attribute:: reason_for_non_activity
                    
                    	Reason for group join not being processed
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress()
                        self.group_address.parent = self
                        self.interface = None
                        self.reason_for_non_activity = None
                        self.source_address = Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress()
                        self.source_address.parent = self


                    class GroupAddress(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None and self.group_address._has_data():
                            return True

                        if self.interface is not None:
                            return True

                        if self.reason_for_non_activity is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.NonActiveGroups.NonActiveGroups_']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.non_active_groups is not None:
                        for child_ref in self.non_active_groups:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.NonActiveGroups']['meta_info']


            class SsmMaps(object):
                """
                SSM Map Table
                
                .. attribute:: ssm_map
                
                	SSM Map information
                	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMaps.SsmMap>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map = YList()
                    self.ssm_map.parent = self
                    self.ssm_map.name = 'ssm_map'


                class SsmMap(object):
                    """
                    SSM Map information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr>`
                    
                    .. attribute:: map_type
                    
                    	Map Type of group
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: source_counts
                    
                    	Count of Sources
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Mld.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.map_type = None
                        self.source_counts = None
                        self.ssm_map_type = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.map_type is not None:
                            return True

                        if self.source_counts is not None:
                            return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.SsmMaps.SsmMap']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map is not None:
                        for child_ref in self.ssm_map:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.SsmMaps']['meta_info']


            class ExplicitGroups(object):
                """
                IGMP Explicit Group Database
                
                .. attribute:: explicit_group
                
                	IGMP Explicit Group Entry Information
                	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.explicit_group = YList()
                    self.explicit_group.parent = self
                    self.explicit_group.name = 'explicit_group'


                class ExplicitGroup(object):
                    """
                    IGMP Explicit Group Entry Information
                    
                    .. attribute:: exclude_hosts
                    
                    	No. of hosts who are excluded
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo>`
                    
                    .. attribute:: host
                    
                    	List of hosts
                    	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host>`
                    
                    .. attribute:: include_hosts
                    
                    	No. of hosts who are included
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.exclude_hosts = None
                        self.group_address = None
                        self.group_info = Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo()
                        self.group_info.parent = self
                        self.host = YList()
                        self.host.parent = self
                        self.host.name = 'host'
                        self.include_hosts = None
                        self.interface_name = None
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                    class Host(object):
                        """
                        List of hosts
                        
                        .. attribute:: address
                        
                        	Host Address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address>`
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: is_exclude
                        
                        	Exclude flag set
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	First 3 source addresses
                        	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                        
                        .. attribute:: source_count
                        
                        	No. of sources in entry
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address()
                            self.address.parent = self
                            self.expiration_time = None
                            self.is_exclude = None
                            self.source_address = YList()
                            self.source_address.parent = self
                            self.source_address.name = 'source_address'
                            self.source_count = None
                            self.uptime = None


                        class Address(object):
                            """
                            Host Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                        class SourceAddress(object):
                            """
                            First 3 source addresses
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.is_exclude is not None:
                                return True

                            if self.source_address is not None:
                                for child_ref in self.source_address:
                                    if child_ref._has_data():
                                        return True

                            if self.source_count is not None:
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.exclude_hosts is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.host is not None:
                            for child_ref in self.host:
                                if child_ref._has_data():
                                    return True

                        if self.include_hosts is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups.ExplicitGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.explicit_group is not None:
                        for child_ref in self.explicit_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.ExplicitGroups']['meta_info']


            class InterfaceTable(object):
                """
                IGMP Interface specific Table
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceTable']['meta_info']


            class InterfaceOldFormats(object):
                """
                IGMP Interface specific Table in old format
                
                .. attribute:: interface_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format = YList()
                    self.interface_old_format.parent = self
                    self.interface_old_format.name = 'interface_old_format'


                class InterfaceOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format is not None:
                        for child_ref in self.interface_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormats']['meta_info']


            class InterfaceStateOffOldFormats(object):
                """
                IGMP Interface state off old format
                
                .. attribute:: interface_state_off_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off_old_format = YList()
                    self.interface_state_off_old_format.parent = self
                    self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                class InterfaceStateOffOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off_old_format is not None:
                        for child_ref in self.interface_state_off_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffOldFormats']['meta_info']


            class InterfaceUnicastQosAdjusts(object):
                """
                IGMP Interface Unicast\-Qos\-Adjust
                
                .. attribute:: interface_unicast_qos_adjust
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_unicast_qos_adjust = YList()
                    self.interface_unicast_qos_adjust.parent = self
                    self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                class InterfaceUnicastQosAdjust(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_virtual_access
                    
                    	Is VirtualAccess Interface
                    	**type**\:  bool
                    
                    .. attribute:: rate
                    
                    	Overall rate in Kbps
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: rate_decrements
                    
                    	Count of rate decrements
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: rate_increments
                    
                    	Count of rate increments
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: update
                    
                    	List of updates
                    	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.is_virtual_access = None
                        self.rate = None
                        self.rate_decrements = None
                        self.rate_increments = None
                        self.update = YList()
                        self.update.parent = self
                        self.update.name = 'update'


                    class Update(object):
                        """
                        List of updates
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                        
                        .. attribute:: is_add
                        
                        	Is this a rate increment
                        	**type**\:  bool
                        
                        .. attribute:: received_time
                        
                        	Time this update is received
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: source_address
                        
                        	Source address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                        
                        .. attribute:: weight
                        
                        	Weight from policy
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                            self.group_address.parent = self
                            self.is_add = None
                            self.received_time = None
                            self.source_address = Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                            self.source_address.parent = self
                            self.weight = None


                        class SourceAddress(object):
                            """
                            Source address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                        class GroupAddress(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.is_add is not None:
                                return True

                            if self.received_time is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.weight is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.is_virtual_access is not None:
                            return True

                        if self.rate is not None:
                            return True

                        if self.rate_decrements is not None:
                            return True

                        if self.rate_increments is not None:
                            return True

                        if self.update is not None:
                            for child_ref in self.update:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_unicast_qos_adjust is not None:
                        for child_ref in self.interface_unicast_qos_adjust:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceUnicastQosAdjusts']['meta_info']


            class Ranges(object):
                """
                Range table
                
                .. attribute:: range
                
                	Range information
                	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Ranges.Range>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.range = YList()
                    self.range.parent = self
                    self.range.name = 'range'


                class Range(object):
                    """
                    Range information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Ranges.Range.GroupAddressXr>`
                    
                    .. attribute:: group_mask
                    
                    	Group Mask
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: is_stale
                    
                    	Is the entry stale
                    	**type**\:  bool
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: protocol
                    
                    	Protocol
                    	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Mld.Active.DefaultContext.Ranges.Range.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.group_mask = None
                        self.is_stale = None
                        self.prefix_length = None
                        self.protocol = None


                    class GroupAddressXr(object):
                        """
                        Group address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.Ranges.Range.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.group_mask is not None:
                            return True

                        if self.is_stale is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.protocol is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.Ranges.Range']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.range is not None:
                        for child_ref in self.range:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.Ranges']['meta_info']


            class IfrsInterfaces(object):
                """
                IGMP Interface specific
                
                .. attribute:: ifrs_interface
                
                	IGMP IFRS Interface
                	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ifrs_interface = YList()
                    self.ifrs_interface.parent = self
                    self.ifrs_interface.name = 'ifrs_interface'


                class IfrsInterface(object):
                    """
                    IGMP IFRS Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	IFRS Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: igmp_interface_entry
                    
                    	IGMP interface entry
                    	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                    
                    .. attribute:: join_group_count
                    
                    	Join group count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.igmp_interface_entry = Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                        self.igmp_interface_entry.parent = self
                        self.join_group_count = None


                    class IgmpInterfaceEntry(object):
                        """
                        IGMP interface entry
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                            return True

                        if self.join_group_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces.IfrsInterface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ifrs_interface is not None:
                        for child_ref in self.ifrs_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaces']['meta_info']


            class TrafficCounters(object):
                """
                IGMP Message Traffic Counters
                
                .. attribute:: auxillary_data_length_errors
                
                	AuxDataLen errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: bad_scope_errors
                
                	BadScope errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: checksum_errors
                
                	Checksum errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: elapsed_time
                
                	Running time for counters
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: format_errors
                
                	Malformed packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: get_packet_failure
                
                	Packet get failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_disabled_idb
                
                	Packet received on disabled idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_dvmrp
                
                	DVMRP packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_leaves
                
                	Leaves in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_martian_address
                
                	Packets received with Martian Address
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_mtrace
                
                	Mtrace packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_assigned_vrf_id
                
                	Packets received with no assigned vrf id
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_idb
                
                	Packets received without idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_platform_support_mtrace
                
                	mtrace packets without platform support
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_in_idb
                
                	Packets received on idb without VRF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_mtrace
                
                	mtrace packets with no vrf associated
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_pim
                
                	PIM packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_queries
                
                	Query packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_reports
                
                	Reports in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: invalid_source_address_errors
                
                	Invalid Source Address errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: miscellaneous_errors
                
                	Packets dropped for other reasons
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: no_socket_connection
                
                	Packets dropped since no socket connection
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_dvmrp
                
                	DVMRP packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_leaves
                
                	Leaves out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_mtrace
                
                	Mtrace packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_no_parent_interface_handle
                
                	Failures setting 2nd ifhandle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_pim
                
                	PIM packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_queries
                
                	Query packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_reports
                
                	Reports out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_input_errors
                
                	Incoming Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_output_errors
                
                	Outgoing Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_in
                
                	Packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_out
                
                	Packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_socket_errors
                
                	Socket errors on reception
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: socket_errors
                
                	Socket errors on send
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.auxillary_data_length_errors = None
                    self.bad_scope_errors = None
                    self.checksum_errors = None
                    self.elapsed_time = None
                    self.format_errors = None
                    self.get_packet_failure = None
                    self.input_disabled_idb = None
                    self.input_dvmrp = None
                    self.input_leaves = None
                    self.input_martian_address = None
                    self.input_mtrace = None
                    self.input_no_assigned_vrf_id = None
                    self.input_no_idb = None
                    self.input_no_platform_support_mtrace = None
                    self.input_no_vrf_in_idb = None
                    self.input_no_vrf_mtrace = None
                    self.input_pim = None
                    self.input_queries = None
                    self.input_reports = None
                    self.invalid_source_address_errors = None
                    self.miscellaneous_errors = None
                    self.no_socket_connection = None
                    self.output_dvmrp = None
                    self.output_leaves = None
                    self.output_mtrace = None
                    self.output_no_parent_interface_handle = None
                    self.output_pim = None
                    self.output_queries = None
                    self.output_reports = None
                    self.packet_manager_input_errors = None
                    self.packet_manager_output_errors = None
                    self.packets_in = None
                    self.packets_out = None
                    self.receive_socket_errors = None
                    self.socket_errors = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.auxillary_data_length_errors is not None:
                        return True

                    if self.bad_scope_errors is not None:
                        return True

                    if self.checksum_errors is not None:
                        return True

                    if self.elapsed_time is not None:
                        return True

                    if self.format_errors is not None:
                        return True

                    if self.get_packet_failure is not None:
                        return True

                    if self.input_disabled_idb is not None:
                        return True

                    if self.input_dvmrp is not None:
                        return True

                    if self.input_leaves is not None:
                        return True

                    if self.input_martian_address is not None:
                        return True

                    if self.input_mtrace is not None:
                        return True

                    if self.input_no_assigned_vrf_id is not None:
                        return True

                    if self.input_no_idb is not None:
                        return True

                    if self.input_no_platform_support_mtrace is not None:
                        return True

                    if self.input_no_vrf_in_idb is not None:
                        return True

                    if self.input_no_vrf_mtrace is not None:
                        return True

                    if self.input_pim is not None:
                        return True

                    if self.input_queries is not None:
                        return True

                    if self.input_reports is not None:
                        return True

                    if self.invalid_source_address_errors is not None:
                        return True

                    if self.miscellaneous_errors is not None:
                        return True

                    if self.no_socket_connection is not None:
                        return True

                    if self.output_dvmrp is not None:
                        return True

                    if self.output_leaves is not None:
                        return True

                    if self.output_mtrace is not None:
                        return True

                    if self.output_no_parent_interface_handle is not None:
                        return True

                    if self.output_pim is not None:
                        return True

                    if self.output_queries is not None:
                        return True

                    if self.output_reports is not None:
                        return True

                    if self.packet_manager_input_errors is not None:
                        return True

                    if self.packet_manager_output_errors is not None:
                        return True

                    if self.packets_in is not None:
                        return True

                    if self.packets_out is not None:
                        return True

                    if self.receive_socket_errors is not None:
                        return True

                    if self.socket_errors is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.TrafficCounters']['meta_info']


            class Groups(object):
                """
                IGMP Group Database Table
                
                .. attribute:: group
                
                	IGMP Group Entry Information
                	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Groups.Group>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group = YList()
                    self.group.parent = self
                    self.group.name = 'group'


                class Group(object):
                    """
                    IGMP Group Entry Information
                    
                    .. attribute:: expiration_time
                    
                    	Expiration time in seconds
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**units**\: second
                    
                    .. attribute:: explicit_tracking_enabled
                    
                    	Is explicit tracking enabled
                    	**type**\:  bool
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Groups.Group.GroupAddressXr>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_added
                    
                    	Joined
                    	**type**\:  bool
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: is_self_join
                    
                    	If local system is member of this group on this interface
                    	**type**\:  bool
                    
                    .. attribute:: is_suppressed
                    
                    	Suppressed
                    	**type**\:  bool
                    
                    .. attribute:: last_reporter
                    
                    	Last reporter address
                    	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Groups.Group.LastReporter>`
                    
                    .. attribute:: older_host_version1_timer
                    
                    	IGMP Hostversion1timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: older_host_version2_timer
                    
                    	IGMP Hostversion2timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_filter_mode
                    
                    	Filter mode
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: row_status
                    
                    	interface on or off for the group
                    	**type**\:  str
                    
                    	**length:** 0..16
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.Groups.Group.SourceAddress>`
                    
                    .. attribute:: uptime
                    
                    	Uptime in seconds
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**units**\: second
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.expiration_time = None
                        self.explicit_tracking_enabled = None
                        self.group_address = None
                        self.group_address_xr = Mld.Active.DefaultContext.Groups.Group.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.interface_name = None
                        self.interface_name_xr = None
                        self.is_added = None
                        self.is_low_memory = None
                        self.is_self_join = None
                        self.is_suppressed = None
                        self.last_reporter = Mld.Active.DefaultContext.Groups.Group.LastReporter()
                        self.last_reporter.parent = self
                        self.older_host_version1_timer = None
                        self.older_host_version2_timer = None
                        self.router_filter_mode = None
                        self.row_status = None
                        self.source_address = Mld.Active.DefaultContext.Groups.Group.SourceAddress()
                        self.source_address.parent = self
                        self.uptime = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.Groups.Group.GroupAddressXr']['meta_info']


                    class LastReporter(object):
                        """
                        Last reporter address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.Groups.Group.LastReporter']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.Groups.Group.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.expiration_time is not None:
                            return True

                        if self.explicit_tracking_enabled is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_added is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.is_self_join is not None:
                            return True

                        if self.is_suppressed is not None:
                            return True

                        if self.last_reporter is not None and self.last_reporter._has_data():
                            return True

                        if self.older_host_version1_timer is not None:
                            return True

                        if self.older_host_version2_timer is not None:
                            return True

                        if self.router_filter_mode is not None:
                            return True

                        if self.row_status is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        if self.uptime is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.Groups.Group']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group is not None:
                        for child_ref in self.group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.Groups']['meta_info']


            class GroupSummary(object):
                """
                IGMP Groups Summary
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: groutes
                
                	No. of (\*,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_low_memory
                
                	Node is running low on memory
                	**type**\:  bool
                
                .. attribute:: sg_routes
                
                	No. of (S,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group_count = None
                    self.groutes = None
                    self.is_low_memory = None
                    self.sg_routes = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group_count is not None:
                        return True

                    if self.groutes is not None:
                        return True

                    if self.is_low_memory is not None:
                        return True

                    if self.sg_routes is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.GroupSummary']['meta_info']


            class IfrsInterfaceSummary(object):
                """
                IGMP IFRS Interface summary
                
                .. attribute:: configuration_count
                
                	Configuration count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_count
                
                	Interface Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.configuration_count = None
                    self.interface_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.configuration_count is not None:
                        return True

                    if self.interface_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.IfrsInterfaceSummary']['meta_info']


            class GlobalInterfaceTable(object):
                """
                IGMP Global Interface 
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GlobalInterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.GlobalInterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.GlobalInterfaceTable']['meta_info']


            class SsmMapDetails(object):
                """
                SSM Map Detail
                
                .. attribute:: ssm_map_detail
                
                	SSM Map Detail Table information
                	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map_detail = YList()
                    self.ssm_map_detail.parent = self
                    self.ssm_map_detail.name = 'ssm_map_detail'


                class SsmMapDetail(object):
                    """
                    SSM Map Detail Table information
                    
                    .. attribute:: elapsed_time
                    
                    	Elapsed time
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: expiration_time
                    
                    	Expiration Time in Seconds
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: second
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: map_info
                    
                    	Basic Map Info
                    	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo>`
                    
                    .. attribute:: query_interval
                    
                    	Query interval
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: response_pending
                    
                    	Response Pending
                    	**type**\:  bool
                    
                    .. attribute:: sources
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.Sources>`
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.elapsed_time = None
                        self.expiration_time = None
                        self.group_address = None
                        self.map_info = Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo()
                        self.map_info.parent = self
                        self.query_interval = None
                        self.response_pending = None
                        self.sources = YList()
                        self.sources.parent = self
                        self.sources.name = 'sources'
                        self.ssm_map_type = None


                    class MapInfo(object):
                        """
                        Basic Map Info
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address_xr = Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                    class Sources(object):
                        """
                        List of sources
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.elapsed_time is not None:
                            return True

                        if self.expiration_time is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.map_info is not None and self.map_info._has_data():
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.response_pending is not None:
                            return True

                        if self.sources is not None:
                            for child_ref in self.sources:
                                if child_ref._has_data():
                                    return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.SsmMapDetails.SsmMapDetail']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map_detail is not None:
                        for child_ref in self.ssm_map_detail:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.SsmMapDetails']['meta_info']


            class InterfaceStateOffs(object):
                """
                IGMP Interface state off
                
                .. attribute:: interface_state_off
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off = YList()
                    self.interface_state_off.parent = self
                    self.interface_state_off.name = 'interface_state_off'


                class InterfaceStateOff(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off is not None:
                        for child_ref in self.interface_state_off:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceStateOffs']['meta_info']


            class InterfaceOldFormatStateOns(object):
                """
                IGMP Interface state on old format
                
                .. attribute:: interface_old_format_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format_state_on = YList()
                    self.interface_old_format_state_on.parent = self
                    self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                class InterfaceOldFormatStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format_state_on is not None:
                        for child_ref in self.interface_old_format_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Mld.Active.DefaultContext.InterfaceOldFormatStateOns']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.detail_groups is not None and self.detail_groups._has_data():
                    return True

                if self.explicit_groups is not None and self.explicit_groups._has_data():
                    return True

                if self.global_interface_table is not None and self.global_interface_table._has_data():
                    return True

                if self.group_summary is not None and self.group_summary._has_data():
                    return True

                if self.groups is not None and self.groups._has_data():
                    return True

                if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                    return True

                if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                    return True

                if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                    return True

                if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                    return True

                if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                    return True

                if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                    return True

                if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                    return True

                if self.interface_table is not None and self.interface_table._has_data():
                    return True

                if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                    return True

                if self.non_active_groups is not None and self.non_active_groups._has_data():
                    return True

                if self.ranges is not None and self.ranges._has_data():
                    return True

                if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                    return True

                if self.ssm_maps is not None and self.ssm_maps._has_data():
                    return True

                if self.summary is not None and self.summary._has_data():
                    return True

                if self.traffic_counters is not None and self.traffic_counters._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Mld.Active.DefaultContext']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ipv4-igmp-oper:mld/Cisco-IOS-XR-ipv4-igmp-oper:active'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if self.default_context is not None and self.default_context._has_data():
                return True

            if self.process is not None and self.process._has_data():
                return True

            if self.vrfs is not None and self.vrfs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
            return meta._meta_table['Mld.Active']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-ipv4-igmp-oper:mld'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if self.active is not None and self.active._has_data():
            return True

        if self.standby is not None and self.standby._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
        return meta._meta_table['Mld']['meta_info']


class Igmp(object):
    """
    igmp
    
    .. attribute:: active
    
    	Active Process
    	**type**\:   :py:class:`Active <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active>`
    
    .. attribute:: standby
    
    	Standby Process
    	**type**\:   :py:class:`Standby <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby>`
    
    

    """

    _prefix = 'ipv4-igmp-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.active = Igmp.Active()
        self.active.parent = self
        self.standby = Igmp.Standby()
        self.standby.parent = self


    class Standby(object):
        """
        Standby Process
        
        .. attribute:: default_context
        
        	Default Context
        	**type**\:   :py:class:`DefaultContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext>`
        
        .. attribute:: process
        
        	Process
        	**type**\:   :py:class:`Process <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process>`
        
        .. attribute:: vrfs
        
        	VRF Table
        	**type**\:   :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs>`
        
        

        """

        _prefix = 'ipv4-igmp-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.default_context = Igmp.Standby.DefaultContext()
            self.default_context.parent = self
            self.process = Igmp.Standby.Process()
            self.process.parent = self
            self.vrfs = Igmp.Standby.Vrfs()
            self.vrfs.parent = self


        class Vrfs(object):
            """
            VRF Table
            
            .. attribute:: vrf
            
            	VRF table Names
            	**type**\: list of    :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf = YList()
                self.vrf.parent = self
                self.vrf.name = 'vrf'


            class Vrf(object):
                """
                VRF table Names
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**length:** 1..32
                
                .. attribute:: detail_groups
                
                	IGMP Detail Group Database
                	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups>`
                
                .. attribute:: explicit_groups
                
                	IGMP Explicit Group Database
                	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups>`
                
                .. attribute:: global_interface_table
                
                	IGMP Global Interface 
                	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable>`
                
                .. attribute:: group_summary
                
                	IGMP Groups Summary
                	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GroupSummary>`
                
                .. attribute:: groups
                
                	IGMP Group Database Table
                	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Groups>`
                
                .. attribute:: ifrs_interface_summary
                
                	IGMP IFRS Interface summary
                	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaceSummary>`
                
                .. attribute:: ifrs_interfaces
                
                	IGMP Interface specific
                	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces>`
                
                .. attribute:: interface_old_format_state_ons
                
                	IGMP Interface state on old format
                	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns>`
                
                .. attribute:: interface_old_formats
                
                	IGMP Interface specific Table in old format
                	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats>`
                
                .. attribute:: interface_state_off_old_formats
                
                	IGMP Interface state off old format
                	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats>`
                
                .. attribute:: interface_state_offs
                
                	IGMP Interface state off
                	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs>`
                
                .. attribute:: interface_state_ons
                
                	IGMP Interface state on
                	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOns>`
                
                .. attribute:: interface_table
                
                	IGMP Interface specific Table
                	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceTable>`
                
                .. attribute:: interface_unicast_qos_adjusts
                
                	IGMP Interface Unicast\-Qos\-Adjust
                	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts>`
                
                .. attribute:: non_active_groups
                
                	IGMP Non\-Active Groups Information
                	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.NonActiveGroups>`
                
                .. attribute:: ranges
                
                	Range table
                	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Ranges>`
                
                .. attribute:: ssm_map_details
                
                	SSM Map Detail
                	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMapDetails>`
                
                .. attribute:: ssm_maps
                
                	SSM Map Table
                	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMaps>`
                
                .. attribute:: summary
                
                	IGMP Summary Information
                	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Summary>`
                
                .. attribute:: traffic_counters
                
                	IGMP Message Traffic Counters
                	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.TrafficCounters>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.detail_groups = Igmp.Standby.Vrfs.Vrf.DetailGroups()
                    self.detail_groups.parent = self
                    self.explicit_groups = Igmp.Standby.Vrfs.Vrf.ExplicitGroups()
                    self.explicit_groups.parent = self
                    self.global_interface_table = Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable()
                    self.global_interface_table.parent = self
                    self.group_summary = Igmp.Standby.Vrfs.Vrf.GroupSummary()
                    self.group_summary.parent = self
                    self.groups = Igmp.Standby.Vrfs.Vrf.Groups()
                    self.groups.parent = self
                    self.ifrs_interface_summary = Igmp.Standby.Vrfs.Vrf.IfrsInterfaceSummary()
                    self.ifrs_interface_summary.parent = self
                    self.ifrs_interfaces = Igmp.Standby.Vrfs.Vrf.IfrsInterfaces()
                    self.ifrs_interfaces.parent = self
                    self.interface_old_format_state_ons = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns()
                    self.interface_old_format_state_ons.parent = self
                    self.interface_old_formats = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats()
                    self.interface_old_formats.parent = self
                    self.interface_state_off_old_formats = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats()
                    self.interface_state_off_old_formats.parent = self
                    self.interface_state_offs = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs()
                    self.interface_state_offs.parent = self
                    self.interface_state_ons = Igmp.Standby.Vrfs.Vrf.InterfaceStateOns()
                    self.interface_state_ons.parent = self
                    self.interface_table = Igmp.Standby.Vrfs.Vrf.InterfaceTable()
                    self.interface_table.parent = self
                    self.interface_unicast_qos_adjusts = Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts()
                    self.interface_unicast_qos_adjusts.parent = self
                    self.non_active_groups = Igmp.Standby.Vrfs.Vrf.NonActiveGroups()
                    self.non_active_groups.parent = self
                    self.ranges = Igmp.Standby.Vrfs.Vrf.Ranges()
                    self.ranges.parent = self
                    self.ssm_map_details = Igmp.Standby.Vrfs.Vrf.SsmMapDetails()
                    self.ssm_map_details.parent = self
                    self.ssm_maps = Igmp.Standby.Vrfs.Vrf.SsmMaps()
                    self.ssm_maps.parent = self
                    self.summary = Igmp.Standby.Vrfs.Vrf.Summary()
                    self.summary.parent = self
                    self.traffic_counters = Igmp.Standby.Vrfs.Vrf.TrafficCounters()
                    self.traffic_counters.parent = self


                class Summary(object):
                    """
                    IGMP Summary Information
                    
                    .. attribute:: disabled_interface_count
                    
                    	No. of disabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: enabled_interface_count
                    
                    	No. of enabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface
                    
                    	Maximum and current groups accepted for each interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Summary.Interface>`
                    
                    .. attribute:: is_disabled
                    
                    	Is maximum enforcement disabled
                    	**type**\:  bool
                    
                    .. attribute:: node_low_memory
                    
                    	Is node in low memory condition
                    	**type**\:  bool
                    
                    .. attribute:: robustness
                    
                    	Robustness variable
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: supported_interfaces
                    
                    	No. of supported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: tunnel_mte_config_count
                    
                    	No. of static group commands
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: unsupported_interfaces
                    
                    	No. of unsupported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.disabled_interface_count = None
                        self.enabled_interface_count = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'
                        self.is_disabled = None
                        self.node_low_memory = None
                        self.robustness = None
                        self.supported_interfaces = None
                        self.tunnel_mte_config_count = None
                        self.unsupported_interfaces = None


                    class Interface(object):
                        """
                        Maximum and current groups accepted for each
                        interface
                        
                        .. attribute:: group_count
                        
                        	Current groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_limit
                        
                        	Maximum groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: on_off
                        
                        	Enabled/Disabled
                        	**type**\:  bool
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent if handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Time elapsed since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_count = None
                            self.group_limit = None
                            self.interface_name = None
                            self.on_off = None
                            self.parent_ifhandle = None
                            self.router_uptime_in_seconds = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_count is not None:
                                return True

                            if self.group_limit is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.on_off is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Summary.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.disabled_interface_count is not None:
                            return True

                        if self.enabled_interface_count is not None:
                            return True

                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        if self.is_disabled is not None:
                            return True

                        if self.node_low_memory is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.supported_interfaces is not None:
                            return True

                        if self.tunnel_mte_config_count is not None:
                            return True

                        if self.unsupported_interfaces is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Summary']['meta_info']


                class InterfaceStateOns(object):
                    """
                    IGMP Interface state on
                    
                    .. attribute:: interface_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_on = YList()
                        self.interface_state_on.parent = self
                        self.interface_state_on.name = 'interface_state_on'


                    class InterfaceStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_on is not None:
                            for child_ref in self.interface_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOns']['meta_info']


                class DetailGroups(object):
                    """
                    IGMP Detail Group Database
                    
                    .. attribute:: detail_group
                    
                    	IGMP Detail Group Entry Information
                    	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.detail_group = YList()
                        self.detail_group.parent = self
                        self.detail_group.name = 'detail_group'


                    class DetailGroup(object):
                        """
                        IGMP Detail Group Entry Information
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_host_exclude_mode
                        
                        	Group host filter mode
                        	**type**\:  bool
                        
                        .. attribute:: is_router_exclude_mode
                        
                        	Group router filter mode
                        	**type**\:  bool
                        
                        .. attribute:: source
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source>`
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_info = Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo()
                            self.group_info.parent = self
                            self.interface_name = None
                            self.is_host_exclude_mode = None
                            self.is_router_exclude_mode = None
                            self.source = YList()
                            self.source.parent = self
                            self.source.name = 'source'
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                        class Source(object):
                            """
                            List of sources
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: flags
                            
                            	Source flags
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_forward
                            
                            	Should we forward on this entry
                            	**type**\:  bool
                            
                            .. attribute:: is_local
                            
                            	Is this a local source
                            	**type**\:  bool
                            
                            .. attribute:: is_remote
                            
                            	Is this a remote source
                            	**type**\:  bool
                            
                            .. attribute:: is_we_report
                            
                            	Should we report the source
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.flags = None
                                self.is_added = None
                                self.is_forward = None
                                self.is_local = None
                                self.is_remote = None
                                self.is_we_report = None
                                self.source_address = Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.flags is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_forward is not None:
                                    return True

                                if self.is_local is not None:
                                    return True

                                if self.is_remote is not None:
                                    return True

                                if self.is_we_report is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup.Source']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.is_host_exclude_mode is not None:
                                return True

                            if self.is_router_exclude_mode is not None:
                                return True

                            if self.source is not None:
                                for child_ref in self.source:
                                    if child_ref._has_data():
                                        return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups.DetailGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.detail_group is not None:
                            for child_ref in self.detail_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.DetailGroups']['meta_info']


                class NonActiveGroups(object):
                    """
                    IGMP Non\-Active Groups Information
                    
                    .. attribute:: non_active_groups
                    
                    	List of non\-active groups
                    	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.non_active_groups = YList()
                        self.non_active_groups.parent = self
                        self.non_active_groups.name = 'non_active_groups'


                    class NonActiveGroups_(object):
                        """
                        List of non\-active groups
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                        
                        .. attribute:: interface
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**length:** 0..65
                        
                        .. attribute:: reason_for_non_activity
                        
                        	Reason for group join not being processed
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress()
                            self.group_address.parent = self
                            self.interface = None
                            self.reason_for_non_activity = None
                            self.source_address = Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress()
                            self.source_address.parent = self


                        class GroupAddress(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.interface is not None:
                                return True

                            if self.reason_for_non_activity is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.non_active_groups is not None:
                            for child_ref in self.non_active_groups:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.NonActiveGroups']['meta_info']


                class SsmMaps(object):
                    """
                    SSM Map Table
                    
                    .. attribute:: ssm_map
                    
                    	SSM Map information
                    	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMaps.SsmMap>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map = YList()
                        self.ssm_map.parent = self
                        self.ssm_map.name = 'ssm_map'


                    class SsmMap(object):
                        """
                        SSM Map information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None
                            self.ssm_map_type = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMaps.SsmMap']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map is not None:
                            for child_ref in self.ssm_map:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMaps']['meta_info']


                class ExplicitGroups(object):
                    """
                    IGMP Explicit Group Database
                    
                    .. attribute:: explicit_group
                    
                    	IGMP Explicit Group Entry Information
                    	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.explicit_group = YList()
                        self.explicit_group.parent = self
                        self.explicit_group.name = 'explicit_group'


                    class ExplicitGroup(object):
                        """
                        IGMP Explicit Group Entry Information
                        
                        .. attribute:: exclude_hosts
                        
                        	No. of hosts who are excluded
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo>`
                        
                        .. attribute:: host
                        
                        	List of hosts
                        	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host>`
                        
                        .. attribute:: include_hosts
                        
                        	No. of hosts who are included
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.exclude_hosts = None
                            self.group_address = None
                            self.group_info = Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo()
                            self.group_info.parent = self
                            self.host = YList()
                            self.host.parent = self
                            self.host.name = 'host'
                            self.include_hosts = None
                            self.interface_name = None
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                        class Host(object):
                            """
                            List of hosts
                            
                            .. attribute:: address
                            
                            	Host Address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address>`
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            .. attribute:: is_exclude
                            
                            	Exclude flag set
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	First 3 source addresses
                            	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                            
                            .. attribute:: source_count
                            
                            	No. of sources in entry
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address()
                                self.address.parent = self
                                self.expiration_time = None
                                self.is_exclude = None
                                self.source_address = YList()
                                self.source_address.parent = self
                                self.source_address.name = 'source_address'
                                self.source_count = None
                                self.uptime = None


                            class Address(object):
                                """
                                Host Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                            class SourceAddress(object):
                                """
                                First 3 source addresses
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:host'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.expiration_time is not None:
                                    return True

                                if self.is_exclude is not None:
                                    return True

                                if self.source_address is not None:
                                    for child_ref in self.source_address:
                                        if child_ref._has_data():
                                            return True

                                if self.source_count is not None:
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.exclude_hosts is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.host is not None:
                                for child_ref in self.host:
                                    if child_ref._has_data():
                                        return True

                            if self.include_hosts is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups.ExplicitGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.explicit_group is not None:
                            for child_ref in self.explicit_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.ExplicitGroups']['meta_info']


                class InterfaceTable(object):
                    """
                    IGMP Interface specific Table
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceTable']['meta_info']


                class InterfaceOldFormats(object):
                    """
                    IGMP Interface specific Table in old format
                    
                    .. attribute:: interface_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format = YList()
                        self.interface_old_format.parent = self
                        self.interface_old_format.name = 'interface_old_format'


                    class InterfaceOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format is not None:
                            for child_ref in self.interface_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormats']['meta_info']


                class InterfaceStateOffOldFormats(object):
                    """
                    IGMP Interface state off old format
                    
                    .. attribute:: interface_state_off_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off_old_format = YList()
                        self.interface_state_off_old_format.parent = self
                        self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                    class InterfaceStateOffOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off_old_format is not None:
                            for child_ref in self.interface_state_off_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffOldFormats']['meta_info']


                class InterfaceUnicastQosAdjusts(object):
                    """
                    IGMP Interface Unicast\-Qos\-Adjust
                    
                    .. attribute:: interface_unicast_qos_adjust
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_unicast_qos_adjust = YList()
                        self.interface_unicast_qos_adjust.parent = self
                        self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                    class InterfaceUnicastQosAdjust(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_virtual_access
                        
                        	Is VirtualAccess Interface
                        	**type**\:  bool
                        
                        .. attribute:: rate
                        
                        	Overall rate in Kbps
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: rate_decrements
                        
                        	Count of rate decrements
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rate_increments
                        
                        	Count of rate increments
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: update
                        
                        	List of updates
                        	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_virtual_access = None
                            self.rate = None
                            self.rate_decrements = None
                            self.rate_increments = None
                            self.update = YList()
                            self.update.parent = self
                            self.update.name = 'update'


                        class Update(object):
                            """
                            List of updates
                            
                            .. attribute:: group_address
                            
                            	Group address
                            	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                            
                            .. attribute:: is_add
                            
                            	Is this a rate increment
                            	**type**\:  bool
                            
                            .. attribute:: received_time
                            
                            	Time this update is received
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: source_address
                            
                            	Source address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                            
                            .. attribute:: weight
                            
                            	Weight from policy
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address = Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                                self.group_address.parent = self
                                self.is_add = None
                                self.received_time = None
                                self.source_address = Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                                self.source_address.parent = self
                                self.weight = None


                            class SourceAddress(object):
                                """
                                Source address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                            class GroupAddress(object):
                                """
                                Group address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address is not None and self.group_address._has_data():
                                    return True

                                if self.is_add is not None:
                                    return True

                                if self.received_time is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.weight is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.is_virtual_access is not None:
                                return True

                            if self.rate is not None:
                                return True

                            if self.rate_decrements is not None:
                                return True

                            if self.rate_increments is not None:
                                return True

                            if self.update is not None:
                                for child_ref in self.update:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_unicast_qos_adjust is not None:
                            for child_ref in self.interface_unicast_qos_adjust:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceUnicastQosAdjusts']['meta_info']


                class Ranges(object):
                    """
                    Range table
                    
                    .. attribute:: range
                    
                    	Range information
                    	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Ranges.Range>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.range = YList()
                        self.range.parent = self
                        self.range.name = 'range'


                    class Range(object):
                        """
                        Range information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr>`
                        
                        .. attribute:: group_mask
                        
                        	Group Mask
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_stale
                        
                        	Is the entry stale
                        	**type**\:  bool
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: protocol
                        
                        	Protocol
                        	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.group_mask = None
                            self.is_stale = None
                            self.prefix_length = None
                            self.protocol = None


                        class GroupAddressXr(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Ranges.Range.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:range'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.group_mask is not None:
                                return True

                            if self.is_stale is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.protocol is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Ranges.Range']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.range is not None:
                            for child_ref in self.range:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Ranges']['meta_info']


                class IfrsInterfaces(object):
                    """
                    IGMP Interface specific
                    
                    .. attribute:: ifrs_interface
                    
                    	IGMP IFRS Interface
                    	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ifrs_interface = YList()
                        self.ifrs_interface.parent = self
                        self.ifrs_interface.name = 'ifrs_interface'


                    class IfrsInterface(object):
                        """
                        IGMP IFRS Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	IFRS Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: igmp_interface_entry
                        
                        	IGMP interface entry
                        	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                        
                        .. attribute:: join_group_count
                        
                        	Join group count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.igmp_interface_entry = Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                            self.igmp_interface_entry.parent = self
                            self.join_group_count = None


                        class IgmpInterfaceEntry(object):
                            """
                            IGMP interface entry
                            
                            .. attribute:: address
                            
                            	IP address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                            
                            .. attribute:: configuration_mcast_vrf_error
                            
                            	Is mcast error
                            	**type**\:  bool
                            
                            .. attribute:: configuration_mcast_vrf_set
                            
                            	Is mcast set
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_error
                            
                            	CFG vrf error
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_set
                            
                            	CFG vrf set
                            	**type**\:  bool
                            
                            .. attribute:: group_joins
                            
                            	No. of group joins
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: group_leaves
                            
                            	No. of group leaves
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: host_version
                            
                            	IGMP Host version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: igmp_version
                            
                            	IGMP Router version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_configurationverify
                            
                            	CFG verify
                            	**type**\:  bool
                            
                            .. attribute:: is_identity_present
                            
                            	Subscriber ID or Address available from AAA
                            	**type**\:  bool
                            
                            .. attribute:: is_im_state_registered
                            
                            	Im state registered
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_up
                            
                            	Is interface up
                            	**type**\:  bool
                            
                            .. attribute:: is_ip_enabled
                            
                            	Is IP enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_las_registered
                            
                            	LAS registered
                            	**type**\:  bool
                            
                            .. attribute:: is_las_request
                            
                            	LAS req
                            	**type**\:  bool
                            
                            .. attribute:: is_querier
                            
                            	Are we querier
                            	**type**\:  bool
                            
                            .. attribute:: is_router_enabled
                            
                            	Is Router functionality enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_subscriber
                            
                            	Subscriber interface
                            	**type**\:  bool
                            
                            .. attribute:: las_get_address_count
                            
                            	LAS get addr count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_add_update_count
                            
                            	LAS LL add update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_registration_count
                            
                            	LAS reg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_remove_update_count
                            
                            	LAS LL remove update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_null_update_count
                            
                            	LAS Null update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_unregistration_count
                            
                            	LAS unreg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_update_count
                            
                            	LAS Update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_member_query_interval
                            
                            	Last Member Query Interval
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: location
                            
                            	Location
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_tuple_count
                            
                            	MTE Tuple count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_vrf_id
                            
                            	MTE VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mtu
                            
                            	MTU
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: parent_ifhandle
                            
                            	Parent If Handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: proxy_interface
                            
                            	Proxy interface index
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: querier_address
                            
                            	Address of the Querier
                            	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                            
                            .. attribute:: querier_uptime
                            
                            	Time since the last querier took over
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_interval
                            
                            	Query Interval value in seconds
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: query_maximum_response_time
                            
                            	Max Response Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_timeout
                            
                            	Query Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: robustness
                            
                            	Robustness Variable value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_uptime_in_seconds
                            
                            	Uptime since router enabled event
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state
                            
                            	Interface state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: subscriber_address
                            
                            	Address of subscriber
                            	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                            
                            .. attribute:: subscriber_id
                            
                            	ID string of subscriber
                            	**type**\:  str
                            
                            	**length:** 0..257
                            
                            .. attribute:: subscriber_mode
                            
                            	Subscriber mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_query_in_seconds
                            
                            	Time elapsed since last query
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_report_in_seconds
                            
                            	Time elapsed since last report
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_active_groups
                            
                            	Actual number of groups on interface
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_id
                            
                            	VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_state
                            
                            	Vrf State
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                                self.address.parent = self
                                self.configuration_mcast_vrf_error = None
                                self.configuration_mcast_vrf_set = None
                                self.configurationvrf_error = None
                                self.configurationvrf_set = None
                                self.group_joins = None
                                self.group_leaves = None
                                self.host_version = None
                                self.igmp_version = None
                                self.interface_name_xr = None
                                self.is_configurationverify = None
                                self.is_identity_present = None
                                self.is_im_state_registered = None
                                self.is_interface_up = None
                                self.is_ip_enabled = None
                                self.is_las_registered = None
                                self.is_las_request = None
                                self.is_querier = None
                                self.is_router_enabled = None
                                self.is_subscriber = None
                                self.las_get_address_count = None
                                self.las_ll_add_update_count = None
                                self.las_ll_registration_count = None
                                self.las_ll_remove_update_count = None
                                self.las_null_update_count = None
                                self.las_unregistration_count = None
                                self.las_update_count = None
                                self.last_member_query_interval = None
                                self.location = None
                                self.mte_tuple_count = None
                                self.mte_vrf_id = None
                                self.mtu = None
                                self.parent_ifhandle = None
                                self.prefix_length = None
                                self.proxy_interface = None
                                self.querier_address = Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                                self.querier_address.parent = self
                                self.querier_uptime = None
                                self.query_interval = None
                                self.query_maximum_response_time = None
                                self.query_timeout = None
                                self.robustness = None
                                self.router_uptime_in_seconds = None
                                self.state = None
                                self.subscriber_address = Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                                self.subscriber_address.parent = self
                                self.subscriber_id = None
                                self.subscriber_mode = None
                                self.time_since_last_query_in_seconds = None
                                self.time_since_last_report_in_seconds = None
                                self.total_active_groups = None
                                self.vrf_id = None
                                self.vrf_state = None


                            class Address(object):
                                """
                                IP address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                            class QuerierAddress(object):
                                """
                                Address of the Querier
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                            class SubscriberAddress(object):
                                """
                                Address of subscriber
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.configuration_mcast_vrf_error is not None:
                                    return True

                                if self.configuration_mcast_vrf_set is not None:
                                    return True

                                if self.configurationvrf_error is not None:
                                    return True

                                if self.configurationvrf_set is not None:
                                    return True

                                if self.group_joins is not None:
                                    return True

                                if self.group_leaves is not None:
                                    return True

                                if self.host_version is not None:
                                    return True

                                if self.igmp_version is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_configurationverify is not None:
                                    return True

                                if self.is_identity_present is not None:
                                    return True

                                if self.is_im_state_registered is not None:
                                    return True

                                if self.is_interface_up is not None:
                                    return True

                                if self.is_ip_enabled is not None:
                                    return True

                                if self.is_las_registered is not None:
                                    return True

                                if self.is_las_request is not None:
                                    return True

                                if self.is_querier is not None:
                                    return True

                                if self.is_router_enabled is not None:
                                    return True

                                if self.is_subscriber is not None:
                                    return True

                                if self.las_get_address_count is not None:
                                    return True

                                if self.las_ll_add_update_count is not None:
                                    return True

                                if self.las_ll_registration_count is not None:
                                    return True

                                if self.las_ll_remove_update_count is not None:
                                    return True

                                if self.las_null_update_count is not None:
                                    return True

                                if self.las_unregistration_count is not None:
                                    return True

                                if self.las_update_count is not None:
                                    return True

                                if self.last_member_query_interval is not None:
                                    return True

                                if self.location is not None:
                                    return True

                                if self.mte_tuple_count is not None:
                                    return True

                                if self.mte_vrf_id is not None:
                                    return True

                                if self.mtu is not None:
                                    return True

                                if self.parent_ifhandle is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.proxy_interface is not None:
                                    return True

                                if self.querier_address is not None and self.querier_address._has_data():
                                    return True

                                if self.querier_uptime is not None:
                                    return True

                                if self.query_interval is not None:
                                    return True

                                if self.query_maximum_response_time is not None:
                                    return True

                                if self.query_timeout is not None:
                                    return True

                                if self.robustness is not None:
                                    return True

                                if self.router_uptime_in_seconds is not None:
                                    return True

                                if self.state is not None:
                                    return True

                                if self.subscriber_address is not None and self.subscriber_address._has_data():
                                    return True

                                if self.subscriber_id is not None:
                                    return True

                                if self.subscriber_mode is not None:
                                    return True

                                if self.time_since_last_query_in_seconds is not None:
                                    return True

                                if self.time_since_last_report_in_seconds is not None:
                                    return True

                                if self.total_active_groups is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                if self.vrf_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                                return True

                            if self.join_group_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces.IfrsInterface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ifrs_interface is not None:
                            for child_ref in self.ifrs_interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaces']['meta_info']


                class TrafficCounters(object):
                    """
                    IGMP Message Traffic Counters
                    
                    .. attribute:: auxillary_data_length_errors
                    
                    	AuxDataLen errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: bad_scope_errors
                    
                    	BadScope errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: checksum_errors
                    
                    	Checksum errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: elapsed_time
                    
                    	Running time for counters
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: format_errors
                    
                    	Malformed packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: get_packet_failure
                    
                    	Packet get failed
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_disabled_idb
                    
                    	Packet received on disabled idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_dvmrp
                    
                    	DVMRP packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_leaves
                    
                    	Leaves in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_martian_address
                    
                    	Packets received with Martian Address
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_mtrace
                    
                    	Mtrace packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_assigned_vrf_id
                    
                    	Packets received with no assigned vrf id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_idb
                    
                    	Packets received without idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_platform_support_mtrace
                    
                    	mtrace packets without platform support
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_in_idb
                    
                    	Packets received on idb without VRF
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_mtrace
                    
                    	mtrace packets with no vrf associated
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_pim
                    
                    	PIM packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_queries
                    
                    	Query packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_reports
                    
                    	Reports in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: invalid_source_address_errors
                    
                    	Invalid Source Address errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: miscellaneous_errors
                    
                    	Packets dropped for other reasons
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: no_socket_connection
                    
                    	Packets dropped since no socket connection
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_dvmrp
                    
                    	DVMRP packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_leaves
                    
                    	Leaves out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_mtrace
                    
                    	Mtrace packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_no_parent_interface_handle
                    
                    	Failures setting 2nd ifhandle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_pim
                    
                    	PIM packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_queries
                    
                    	Query packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_reports
                    
                    	Reports out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_input_errors
                    
                    	Incoming Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_output_errors
                    
                    	Outgoing Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_in
                    
                    	Packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_out
                    
                    	Packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: receive_socket_errors
                    
                    	Socket errors on reception
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: socket_errors
                    
                    	Socket errors on send
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.auxillary_data_length_errors = None
                        self.bad_scope_errors = None
                        self.checksum_errors = None
                        self.elapsed_time = None
                        self.format_errors = None
                        self.get_packet_failure = None
                        self.input_disabled_idb = None
                        self.input_dvmrp = None
                        self.input_leaves = None
                        self.input_martian_address = None
                        self.input_mtrace = None
                        self.input_no_assigned_vrf_id = None
                        self.input_no_idb = None
                        self.input_no_platform_support_mtrace = None
                        self.input_no_vrf_in_idb = None
                        self.input_no_vrf_mtrace = None
                        self.input_pim = None
                        self.input_queries = None
                        self.input_reports = None
                        self.invalid_source_address_errors = None
                        self.miscellaneous_errors = None
                        self.no_socket_connection = None
                        self.output_dvmrp = None
                        self.output_leaves = None
                        self.output_mtrace = None
                        self.output_no_parent_interface_handle = None
                        self.output_pim = None
                        self.output_queries = None
                        self.output_reports = None
                        self.packet_manager_input_errors = None
                        self.packet_manager_output_errors = None
                        self.packets_in = None
                        self.packets_out = None
                        self.receive_socket_errors = None
                        self.socket_errors = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.auxillary_data_length_errors is not None:
                            return True

                        if self.bad_scope_errors is not None:
                            return True

                        if self.checksum_errors is not None:
                            return True

                        if self.elapsed_time is not None:
                            return True

                        if self.format_errors is not None:
                            return True

                        if self.get_packet_failure is not None:
                            return True

                        if self.input_disabled_idb is not None:
                            return True

                        if self.input_dvmrp is not None:
                            return True

                        if self.input_leaves is not None:
                            return True

                        if self.input_martian_address is not None:
                            return True

                        if self.input_mtrace is not None:
                            return True

                        if self.input_no_assigned_vrf_id is not None:
                            return True

                        if self.input_no_idb is not None:
                            return True

                        if self.input_no_platform_support_mtrace is not None:
                            return True

                        if self.input_no_vrf_in_idb is not None:
                            return True

                        if self.input_no_vrf_mtrace is not None:
                            return True

                        if self.input_pim is not None:
                            return True

                        if self.input_queries is not None:
                            return True

                        if self.input_reports is not None:
                            return True

                        if self.invalid_source_address_errors is not None:
                            return True

                        if self.miscellaneous_errors is not None:
                            return True

                        if self.no_socket_connection is not None:
                            return True

                        if self.output_dvmrp is not None:
                            return True

                        if self.output_leaves is not None:
                            return True

                        if self.output_mtrace is not None:
                            return True

                        if self.output_no_parent_interface_handle is not None:
                            return True

                        if self.output_pim is not None:
                            return True

                        if self.output_queries is not None:
                            return True

                        if self.output_reports is not None:
                            return True

                        if self.packet_manager_input_errors is not None:
                            return True

                        if self.packet_manager_output_errors is not None:
                            return True

                        if self.packets_in is not None:
                            return True

                        if self.packets_out is not None:
                            return True

                        if self.receive_socket_errors is not None:
                            return True

                        if self.socket_errors is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.TrafficCounters']['meta_info']


                class Groups(object):
                    """
                    IGMP Group Database Table
                    
                    .. attribute:: group
                    
                    	IGMP Group Entry Information
                    	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Groups.Group>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group = YList()
                        self.group.parent = self
                        self.group.name = 'group'


                    class Group(object):
                        """
                        IGMP Group Entry Information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Groups.Group.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.Groups.Group.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name = None
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Standby.Vrfs.Vrf.Groups.Group.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Standby.Vrfs.Vrf.Groups.Group.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Groups.Group.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Groups.Group.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Groups.Group.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Groups.Group']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group is not None:
                            for child_ref in self.group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.Groups']['meta_info']


                class GroupSummary(object):
                    """
                    IGMP Groups Summary
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: groutes
                    
                    	No. of (\*,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: sg_routes
                    
                    	No. of (S,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.groutes = None
                        self.is_low_memory = None
                        self.sg_routes = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.groutes is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.sg_routes is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GroupSummary']['meta_info']


                class IfrsInterfaceSummary(object):
                    """
                    IGMP IFRS Interface summary
                    
                    .. attribute:: configuration_count
                    
                    	Configuration count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_count
                    
                    	Interface Count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.configuration_count = None
                        self.interface_count = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.configuration_count is not None:
                            return True

                        if self.interface_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.IfrsInterfaceSummary']['meta_info']


                class GlobalInterfaceTable(object):
                    """
                    IGMP Global Interface 
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.GlobalInterfaceTable']['meta_info']


                class SsmMapDetails(object):
                    """
                    SSM Map Detail
                    
                    .. attribute:: ssm_map_detail
                    
                    	SSM Map Detail Table information
                    	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map_detail = YList()
                        self.ssm_map_detail.parent = self
                        self.ssm_map_detail.name = 'ssm_map_detail'


                    class SsmMapDetail(object):
                        """
                        SSM Map Detail Table information
                        
                        .. attribute:: elapsed_time
                        
                        	Elapsed time
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: expiration_time
                        
                        	Expiration Time in Seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: map_info
                        
                        	Basic Map Info
                        	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo>`
                        
                        .. attribute:: query_interval
                        
                        	Query interval
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: response_pending
                        
                        	Response Pending
                        	**type**\:  bool
                        
                        .. attribute:: sources
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources>`
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.elapsed_time = None
                            self.expiration_time = None
                            self.group_address = None
                            self.map_info = Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo()
                            self.map_info.parent = self
                            self.query_interval = None
                            self.response_pending = None
                            self.sources = YList()
                            self.sources.parent = self
                            self.sources.name = 'sources'
                            self.ssm_map_type = None


                        class MapInfo(object):
                            """
                            Basic Map Info
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                            
                            .. attribute:: map_type
                            
                            	Map Type of group
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_counts
                            
                            	Count of Sources
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address_xr = Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.map_type = None
                                self.source_counts = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.map_type is not None:
                                    return True

                                if self.source_counts is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                        class Sources(object):
                            """
                            List of sources
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.elapsed_time is not None:
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.map_info is not None and self.map_info._has_data():
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.response_pending is not None:
                                return True

                            if self.sources is not None:
                                for child_ref in self.sources:
                                    if child_ref._has_data():
                                        return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMapDetails.SsmMapDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map_detail is not None:
                            for child_ref in self.ssm_map_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.SsmMapDetails']['meta_info']


                class InterfaceStateOffs(object):
                    """
                    IGMP Interface state off
                    
                    .. attribute:: interface_state_off
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off = YList()
                        self.interface_state_off.parent = self
                        self.interface_state_off.name = 'interface_state_off'


                    class InterfaceStateOff(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off is not None:
                            for child_ref in self.interface_state_off:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceStateOffs']['meta_info']


                class InterfaceOldFormatStateOns(object):
                    """
                    IGMP Interface state on old format
                    
                    .. attribute:: interface_old_format_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format_state_on = YList()
                        self.interface_old_format_state_on.parent = self
                        self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                    class InterfaceOldFormatStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format_state_on is not None:
                            for child_ref in self.interface_old_format_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Vrfs.Vrf.InterfaceOldFormatStateOns']['meta_info']

                @property
                def _common_path(self):
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:vrfs/Cisco-IOS-XR-ipv4-igmp-oper:vrf[Cisco-IOS-XR-ipv4-igmp-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.vrf_name is not None:
                        return True

                    if self.detail_groups is not None and self.detail_groups._has_data():
                        return True

                    if self.explicit_groups is not None and self.explicit_groups._has_data():
                        return True

                    if self.global_interface_table is not None and self.global_interface_table._has_data():
                        return True

                    if self.group_summary is not None and self.group_summary._has_data():
                        return True

                    if self.groups is not None and self.groups._has_data():
                        return True

                    if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                        return True

                    if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                        return True

                    if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                        return True

                    if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                        return True

                    if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                        return True

                    if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                        return True

                    if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                        return True

                    if self.interface_table is not None and self.interface_table._has_data():
                        return True

                    if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                        return True

                    if self.non_active_groups is not None and self.non_active_groups._has_data():
                        return True

                    if self.ranges is not None and self.ranges._has_data():
                        return True

                    if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                        return True

                    if self.ssm_maps is not None and self.ssm_maps._has_data():
                        return True

                    if self.summary is not None and self.summary._has_data():
                        return True

                    if self.traffic_counters is not None and self.traffic_counters._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Vrfs.Vrf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.vrf is not None:
                    for child_ref in self.vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Standby.Vrfs']['meta_info']


        class Process(object):
            """
            Process
            
            .. attribute:: amt_gatewaies
            
            	Table containing AMT Gateway DataBase information
            	**type**\:   :py:class:`AmtGatewaies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.AmtGatewaies>`
            
            .. attribute:: amt_summary
            
            	MRIB RouteDB Expiry Information
            	**type**\:   :py:class:`AmtSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.AmtSummary>`
            
            .. attribute:: bvi_statistics
            
            	IGMP BVI Stats
            	**type**\:   :py:class:`BviStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.BviStatistics>`
            
            .. attribute:: nsf
            
            	NSF Information
            	**type**\:   :py:class:`Nsf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.Nsf>`
            
            .. attribute:: nsr
            
            	NSR Information
            	**type**\:   :py:class:`Nsr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.Nsr>`
            
            .. attribute:: unicast_qos_adjust_stats
            
            	IGMP Unicast\-Qos\-Adjust Statistics
            	**type**\:   :py:class:`UnicastQosAdjustStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.UnicastQosAdjustStats>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.amt_gatewaies = Igmp.Standby.Process.AmtGatewaies()
                self.amt_gatewaies.parent = self
                self.amt_summary = Igmp.Standby.Process.AmtSummary()
                self.amt_summary.parent = self
                self.bvi_statistics = Igmp.Standby.Process.BviStatistics()
                self.bvi_statistics.parent = self
                self.nsf = Igmp.Standby.Process.Nsf()
                self.nsf.parent = self
                self.nsr = Igmp.Standby.Process.Nsr()
                self.nsr.parent = self
                self.unicast_qos_adjust_stats = Igmp.Standby.Process.UnicastQosAdjustStats()
                self.unicast_qos_adjust_stats.parent = self


            class AmtSummary(object):
                """
                MRIB RouteDB Expiry Information
                
                .. attribute:: anycast_prefix
                
                	Robustness variable
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: gateway_count
                
                	Number of AMT Gateway
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_acl_configured
                
                	ACL configured under AMT
                	**type**\:  bool
                
                .. attribute:: is_gateway_simulation
                
                	AMT Gateway Simulation
                	**type**\:  bool
                
                .. attribute:: is_ou_of_resource
                
                	AMT Out Of Resource
                	**type**\:  bool
                
                .. attribute:: max_gateway
                
                	Maximum Gateway allowed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mtu
                
                	AMT Tunnel MTU
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: prefix_length
                
                	Advertize AMT prefix length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: query_interval
                
                	AMT Query interval
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: relay_address
                
                	Advertaisment for AMT Relay address
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: tos
                
                	Type Of Service value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ttl
                
                	Time To Live value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_configured_maximum
                
                	AMT Tunnel configured Maximum
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_count
                
                	AMT Tunnel Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.anycast_prefix = None
                    self.gateway_count = None
                    self.is_acl_configured = None
                    self.is_gateway_simulation = None
                    self.is_ou_of_resource = None
                    self.max_gateway = None
                    self.mtu = None
                    self.prefix_length = None
                    self.query_interval = None
                    self.relay_address = None
                    self.tos = None
                    self.ttl = None
                    self.tunnel_configured_maximum = None
                    self.tunnel_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.anycast_prefix is not None:
                        return True

                    if self.gateway_count is not None:
                        return True

                    if self.is_acl_configured is not None:
                        return True

                    if self.is_gateway_simulation is not None:
                        return True

                    if self.is_ou_of_resource is not None:
                        return True

                    if self.max_gateway is not None:
                        return True

                    if self.mtu is not None:
                        return True

                    if self.prefix_length is not None:
                        return True

                    if self.query_interval is not None:
                        return True

                    if self.relay_address is not None:
                        return True

                    if self.tos is not None:
                        return True

                    if self.ttl is not None:
                        return True

                    if self.tunnel_configured_maximum is not None:
                        return True

                    if self.tunnel_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.AmtSummary']['meta_info']


            class Nsr(object):
                """
                NSR Information
                
                .. attribute:: collab_conv_done
                
                	Collaborators convergence done
                	**type**\:  bool
                
                .. attribute:: count_proc_connection_dn
                
                	No. of times process connection went down
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_proc_connection_up
                
                	No. of times process connection went up
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_not_ready
                
                	No. of times RMF Not Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_ready
                
                	No. of times RMF Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_proc
                
                	Time when process came up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_dn
                
                	Time when process connection went down
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_up
                
                	Time when process connection went up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_not_ready
                
                	Time when RMF Not\-Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_ready
                
                	Time when RMF Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: partner_proc_connected
                
                	Partner process connected
                	**type**\:  bool
                
                .. attribute:: rmf_notification_done
                
                	RMF Notification done
                	**type**\:  bool
                
                .. attribute:: state
                
                	NSR state
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.collab_conv_done = None
                    self.count_proc_connection_dn = None
                    self.count_proc_connection_up = None
                    self.count_rmf_not_ready = None
                    self.count_rmf_ready = None
                    self.last_proc = None
                    self.last_proc_connection_dn = None
                    self.last_proc_connection_up = None
                    self.last_rmf_not_ready = None
                    self.last_rmf_ready = None
                    self.partner_proc_connected = None
                    self.rmf_notification_done = None
                    self.state = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsr'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.collab_conv_done is not None:
                        return True

                    if self.count_proc_connection_dn is not None:
                        return True

                    if self.count_proc_connection_up is not None:
                        return True

                    if self.count_rmf_not_ready is not None:
                        return True

                    if self.count_rmf_ready is not None:
                        return True

                    if self.last_proc is not None:
                        return True

                    if self.last_proc_connection_dn is not None:
                        return True

                    if self.last_proc_connection_up is not None:
                        return True

                    if self.last_rmf_not_ready is not None:
                        return True

                    if self.last_rmf_ready is not None:
                        return True

                    if self.partner_proc_connected is not None:
                        return True

                    if self.rmf_notification_done is not None:
                        return True

                    if self.state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.Nsr']['meta_info']


            class AmtGatewaies(object):
                """
                Table containing AMT Gateway DataBase
                information
                
                .. attribute:: amt_gateway
                
                	AMT Gateway DataBase information
                	**type**\: list of    :py:class:`AmtGateway <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.Process.AmtGatewaies.AmtGateway>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.amt_gateway = YList()
                    self.amt_gateway.parent = self
                    self.amt_gateway.name = 'amt_gateway'


                class AmtGateway(object):
                    """
                    AMT Gateway DataBase information
                    
                    .. attribute:: amt_nonce
                    
                    	Nonce
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amt_port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amtgw
                    
                    	GW
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: amtnh
                    
                    	AMT NH
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: gateway_address
                    
                    	Gateway Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: idb
                    
                    	IDB
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: key_len
                    
                    	Len
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_in
                    
                    	UpdIn
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_out
                    
                    	UpdOut
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.amt_nonce = None
                        self.amt_port = None
                        self.amtgw = None
                        self.amtnh = None
                        self.gateway_address = None
                        self.idb = None
                        self.key_len = None
                        self.mem_upd_in = None
                        self.mem_upd_out = None
                        self.port = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies/Cisco-IOS-XR-ipv4-igmp-oper:amt-gateway'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.amt_nonce is not None:
                            return True

                        if self.amt_port is not None:
                            return True

                        if self.amtgw is not None:
                            return True

                        if self.amtnh is not None:
                            return True

                        if self.gateway_address is not None:
                            return True

                        if self.idb is not None:
                            return True

                        if self.key_len is not None:
                            return True

                        if self.mem_upd_in is not None:
                            return True

                        if self.mem_upd_out is not None:
                            return True

                        if self.port is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.Process.AmtGatewaies.AmtGateway']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.amt_gateway is not None:
                        for child_ref in self.amt_gateway:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.AmtGatewaies']['meta_info']


            class UnicastQosAdjustStats(object):
                """
                IGMP Unicast\-Qos\-Adjust Statistics
                
                .. attribute:: add_to_batches
                
                	Add to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: batches
                
                	I2Q Rate Batch count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: delete_to_batches
                
                	Delete to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_qos_s_sweeped
                
                	Is QOS Sweeped once 
                	**type**\:  bool
                
                .. attribute:: is_resync_received
                
                	Is Resync request received
                	**type**\:  bool
                
                .. attribute:: is_resync_required
                
                	Is Resync required
                	**type**\:  bool
                
                .. attribute:: is_resync_start_sent
                
                	Is Resync Start message sent
                	**type**\:  bool
                
                .. attribute:: last_download_time
                
                	Time elapsed since Last download to QOS in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: last_sweep_time
                
                	Time elapsed since Last mark and sweep in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: queues
                
                	I2Q Queue count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: received_resync_requests
                
                	Number of Resync request received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_comm_errors
                
                	Send Error due to comms count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_errors
                
                	Number of Send errors in batch
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_partial_errors
                
                	Send Error due to partial issue count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_success
                
                	Send Success count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: sent_resync_bulks
                
                	Number of bulks sent for last resync received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.add_to_batches = None
                    self.batches = None
                    self.delete_to_batches = None
                    self.is_qos_s_sweeped = None
                    self.is_resync_received = None
                    self.is_resync_required = None
                    self.is_resync_start_sent = None
                    self.last_download_time = None
                    self.last_sweep_time = None
                    self.queues = None
                    self.received_resync_requests = None
                    self.send_comm_errors = None
                    self.send_errors = None
                    self.send_partial_errors = None
                    self.send_success = None
                    self.sent_resync_bulks = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:unicast-qos-adjust-stats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.add_to_batches is not None:
                        return True

                    if self.batches is not None:
                        return True

                    if self.delete_to_batches is not None:
                        return True

                    if self.is_qos_s_sweeped is not None:
                        return True

                    if self.is_resync_received is not None:
                        return True

                    if self.is_resync_required is not None:
                        return True

                    if self.is_resync_start_sent is not None:
                        return True

                    if self.last_download_time is not None:
                        return True

                    if self.last_sweep_time is not None:
                        return True

                    if self.queues is not None:
                        return True

                    if self.received_resync_requests is not None:
                        return True

                    if self.send_comm_errors is not None:
                        return True

                    if self.send_errors is not None:
                        return True

                    if self.send_partial_errors is not None:
                        return True

                    if self.send_success is not None:
                        return True

                    if self.sent_resync_bulks is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.UnicastQosAdjustStats']['meta_info']


            class BviStatistics(object):
                """
                IGMP BVI Stats
                
                .. attribute:: null_buffer_handles
                
                	Number of AIPC NULL buffer handles
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_buffers
                
                	Number of AIPC buffers received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_buffers
                
                	Number of AIPC buffers released
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_fail_buffers
                
                	Number of AIPC buffers release failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_igmp_packet_success
                
                	Number of IGMP protocol messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_close_notif
                
                	Number of AIPC close notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_connect_notif
                
                	Number of AIPC connect notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_error_notif
                
                	Number of AIPC error notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_input_wait_notif
                
                	Number of AIPC input waiting notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_lwm_notif
                
                	Number of AIPC LWM notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_open_notif
                
                	Number of AIPC open notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_output_notif
                
                	Number of AIPC output notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_publish_notif
                
                	Number of AIPC publish notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_q_full_notif
                
                	Number of AIPC queue full notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_send_status_notif
                
                	Number of AIPC send status notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_blocks
                
                	Number of AIPC buffers send blocked
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffer_errors
                
                	Number of AIPC transmission errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffers
                
                	Number of AIPC buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_mrouter_buffers
                
                	Number of IGMP Mrouter buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_protocol_buffers
                
                	Number of IGMP protocol buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_buffers
                
                	Number of IGMP Unknown buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_dc
                
                	Number of WTX messages dropped due to disconnect
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_nomem
                
                	Number of WTX messages dropped to memory
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_freed
                
                	Number of WTX messages freed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_proto_sent
                
                	Number of WTX messages sent to Protocol
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_recvd
                
                	Number of WTX messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_sent
                
                	Number of WTX messages sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.null_buffer_handles = None
                    self.receive_buffers = None
                    self.release_buffers = None
                    self.release_fail_buffers = None
                    self.rx_add_mrouter_msg = None
                    self.rx_delete_mrouter_msg = None
                    self.rx_igmp_packet_success = None
                    self.rx_ipc_close_notif = None
                    self.rx_ipc_connect_notif = None
                    self.rx_ipc_error_notif = None
                    self.rx_ipc_input_wait_notif = None
                    self.rx_ipc_lwm_notif = None
                    self.rx_ipc_open_notif = None
                    self.rx_ipc_output_notif = None
                    self.rx_ipc_publish_notif = None
                    self.rx_ipc_q_full_notif = None
                    self.rx_ipc_send_status_notif = None
                    self.rx_sweep_mrouter_msg = None
                    self.rx_unknown_mrouter_msg = None
                    self.send_blocks = None
                    self.tx_add_mrouter_msg = None
                    self.tx_buffer_errors = None
                    self.tx_buffers = None
                    self.tx_delete_mrouter_msg = None
                    self.tx_mrouter_buffers = None
                    self.tx_protocol_buffers = None
                    self.tx_sweep_mrouter_msg = None
                    self.tx_unknown_buffers = None
                    self.tx_unknown_mrouter_msg = None
                    self.wtx_msg_drop_dc = None
                    self.wtx_msg_drop_nomem = None
                    self.wtx_msg_freed = None
                    self.wtx_msg_proto_sent = None
                    self.wtx_msg_recvd = None
                    self.wtx_msg_sent = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:bvi-statistics'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.null_buffer_handles is not None:
                        return True

                    if self.receive_buffers is not None:
                        return True

                    if self.release_buffers is not None:
                        return True

                    if self.release_fail_buffers is not None:
                        return True

                    if self.rx_add_mrouter_msg is not None:
                        return True

                    if self.rx_delete_mrouter_msg is not None:
                        return True

                    if self.rx_igmp_packet_success is not None:
                        return True

                    if self.rx_ipc_close_notif is not None:
                        return True

                    if self.rx_ipc_connect_notif is not None:
                        return True

                    if self.rx_ipc_error_notif is not None:
                        return True

                    if self.rx_ipc_input_wait_notif is not None:
                        return True

                    if self.rx_ipc_lwm_notif is not None:
                        return True

                    if self.rx_ipc_open_notif is not None:
                        return True

                    if self.rx_ipc_output_notif is not None:
                        return True

                    if self.rx_ipc_publish_notif is not None:
                        return True

                    if self.rx_ipc_q_full_notif is not None:
                        return True

                    if self.rx_ipc_send_status_notif is not None:
                        return True

                    if self.rx_sweep_mrouter_msg is not None:
                        return True

                    if self.rx_unknown_mrouter_msg is not None:
                        return True

                    if self.send_blocks is not None:
                        return True

                    if self.tx_add_mrouter_msg is not None:
                        return True

                    if self.tx_buffer_errors is not None:
                        return True

                    if self.tx_buffers is not None:
                        return True

                    if self.tx_delete_mrouter_msg is not None:
                        return True

                    if self.tx_mrouter_buffers is not None:
                        return True

                    if self.tx_protocol_buffers is not None:
                        return True

                    if self.tx_sweep_mrouter_msg is not None:
                        return True

                    if self.tx_unknown_buffers is not None:
                        return True

                    if self.tx_unknown_mrouter_msg is not None:
                        return True

                    if self.wtx_msg_drop_dc is not None:
                        return True

                    if self.wtx_msg_drop_nomem is not None:
                        return True

                    if self.wtx_msg_freed is not None:
                        return True

                    if self.wtx_msg_proto_sent is not None:
                        return True

                    if self.wtx_msg_recvd is not None:
                        return True

                    if self.wtx_msg_sent is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.BviStatistics']['meta_info']


            class Nsf(object):
                """
                NSF Information
                
                .. attribute:: is_multicast_nsf_active
                
                	Is Multicast NSF active
                	**type**\:  bool
                
                .. attribute:: last_icd_notif_recv
                
                	Last ICD Notif Recv
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_icd_notif_recv_min
                
                	Last ICD Notif Recv in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_off
                
                	Last NSF time off
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_off_min
                
                	Last NSF time OFF in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_on
                
                	Last NSF time ON
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_on_min
                
                	Last NSF time ON in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_time_left
                
                	Multicast NSF time remaining in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_timeout
                
                	Multicast NSF timeout in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: respawn_count
                
                	Respawn Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.is_multicast_nsf_active = None
                    self.last_icd_notif_recv = None
                    self.last_icd_notif_recv_min = None
                    self.last_nsf_off = None
                    self.last_nsf_off_min = None
                    self.last_nsf_on = None
                    self.last_nsf_on_min = None
                    self.multicast_nsf_time_left = None
                    self.multicast_nsf_timeout = None
                    self.respawn_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsf'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.is_multicast_nsf_active is not None:
                        return True

                    if self.last_icd_notif_recv is not None:
                        return True

                    if self.last_icd_notif_recv_min is not None:
                        return True

                    if self.last_nsf_off is not None:
                        return True

                    if self.last_nsf_off_min is not None:
                        return True

                    if self.last_nsf_on is not None:
                        return True

                    if self.last_nsf_on_min is not None:
                        return True

                    if self.multicast_nsf_time_left is not None:
                        return True

                    if self.multicast_nsf_timeout is not None:
                        return True

                    if self.respawn_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.Process.Nsf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:process'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.amt_gatewaies is not None and self.amt_gatewaies._has_data():
                    return True

                if self.amt_summary is not None and self.amt_summary._has_data():
                    return True

                if self.bvi_statistics is not None and self.bvi_statistics._has_data():
                    return True

                if self.nsf is not None and self.nsf._has_data():
                    return True

                if self.nsr is not None and self.nsr._has_data():
                    return True

                if self.unicast_qos_adjust_stats is not None and self.unicast_qos_adjust_stats._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Standby.Process']['meta_info']


        class DefaultContext(object):
            """
            Default Context
            
            .. attribute:: detail_groups
            
            	IGMP Detail Group Database
            	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups>`
            
            .. attribute:: explicit_groups
            
            	IGMP Explicit Group Database
            	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups>`
            
            .. attribute:: global_interface_table
            
            	IGMP Global Interface 
            	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GlobalInterfaceTable>`
            
            .. attribute:: group_summary
            
            	IGMP Groups Summary
            	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GroupSummary>`
            
            .. attribute:: groups
            
            	IGMP Group Database Table
            	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Groups>`
            
            .. attribute:: ifrs_interface_summary
            
            	IGMP IFRS Interface summary
            	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaceSummary>`
            
            .. attribute:: ifrs_interfaces
            
            	IGMP Interface specific
            	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces>`
            
            .. attribute:: interface_old_format_state_ons
            
            	IGMP Interface state on old format
            	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns>`
            
            .. attribute:: interface_old_formats
            
            	IGMP Interface specific Table in old format
            	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormats>`
            
            .. attribute:: interface_state_off_old_formats
            
            	IGMP Interface state off old format
            	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats>`
            
            .. attribute:: interface_state_offs
            
            	IGMP Interface state off
            	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffs>`
            
            .. attribute:: interface_state_ons
            
            	IGMP Interface state on
            	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOns>`
            
            .. attribute:: interface_table
            
            	IGMP Interface specific Table
            	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceTable>`
            
            .. attribute:: interface_unicast_qos_adjusts
            
            	IGMP Interface Unicast\-Qos\-Adjust
            	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts>`
            
            .. attribute:: non_active_groups
            
            	IGMP Non\-Active Groups Information
            	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.NonActiveGroups>`
            
            .. attribute:: ranges
            
            	Range table
            	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Ranges>`
            
            .. attribute:: ssm_map_details
            
            	SSM Map Detail
            	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMapDetails>`
            
            .. attribute:: ssm_maps
            
            	SSM Map Table
            	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMaps>`
            
            .. attribute:: summary
            
            	IGMP Summary Information
            	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Summary>`
            
            .. attribute:: traffic_counters
            
            	IGMP Message Traffic Counters
            	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.TrafficCounters>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.detail_groups = Igmp.Standby.DefaultContext.DetailGroups()
                self.detail_groups.parent = self
                self.explicit_groups = Igmp.Standby.DefaultContext.ExplicitGroups()
                self.explicit_groups.parent = self
                self.global_interface_table = Igmp.Standby.DefaultContext.GlobalInterfaceTable()
                self.global_interface_table.parent = self
                self.group_summary = Igmp.Standby.DefaultContext.GroupSummary()
                self.group_summary.parent = self
                self.groups = Igmp.Standby.DefaultContext.Groups()
                self.groups.parent = self
                self.ifrs_interface_summary = Igmp.Standby.DefaultContext.IfrsInterfaceSummary()
                self.ifrs_interface_summary.parent = self
                self.ifrs_interfaces = Igmp.Standby.DefaultContext.IfrsInterfaces()
                self.ifrs_interfaces.parent = self
                self.interface_old_format_state_ons = Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns()
                self.interface_old_format_state_ons.parent = self
                self.interface_old_formats = Igmp.Standby.DefaultContext.InterfaceOldFormats()
                self.interface_old_formats.parent = self
                self.interface_state_off_old_formats = Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats()
                self.interface_state_off_old_formats.parent = self
                self.interface_state_offs = Igmp.Standby.DefaultContext.InterfaceStateOffs()
                self.interface_state_offs.parent = self
                self.interface_state_ons = Igmp.Standby.DefaultContext.InterfaceStateOns()
                self.interface_state_ons.parent = self
                self.interface_table = Igmp.Standby.DefaultContext.InterfaceTable()
                self.interface_table.parent = self
                self.interface_unicast_qos_adjusts = Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts()
                self.interface_unicast_qos_adjusts.parent = self
                self.non_active_groups = Igmp.Standby.DefaultContext.NonActiveGroups()
                self.non_active_groups.parent = self
                self.ranges = Igmp.Standby.DefaultContext.Ranges()
                self.ranges.parent = self
                self.ssm_map_details = Igmp.Standby.DefaultContext.SsmMapDetails()
                self.ssm_map_details.parent = self
                self.ssm_maps = Igmp.Standby.DefaultContext.SsmMaps()
                self.ssm_maps.parent = self
                self.summary = Igmp.Standby.DefaultContext.Summary()
                self.summary.parent = self
                self.traffic_counters = Igmp.Standby.DefaultContext.TrafficCounters()
                self.traffic_counters.parent = self


            class Summary(object):
                """
                IGMP Summary Information
                
                .. attribute:: disabled_interface_count
                
                	No. of disabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: enabled_interface_count
                
                	No. of enabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_limit
                
                	Maximum groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface
                
                	Maximum and current groups accepted for each interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Summary.Interface>`
                
                .. attribute:: is_disabled
                
                	Is maximum enforcement disabled
                	**type**\:  bool
                
                .. attribute:: node_low_memory
                
                	Is node in low memory condition
                	**type**\:  bool
                
                .. attribute:: robustness
                
                	Robustness variable
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: supported_interfaces
                
                	No. of supported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_mte_config_count
                
                	No. of static group commands
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: unsupported_interfaces
                
                	No. of unsupported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.disabled_interface_count = None
                    self.enabled_interface_count = None
                    self.group_count = None
                    self.group_limit = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'
                    self.is_disabled = None
                    self.node_low_memory = None
                    self.robustness = None
                    self.supported_interfaces = None
                    self.tunnel_mte_config_count = None
                    self.unsupported_interfaces = None


                class Interface(object):
                    """
                    Maximum and current groups accepted for each
                    interface
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: on_off
                    
                    	Enabled/Disabled
                    	**type**\:  bool
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent if handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Time elapsed since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface_name = None
                        self.on_off = None
                        self.parent_ifhandle = None
                        self.router_uptime_in_seconds = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.on_off is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.Summary.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.disabled_interface_count is not None:
                        return True

                    if self.enabled_interface_count is not None:
                        return True

                    if self.group_count is not None:
                        return True

                    if self.group_limit is not None:
                        return True

                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    if self.is_disabled is not None:
                        return True

                    if self.node_low_memory is not None:
                        return True

                    if self.robustness is not None:
                        return True

                    if self.supported_interfaces is not None:
                        return True

                    if self.tunnel_mte_config_count is not None:
                        return True

                    if self.unsupported_interfaces is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.Summary']['meta_info']


            class InterfaceStateOns(object):
                """
                IGMP Interface state on
                
                .. attribute:: interface_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_on = YList()
                    self.interface_state_on.parent = self
                    self.interface_state_on.name = 'interface_state_on'


                class InterfaceStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOns.InterfaceStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_on is not None:
                        for child_ref in self.interface_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOns']['meta_info']


            class DetailGroups(object):
                """
                IGMP Detail Group Database
                
                .. attribute:: detail_group
                
                	IGMP Detail Group Entry Information
                	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.detail_group = YList()
                    self.detail_group.parent = self
                    self.detail_group.name = 'detail_group'


                class DetailGroup(object):
                    """
                    IGMP Detail Group Entry Information
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_host_exclude_mode
                    
                    	Group host filter mode
                    	**type**\:  bool
                    
                    .. attribute:: is_router_exclude_mode
                    
                    	Group router filter mode
                    	**type**\:  bool
                    
                    .. attribute:: source
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.Source>`
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_info = Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo()
                        self.group_info.parent = self
                        self.interface_name = None
                        self.is_host_exclude_mode = None
                        self.is_router_exclude_mode = None
                        self.source = YList()
                        self.source.parent = self
                        self.source.name = 'source'
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                    class Source(object):
                        """
                        List of sources
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: flags
                        
                        	Source flags
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_forward
                        
                        	Should we forward on this entry
                        	**type**\:  bool
                        
                        .. attribute:: is_local
                        
                        	Is this a local source
                        	**type**\:  bool
                        
                        .. attribute:: is_remote
                        
                        	Is this a remote source
                        	**type**\:  bool
                        
                        .. attribute:: is_we_report
                        
                        	Should we report the source
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.flags = None
                            self.is_added = None
                            self.is_forward = None
                            self.is_local = None
                            self.is_remote = None
                            self.is_we_report = None
                            self.source_address = Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.flags is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_forward is not None:
                                return True

                            if self.is_local is not None:
                                return True

                            if self.is_remote is not None:
                                return True

                            if self.is_we_report is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup.Source']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.is_host_exclude_mode is not None:
                            return True

                        if self.is_router_exclude_mode is not None:
                            return True

                        if self.source is not None:
                            for child_ref in self.source:
                                if child_ref._has_data():
                                    return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups.DetailGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.detail_group is not None:
                        for child_ref in self.detail_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.DetailGroups']['meta_info']


            class NonActiveGroups(object):
                """
                IGMP Non\-Active Groups Information
                
                .. attribute:: non_active_groups
                
                	List of non\-active groups
                	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.non_active_groups = YList()
                    self.non_active_groups.parent = self
                    self.non_active_groups.name = 'non_active_groups'


                class NonActiveGroups_(object):
                    """
                    List of non\-active groups
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                    
                    .. attribute:: interface
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**length:** 0..65
                    
                    .. attribute:: reason_for_non_activity
                    
                    	Reason for group join not being processed
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress()
                        self.group_address.parent = self
                        self.interface = None
                        self.reason_for_non_activity = None
                        self.source_address = Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress()
                        self.source_address.parent = self


                    class GroupAddress(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None and self.group_address._has_data():
                            return True

                        if self.interface is not None:
                            return True

                        if self.reason_for_non_activity is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.NonActiveGroups.NonActiveGroups_']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.non_active_groups is not None:
                        for child_ref in self.non_active_groups:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.NonActiveGroups']['meta_info']


            class SsmMaps(object):
                """
                SSM Map Table
                
                .. attribute:: ssm_map
                
                	SSM Map information
                	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMaps.SsmMap>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map = YList()
                    self.ssm_map.parent = self
                    self.ssm_map.name = 'ssm_map'


                class SsmMap(object):
                    """
                    SSM Map information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr>`
                    
                    .. attribute:: map_type
                    
                    	Map Type of group
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: source_counts
                    
                    	Count of Sources
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.map_type = None
                        self.source_counts = None
                        self.ssm_map_type = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.map_type is not None:
                            return True

                        if self.source_counts is not None:
                            return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.SsmMaps.SsmMap']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map is not None:
                        for child_ref in self.ssm_map:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.SsmMaps']['meta_info']


            class ExplicitGroups(object):
                """
                IGMP Explicit Group Database
                
                .. attribute:: explicit_group
                
                	IGMP Explicit Group Entry Information
                	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.explicit_group = YList()
                    self.explicit_group.parent = self
                    self.explicit_group.name = 'explicit_group'


                class ExplicitGroup(object):
                    """
                    IGMP Explicit Group Entry Information
                    
                    .. attribute:: exclude_hosts
                    
                    	No. of hosts who are excluded
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo>`
                    
                    .. attribute:: host
                    
                    	List of hosts
                    	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host>`
                    
                    .. attribute:: include_hosts
                    
                    	No. of hosts who are included
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.exclude_hosts = None
                        self.group_address = None
                        self.group_info = Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo()
                        self.group_info.parent = self
                        self.host = YList()
                        self.host.parent = self
                        self.host.name = 'host'
                        self.include_hosts = None
                        self.interface_name = None
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                    class Host(object):
                        """
                        List of hosts
                        
                        .. attribute:: address
                        
                        	Host Address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address>`
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: is_exclude
                        
                        	Exclude flag set
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	First 3 source addresses
                        	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                        
                        .. attribute:: source_count
                        
                        	No. of sources in entry
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address()
                            self.address.parent = self
                            self.expiration_time = None
                            self.is_exclude = None
                            self.source_address = YList()
                            self.source_address.parent = self
                            self.source_address.name = 'source_address'
                            self.source_count = None
                            self.uptime = None


                        class Address(object):
                            """
                            Host Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                        class SourceAddress(object):
                            """
                            First 3 source addresses
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.is_exclude is not None:
                                return True

                            if self.source_address is not None:
                                for child_ref in self.source_address:
                                    if child_ref._has_data():
                                        return True

                            if self.source_count is not None:
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.exclude_hosts is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.host is not None:
                            for child_ref in self.host:
                                if child_ref._has_data():
                                    return True

                        if self.include_hosts is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups.ExplicitGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.explicit_group is not None:
                        for child_ref in self.explicit_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.ExplicitGroups']['meta_info']


            class InterfaceTable(object):
                """
                IGMP Interface specific Table
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceTable']['meta_info']


            class InterfaceOldFormats(object):
                """
                IGMP Interface specific Table in old format
                
                .. attribute:: interface_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format = YList()
                    self.interface_old_format.parent = self
                    self.interface_old_format.name = 'interface_old_format'


                class InterfaceOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format is not None:
                        for child_ref in self.interface_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormats']['meta_info']


            class InterfaceStateOffOldFormats(object):
                """
                IGMP Interface state off old format
                
                .. attribute:: interface_state_off_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off_old_format = YList()
                    self.interface_state_off_old_format.parent = self
                    self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                class InterfaceStateOffOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off_old_format is not None:
                        for child_ref in self.interface_state_off_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffOldFormats']['meta_info']


            class InterfaceUnicastQosAdjusts(object):
                """
                IGMP Interface Unicast\-Qos\-Adjust
                
                .. attribute:: interface_unicast_qos_adjust
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_unicast_qos_adjust = YList()
                    self.interface_unicast_qos_adjust.parent = self
                    self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                class InterfaceUnicastQosAdjust(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_virtual_access
                    
                    	Is VirtualAccess Interface
                    	**type**\:  bool
                    
                    .. attribute:: rate
                    
                    	Overall rate in Kbps
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: rate_decrements
                    
                    	Count of rate decrements
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: rate_increments
                    
                    	Count of rate increments
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: update
                    
                    	List of updates
                    	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.is_virtual_access = None
                        self.rate = None
                        self.rate_decrements = None
                        self.rate_increments = None
                        self.update = YList()
                        self.update.parent = self
                        self.update.name = 'update'


                    class Update(object):
                        """
                        List of updates
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                        
                        .. attribute:: is_add
                        
                        	Is this a rate increment
                        	**type**\:  bool
                        
                        .. attribute:: received_time
                        
                        	Time this update is received
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: source_address
                        
                        	Source address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                        
                        .. attribute:: weight
                        
                        	Weight from policy
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                            self.group_address.parent = self
                            self.is_add = None
                            self.received_time = None
                            self.source_address = Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                            self.source_address.parent = self
                            self.weight = None


                        class SourceAddress(object):
                            """
                            Source address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                        class GroupAddress(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.is_add is not None:
                                return True

                            if self.received_time is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.weight is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.is_virtual_access is not None:
                            return True

                        if self.rate is not None:
                            return True

                        if self.rate_decrements is not None:
                            return True

                        if self.rate_increments is not None:
                            return True

                        if self.update is not None:
                            for child_ref in self.update:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_unicast_qos_adjust is not None:
                        for child_ref in self.interface_unicast_qos_adjust:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceUnicastQosAdjusts']['meta_info']


            class Ranges(object):
                """
                Range table
                
                .. attribute:: range
                
                	Range information
                	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Ranges.Range>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.range = YList()
                    self.range.parent = self
                    self.range.name = 'range'


                class Range(object):
                    """
                    Range information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Ranges.Range.GroupAddressXr>`
                    
                    .. attribute:: group_mask
                    
                    	Group Mask
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: is_stale
                    
                    	Is the entry stale
                    	**type**\:  bool
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: protocol
                    
                    	Protocol
                    	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Standby.DefaultContext.Ranges.Range.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.group_mask = None
                        self.is_stale = None
                        self.prefix_length = None
                        self.protocol = None


                    class GroupAddressXr(object):
                        """
                        Group address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.Ranges.Range.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.group_mask is not None:
                            return True

                        if self.is_stale is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.protocol is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.Ranges.Range']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.range is not None:
                        for child_ref in self.range:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.Ranges']['meta_info']


            class IfrsInterfaces(object):
                """
                IGMP Interface specific
                
                .. attribute:: ifrs_interface
                
                	IGMP IFRS Interface
                	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ifrs_interface = YList()
                    self.ifrs_interface.parent = self
                    self.ifrs_interface.name = 'ifrs_interface'


                class IfrsInterface(object):
                    """
                    IGMP IFRS Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	IFRS Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: igmp_interface_entry
                    
                    	IGMP interface entry
                    	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                    
                    .. attribute:: join_group_count
                    
                    	Join group count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.igmp_interface_entry = Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                        self.igmp_interface_entry.parent = self
                        self.join_group_count = None


                    class IgmpInterfaceEntry(object):
                        """
                        IGMP interface entry
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                            return True

                        if self.join_group_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces.IfrsInterface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ifrs_interface is not None:
                        for child_ref in self.ifrs_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaces']['meta_info']


            class TrafficCounters(object):
                """
                IGMP Message Traffic Counters
                
                .. attribute:: auxillary_data_length_errors
                
                	AuxDataLen errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: bad_scope_errors
                
                	BadScope errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: checksum_errors
                
                	Checksum errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: elapsed_time
                
                	Running time for counters
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: format_errors
                
                	Malformed packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: get_packet_failure
                
                	Packet get failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_disabled_idb
                
                	Packet received on disabled idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_dvmrp
                
                	DVMRP packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_leaves
                
                	Leaves in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_martian_address
                
                	Packets received with Martian Address
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_mtrace
                
                	Mtrace packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_assigned_vrf_id
                
                	Packets received with no assigned vrf id
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_idb
                
                	Packets received without idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_platform_support_mtrace
                
                	mtrace packets without platform support
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_in_idb
                
                	Packets received on idb without VRF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_mtrace
                
                	mtrace packets with no vrf associated
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_pim
                
                	PIM packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_queries
                
                	Query packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_reports
                
                	Reports in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: invalid_source_address_errors
                
                	Invalid Source Address errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: miscellaneous_errors
                
                	Packets dropped for other reasons
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: no_socket_connection
                
                	Packets dropped since no socket connection
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_dvmrp
                
                	DVMRP packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_leaves
                
                	Leaves out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_mtrace
                
                	Mtrace packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_no_parent_interface_handle
                
                	Failures setting 2nd ifhandle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_pim
                
                	PIM packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_queries
                
                	Query packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_reports
                
                	Reports out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_input_errors
                
                	Incoming Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_output_errors
                
                	Outgoing Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_in
                
                	Packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_out
                
                	Packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_socket_errors
                
                	Socket errors on reception
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: socket_errors
                
                	Socket errors on send
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.auxillary_data_length_errors = None
                    self.bad_scope_errors = None
                    self.checksum_errors = None
                    self.elapsed_time = None
                    self.format_errors = None
                    self.get_packet_failure = None
                    self.input_disabled_idb = None
                    self.input_dvmrp = None
                    self.input_leaves = None
                    self.input_martian_address = None
                    self.input_mtrace = None
                    self.input_no_assigned_vrf_id = None
                    self.input_no_idb = None
                    self.input_no_platform_support_mtrace = None
                    self.input_no_vrf_in_idb = None
                    self.input_no_vrf_mtrace = None
                    self.input_pim = None
                    self.input_queries = None
                    self.input_reports = None
                    self.invalid_source_address_errors = None
                    self.miscellaneous_errors = None
                    self.no_socket_connection = None
                    self.output_dvmrp = None
                    self.output_leaves = None
                    self.output_mtrace = None
                    self.output_no_parent_interface_handle = None
                    self.output_pim = None
                    self.output_queries = None
                    self.output_reports = None
                    self.packet_manager_input_errors = None
                    self.packet_manager_output_errors = None
                    self.packets_in = None
                    self.packets_out = None
                    self.receive_socket_errors = None
                    self.socket_errors = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.auxillary_data_length_errors is not None:
                        return True

                    if self.bad_scope_errors is not None:
                        return True

                    if self.checksum_errors is not None:
                        return True

                    if self.elapsed_time is not None:
                        return True

                    if self.format_errors is not None:
                        return True

                    if self.get_packet_failure is not None:
                        return True

                    if self.input_disabled_idb is not None:
                        return True

                    if self.input_dvmrp is not None:
                        return True

                    if self.input_leaves is not None:
                        return True

                    if self.input_martian_address is not None:
                        return True

                    if self.input_mtrace is not None:
                        return True

                    if self.input_no_assigned_vrf_id is not None:
                        return True

                    if self.input_no_idb is not None:
                        return True

                    if self.input_no_platform_support_mtrace is not None:
                        return True

                    if self.input_no_vrf_in_idb is not None:
                        return True

                    if self.input_no_vrf_mtrace is not None:
                        return True

                    if self.input_pim is not None:
                        return True

                    if self.input_queries is not None:
                        return True

                    if self.input_reports is not None:
                        return True

                    if self.invalid_source_address_errors is not None:
                        return True

                    if self.miscellaneous_errors is not None:
                        return True

                    if self.no_socket_connection is not None:
                        return True

                    if self.output_dvmrp is not None:
                        return True

                    if self.output_leaves is not None:
                        return True

                    if self.output_mtrace is not None:
                        return True

                    if self.output_no_parent_interface_handle is not None:
                        return True

                    if self.output_pim is not None:
                        return True

                    if self.output_queries is not None:
                        return True

                    if self.output_reports is not None:
                        return True

                    if self.packet_manager_input_errors is not None:
                        return True

                    if self.packet_manager_output_errors is not None:
                        return True

                    if self.packets_in is not None:
                        return True

                    if self.packets_out is not None:
                        return True

                    if self.receive_socket_errors is not None:
                        return True

                    if self.socket_errors is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.TrafficCounters']['meta_info']


            class Groups(object):
                """
                IGMP Group Database Table
                
                .. attribute:: group
                
                	IGMP Group Entry Information
                	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Groups.Group>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group = YList()
                    self.group.parent = self
                    self.group.name = 'group'


                class Group(object):
                    """
                    IGMP Group Entry Information
                    
                    .. attribute:: expiration_time
                    
                    	Expiration time in seconds
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**units**\: second
                    
                    .. attribute:: explicit_tracking_enabled
                    
                    	Is explicit tracking enabled
                    	**type**\:  bool
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Groups.Group.GroupAddressXr>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_added
                    
                    	Joined
                    	**type**\:  bool
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: is_self_join
                    
                    	If local system is member of this group on this interface
                    	**type**\:  bool
                    
                    .. attribute:: is_suppressed
                    
                    	Suppressed
                    	**type**\:  bool
                    
                    .. attribute:: last_reporter
                    
                    	Last reporter address
                    	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Groups.Group.LastReporter>`
                    
                    .. attribute:: older_host_version1_timer
                    
                    	IGMP Hostversion1timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: older_host_version2_timer
                    
                    	IGMP Hostversion2timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_filter_mode
                    
                    	Filter mode
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: row_status
                    
                    	interface on or off for the group
                    	**type**\:  str
                    
                    	**length:** 0..16
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.Groups.Group.SourceAddress>`
                    
                    .. attribute:: uptime
                    
                    	Uptime in seconds
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**units**\: second
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.expiration_time = None
                        self.explicit_tracking_enabled = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Standby.DefaultContext.Groups.Group.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.interface_name = None
                        self.interface_name_xr = None
                        self.is_added = None
                        self.is_low_memory = None
                        self.is_self_join = None
                        self.is_suppressed = None
                        self.last_reporter = Igmp.Standby.DefaultContext.Groups.Group.LastReporter()
                        self.last_reporter.parent = self
                        self.older_host_version1_timer = None
                        self.older_host_version2_timer = None
                        self.router_filter_mode = None
                        self.row_status = None
                        self.source_address = Igmp.Standby.DefaultContext.Groups.Group.SourceAddress()
                        self.source_address.parent = self
                        self.uptime = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.Groups.Group.GroupAddressXr']['meta_info']


                    class LastReporter(object):
                        """
                        Last reporter address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.Groups.Group.LastReporter']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.Groups.Group.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.expiration_time is not None:
                            return True

                        if self.explicit_tracking_enabled is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_added is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.is_self_join is not None:
                            return True

                        if self.is_suppressed is not None:
                            return True

                        if self.last_reporter is not None and self.last_reporter._has_data():
                            return True

                        if self.older_host_version1_timer is not None:
                            return True

                        if self.older_host_version2_timer is not None:
                            return True

                        if self.router_filter_mode is not None:
                            return True

                        if self.row_status is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        if self.uptime is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.Groups.Group']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group is not None:
                        for child_ref in self.group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.Groups']['meta_info']


            class GroupSummary(object):
                """
                IGMP Groups Summary
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: groutes
                
                	No. of (\*,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_low_memory
                
                	Node is running low on memory
                	**type**\:  bool
                
                .. attribute:: sg_routes
                
                	No. of (S,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group_count = None
                    self.groutes = None
                    self.is_low_memory = None
                    self.sg_routes = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group_count is not None:
                        return True

                    if self.groutes is not None:
                        return True

                    if self.is_low_memory is not None:
                        return True

                    if self.sg_routes is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.GroupSummary']['meta_info']


            class IfrsInterfaceSummary(object):
                """
                IGMP IFRS Interface summary
                
                .. attribute:: configuration_count
                
                	Configuration count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_count
                
                	Interface Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.configuration_count = None
                    self.interface_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.configuration_count is not None:
                        return True

                    if self.interface_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.IfrsInterfaceSummary']['meta_info']


            class GlobalInterfaceTable(object):
                """
                IGMP Global Interface 
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.GlobalInterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.GlobalInterfaceTable']['meta_info']


            class SsmMapDetails(object):
                """
                SSM Map Detail
                
                .. attribute:: ssm_map_detail
                
                	SSM Map Detail Table information
                	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map_detail = YList()
                    self.ssm_map_detail.parent = self
                    self.ssm_map_detail.name = 'ssm_map_detail'


                class SsmMapDetail(object):
                    """
                    SSM Map Detail Table information
                    
                    .. attribute:: elapsed_time
                    
                    	Elapsed time
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: expiration_time
                    
                    	Expiration Time in Seconds
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: second
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: map_info
                    
                    	Basic Map Info
                    	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo>`
                    
                    .. attribute:: query_interval
                    
                    	Query interval
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: response_pending
                    
                    	Response Pending
                    	**type**\:  bool
                    
                    .. attribute:: sources
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.Sources>`
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.elapsed_time = None
                        self.expiration_time = None
                        self.group_address = None
                        self.map_info = Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo()
                        self.map_info.parent = self
                        self.query_interval = None
                        self.response_pending = None
                        self.sources = YList()
                        self.sources.parent = self
                        self.sources.name = 'sources'
                        self.ssm_map_type = None


                    class MapInfo(object):
                        """
                        Basic Map Info
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address_xr = Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                    class Sources(object):
                        """
                        List of sources
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.elapsed_time is not None:
                            return True

                        if self.expiration_time is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.map_info is not None and self.map_info._has_data():
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.response_pending is not None:
                            return True

                        if self.sources is not None:
                            for child_ref in self.sources:
                                if child_ref._has_data():
                                    return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.SsmMapDetails.SsmMapDetail']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map_detail is not None:
                        for child_ref in self.ssm_map_detail:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.SsmMapDetails']['meta_info']


            class InterfaceStateOffs(object):
                """
                IGMP Interface state off
                
                .. attribute:: interface_state_off
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off = YList()
                    self.interface_state_off.parent = self
                    self.interface_state_off.name = 'interface_state_off'


                class InterfaceStateOff(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off is not None:
                        for child_ref in self.interface_state_off:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceStateOffs']['meta_info']


            class InterfaceOldFormatStateOns(object):
                """
                IGMP Interface state on old format
                
                .. attribute:: interface_old_format_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format_state_on = YList()
                    self.interface_old_format_state_on.parent = self
                    self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                class InterfaceOldFormatStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format_state_on is not None:
                        for child_ref in self.interface_old_format_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Standby.DefaultContext.InterfaceOldFormatStateOns']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby/Cisco-IOS-XR-ipv4-igmp-oper:default-context'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.detail_groups is not None and self.detail_groups._has_data():
                    return True

                if self.explicit_groups is not None and self.explicit_groups._has_data():
                    return True

                if self.global_interface_table is not None and self.global_interface_table._has_data():
                    return True

                if self.group_summary is not None and self.group_summary._has_data():
                    return True

                if self.groups is not None and self.groups._has_data():
                    return True

                if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                    return True

                if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                    return True

                if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                    return True

                if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                    return True

                if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                    return True

                if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                    return True

                if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                    return True

                if self.interface_table is not None and self.interface_table._has_data():
                    return True

                if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                    return True

                if self.non_active_groups is not None and self.non_active_groups._has_data():
                    return True

                if self.ranges is not None and self.ranges._has_data():
                    return True

                if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                    return True

                if self.ssm_maps is not None and self.ssm_maps._has_data():
                    return True

                if self.summary is not None and self.summary._has_data():
                    return True

                if self.traffic_counters is not None and self.traffic_counters._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Standby.DefaultContext']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:standby'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if self.default_context is not None and self.default_context._has_data():
                return True

            if self.process is not None and self.process._has_data():
                return True

            if self.vrfs is not None and self.vrfs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
            return meta._meta_table['Igmp.Standby']['meta_info']


    class Active(object):
        """
        Active Process
        
        .. attribute:: default_context
        
        	Default Context
        	**type**\:   :py:class:`DefaultContext <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext>`
        
        .. attribute:: process
        
        	Process
        	**type**\:   :py:class:`Process <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process>`
        
        .. attribute:: vrfs
        
        	VRF Table
        	**type**\:   :py:class:`Vrfs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs>`
        
        

        """

        _prefix = 'ipv4-igmp-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.default_context = Igmp.Active.DefaultContext()
            self.default_context.parent = self
            self.process = Igmp.Active.Process()
            self.process.parent = self
            self.vrfs = Igmp.Active.Vrfs()
            self.vrfs.parent = self


        class Vrfs(object):
            """
            VRF Table
            
            .. attribute:: vrf
            
            	VRF table Names
            	**type**\: list of    :py:class:`Vrf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.vrf = YList()
                self.vrf.parent = self
                self.vrf.name = 'vrf'


            class Vrf(object):
                """
                VRF table Names
                
                .. attribute:: vrf_name  <key>
                
                	VRF name
                	**type**\:  str
                
                	**length:** 1..32
                
                .. attribute:: detail_groups
                
                	IGMP Detail Group Database
                	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups>`
                
                .. attribute:: explicit_groups
                
                	IGMP Explicit Group Database
                	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups>`
                
                .. attribute:: global_interface_table
                
                	IGMP Global Interface 
                	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable>`
                
                .. attribute:: group_summary
                
                	IGMP Groups Summary
                	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GroupSummary>`
                
                .. attribute:: groups
                
                	IGMP Group Database Table
                	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Groups>`
                
                .. attribute:: ifrs_interface_summary
                
                	IGMP IFRS Interface summary
                	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaceSummary>`
                
                .. attribute:: ifrs_interfaces
                
                	IGMP Interface specific
                	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces>`
                
                .. attribute:: interface_old_format_state_ons
                
                	IGMP Interface state on old format
                	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns>`
                
                .. attribute:: interface_old_formats
                
                	IGMP Interface specific Table in old format
                	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormats>`
                
                .. attribute:: interface_state_off_old_formats
                
                	IGMP Interface state off old format
                	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats>`
                
                .. attribute:: interface_state_offs
                
                	IGMP Interface state off
                	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffs>`
                
                .. attribute:: interface_state_ons
                
                	IGMP Interface state on
                	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOns>`
                
                .. attribute:: interface_table
                
                	IGMP Interface specific Table
                	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceTable>`
                
                .. attribute:: interface_unicast_qos_adjusts
                
                	IGMP Interface Unicast\-Qos\-Adjust
                	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts>`
                
                .. attribute:: non_active_groups
                
                	IGMP Non\-Active Groups Information
                	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.NonActiveGroups>`
                
                .. attribute:: ranges
                
                	Range table
                	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Ranges>`
                
                .. attribute:: ssm_map_details
                
                	SSM Map Detail
                	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMapDetails>`
                
                .. attribute:: ssm_maps
                
                	SSM Map Table
                	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMaps>`
                
                .. attribute:: summary
                
                	IGMP Summary Information
                	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Summary>`
                
                .. attribute:: traffic_counters
                
                	IGMP Message Traffic Counters
                	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.TrafficCounters>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.vrf_name = None
                    self.detail_groups = Igmp.Active.Vrfs.Vrf.DetailGroups()
                    self.detail_groups.parent = self
                    self.explicit_groups = Igmp.Active.Vrfs.Vrf.ExplicitGroups()
                    self.explicit_groups.parent = self
                    self.global_interface_table = Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable()
                    self.global_interface_table.parent = self
                    self.group_summary = Igmp.Active.Vrfs.Vrf.GroupSummary()
                    self.group_summary.parent = self
                    self.groups = Igmp.Active.Vrfs.Vrf.Groups()
                    self.groups.parent = self
                    self.ifrs_interface_summary = Igmp.Active.Vrfs.Vrf.IfrsInterfaceSummary()
                    self.ifrs_interface_summary.parent = self
                    self.ifrs_interfaces = Igmp.Active.Vrfs.Vrf.IfrsInterfaces()
                    self.ifrs_interfaces.parent = self
                    self.interface_old_format_state_ons = Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns()
                    self.interface_old_format_state_ons.parent = self
                    self.interface_old_formats = Igmp.Active.Vrfs.Vrf.InterfaceOldFormats()
                    self.interface_old_formats.parent = self
                    self.interface_state_off_old_formats = Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats()
                    self.interface_state_off_old_formats.parent = self
                    self.interface_state_offs = Igmp.Active.Vrfs.Vrf.InterfaceStateOffs()
                    self.interface_state_offs.parent = self
                    self.interface_state_ons = Igmp.Active.Vrfs.Vrf.InterfaceStateOns()
                    self.interface_state_ons.parent = self
                    self.interface_table = Igmp.Active.Vrfs.Vrf.InterfaceTable()
                    self.interface_table.parent = self
                    self.interface_unicast_qos_adjusts = Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts()
                    self.interface_unicast_qos_adjusts.parent = self
                    self.non_active_groups = Igmp.Active.Vrfs.Vrf.NonActiveGroups()
                    self.non_active_groups.parent = self
                    self.ranges = Igmp.Active.Vrfs.Vrf.Ranges()
                    self.ranges.parent = self
                    self.ssm_map_details = Igmp.Active.Vrfs.Vrf.SsmMapDetails()
                    self.ssm_map_details.parent = self
                    self.ssm_maps = Igmp.Active.Vrfs.Vrf.SsmMaps()
                    self.ssm_maps.parent = self
                    self.summary = Igmp.Active.Vrfs.Vrf.Summary()
                    self.summary.parent = self
                    self.traffic_counters = Igmp.Active.Vrfs.Vrf.TrafficCounters()
                    self.traffic_counters.parent = self


                class Summary(object):
                    """
                    IGMP Summary Information
                    
                    .. attribute:: disabled_interface_count
                    
                    	No. of disabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: enabled_interface_count
                    
                    	No. of enabled interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface
                    
                    	Maximum and current groups accepted for each interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Summary.Interface>`
                    
                    .. attribute:: is_disabled
                    
                    	Is maximum enforcement disabled
                    	**type**\:  bool
                    
                    .. attribute:: node_low_memory
                    
                    	Is node in low memory condition
                    	**type**\:  bool
                    
                    .. attribute:: robustness
                    
                    	Robustness variable
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: supported_interfaces
                    
                    	No. of supported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: tunnel_mte_config_count
                    
                    	No. of static group commands
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: unsupported_interfaces
                    
                    	No. of unsupported interfaces
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.disabled_interface_count = None
                        self.enabled_interface_count = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'
                        self.is_disabled = None
                        self.node_low_memory = None
                        self.robustness = None
                        self.supported_interfaces = None
                        self.tunnel_mte_config_count = None
                        self.unsupported_interfaces = None


                    class Interface(object):
                        """
                        Maximum and current groups accepted for each
                        interface
                        
                        .. attribute:: group_count
                        
                        	Current groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_limit
                        
                        	Maximum groups accepted per interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: on_off
                        
                        	Enabled/Disabled
                        	**type**\:  bool
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent if handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Time elapsed since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_count = None
                            self.group_limit = None
                            self.interface_name = None
                            self.on_off = None
                            self.parent_ifhandle = None
                            self.router_uptime_in_seconds = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_count is not None:
                                return True

                            if self.group_limit is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.on_off is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.Summary.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.disabled_interface_count is not None:
                            return True

                        if self.enabled_interface_count is not None:
                            return True

                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        if self.is_disabled is not None:
                            return True

                        if self.node_low_memory is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.supported_interfaces is not None:
                            return True

                        if self.tunnel_mte_config_count is not None:
                            return True

                        if self.unsupported_interfaces is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.Summary']['meta_info']


                class InterfaceStateOns(object):
                    """
                    IGMP Interface state on
                    
                    .. attribute:: interface_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_on = YList()
                        self.interface_state_on.parent = self
                        self.interface_state_on.name = 'interface_state_on'


                    class InterfaceStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOns.InterfaceStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_on is not None:
                            for child_ref in self.interface_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOns']['meta_info']


                class DetailGroups(object):
                    """
                    IGMP Detail Group Database
                    
                    .. attribute:: detail_group
                    
                    	IGMP Detail Group Entry Information
                    	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.detail_group = YList()
                        self.detail_group.parent = self
                        self.detail_group.name = 'detail_group'


                    class DetailGroup(object):
                        """
                        IGMP Detail Group Entry Information
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_host_exclude_mode
                        
                        	Group host filter mode
                        	**type**\:  bool
                        
                        .. attribute:: is_router_exclude_mode
                        
                        	Group router filter mode
                        	**type**\:  bool
                        
                        .. attribute:: source
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source>`
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_info = Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo()
                            self.group_info.parent = self
                            self.interface_name = None
                            self.is_host_exclude_mode = None
                            self.is_router_exclude_mode = None
                            self.source = YList()
                            self.source.parent = self
                            self.source.name = 'source'
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                        class Source(object):
                            """
                            List of sources
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: flags
                            
                            	Source flags
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_forward
                            
                            	Should we forward on this entry
                            	**type**\:  bool
                            
                            .. attribute:: is_local
                            
                            	Is this a local source
                            	**type**\:  bool
                            
                            .. attribute:: is_remote
                            
                            	Is this a remote source
                            	**type**\:  bool
                            
                            .. attribute:: is_we_report
                            
                            	Should we report the source
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.flags = None
                                self.is_added = None
                                self.is_forward = None
                                self.is_local = None
                                self.is_remote = None
                                self.is_we_report = None
                                self.source_address = Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.flags is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_forward is not None:
                                    return True

                                if self.is_local is not None:
                                    return True

                                if self.is_remote is not None:
                                    return True

                                if self.is_we_report is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup.Source']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.is_host_exclude_mode is not None:
                                return True

                            if self.is_router_exclude_mode is not None:
                                return True

                            if self.source is not None:
                                for child_ref in self.source:
                                    if child_ref._has_data():
                                        return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups.DetailGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.detail_group is not None:
                            for child_ref in self.detail_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.DetailGroups']['meta_info']


                class NonActiveGroups(object):
                    """
                    IGMP Non\-Active Groups Information
                    
                    .. attribute:: non_active_groups
                    
                    	List of non\-active groups
                    	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.non_active_groups = YList()
                        self.non_active_groups.parent = self
                        self.non_active_groups.name = 'non_active_groups'


                    class NonActiveGroups_(object):
                        """
                        List of non\-active groups
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                        
                        .. attribute:: interface
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**length:** 0..65
                        
                        .. attribute:: reason_for_non_activity
                        
                        	Reason for group join not being processed
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress()
                            self.group_address.parent = self
                            self.interface = None
                            self.reason_for_non_activity = None
                            self.source_address = Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress()
                            self.source_address.parent = self


                        class GroupAddress(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.interface is not None:
                                return True

                            if self.reason_for_non_activity is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.NonActiveGroups.NonActiveGroups_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.non_active_groups is not None:
                            for child_ref in self.non_active_groups:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.NonActiveGroups']['meta_info']


                class SsmMaps(object):
                    """
                    SSM Map Table
                    
                    .. attribute:: ssm_map
                    
                    	SSM Map information
                    	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMaps.SsmMap>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map = YList()
                        self.ssm_map.parent = self
                        self.ssm_map.name = 'ssm_map'


                    class SsmMap(object):
                        """
                        SSM Map information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None
                            self.ssm_map_type = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMaps.SsmMap']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map is not None:
                            for child_ref in self.ssm_map:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMaps']['meta_info']


                class ExplicitGroups(object):
                    """
                    IGMP Explicit Group Database
                    
                    .. attribute:: explicit_group
                    
                    	IGMP Explicit Group Entry Information
                    	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.explicit_group = YList()
                        self.explicit_group.parent = self
                        self.explicit_group.name = 'explicit_group'


                    class ExplicitGroup(object):
                        """
                        IGMP Explicit Group Entry Information
                        
                        .. attribute:: exclude_hosts
                        
                        	No. of hosts who are excluded
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_info
                        
                        	Basic Group information
                        	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo>`
                        
                        .. attribute:: host
                        
                        	List of hosts
                        	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host>`
                        
                        .. attribute:: include_hosts
                        
                        	No. of hosts who are included
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: source_address
                        
                        	Source/Host Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.exclude_hosts = None
                            self.group_address = None
                            self.group_info = Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo()
                            self.group_info.parent = self
                            self.host = YList()
                            self.host.parent = self
                            self.host.name = 'host'
                            self.include_hosts = None
                            self.interface_name = None
                            self.source_address = None


                        class GroupInfo(object):
                            """
                            Basic Group information
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**units**\: second
                            
                            .. attribute:: explicit_tracking_enabled
                            
                            	Is explicit tracking enabled
                            	**type**\:  bool
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_added
                            
                            	Joined
                            	**type**\:  bool
                            
                            .. attribute:: is_low_memory
                            
                            	Node is running low on memory
                            	**type**\:  bool
                            
                            .. attribute:: is_self_join
                            
                            	If local system is member of this group on this interface
                            	**type**\:  bool
                            
                            .. attribute:: is_suppressed
                            
                            	Suppressed
                            	**type**\:  bool
                            
                            .. attribute:: last_reporter
                            
                            	Last reporter address
                            	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                            
                            .. attribute:: older_host_version1_timer
                            
                            	IGMP Hostversion1timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: older_host_version2_timer
                            
                            	IGMP Hostversion2timer
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_filter_mode
                            
                            	Filter mode
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: row_status
                            
                            	interface on or off for the group
                            	**type**\:  str
                            
                            	**length:** 0..16
                            
                            .. attribute:: source_address
                            
                            	Source Address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.expiration_time = None
                                self.explicit_tracking_enabled = None
                                self.group_address_xr = Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.interface_name_xr = None
                                self.is_added = None
                                self.is_low_memory = None
                                self.is_self_join = None
                                self.is_suppressed = None
                                self.last_reporter = Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                                self.last_reporter.parent = self
                                self.older_host_version1_timer = None
                                self.older_host_version2_timer = None
                                self.router_filter_mode = None
                                self.row_status = None
                                self.source_address = Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                                self.source_address.parent = self
                                self.uptime = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                            class LastReporter(object):
                                """
                                Last reporter address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                            class SourceAddress(object):
                                """
                                Source Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.expiration_time is not None:
                                    return True

                                if self.explicit_tracking_enabled is not None:
                                    return True

                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_added is not None:
                                    return True

                                if self.is_low_memory is not None:
                                    return True

                                if self.is_self_join is not None:
                                    return True

                                if self.is_suppressed is not None:
                                    return True

                                if self.last_reporter is not None and self.last_reporter._has_data():
                                    return True

                                if self.older_host_version1_timer is not None:
                                    return True

                                if self.older_host_version2_timer is not None:
                                    return True

                                if self.router_filter_mode is not None:
                                    return True

                                if self.row_status is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                        class Host(object):
                            """
                            List of hosts
                            
                            .. attribute:: address
                            
                            	Host Address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address>`
                            
                            .. attribute:: expiration_time
                            
                            	Expiration time in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            .. attribute:: is_exclude
                            
                            	Exclude flag set
                            	**type**\:  bool
                            
                            .. attribute:: source_address
                            
                            	First 3 source addresses
                            	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                            
                            .. attribute:: source_count
                            
                            	No. of sources in entry
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: uptime
                            
                            	Uptime in seconds
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: second
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address()
                                self.address.parent = self
                                self.expiration_time = None
                                self.is_exclude = None
                                self.source_address = YList()
                                self.source_address.parent = self
                                self.source_address.name = 'source_address'
                                self.source_count = None
                                self.uptime = None


                            class Address(object):
                                """
                                Host Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                            class SourceAddress(object):
                                """
                                First 3 source addresses
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:host'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.expiration_time is not None:
                                    return True

                                if self.is_exclude is not None:
                                    return True

                                if self.source_address is not None:
                                    for child_ref in self.source_address:
                                        if child_ref._has_data():
                                            return True

                                if self.source_count is not None:
                                    return True

                                if self.uptime is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.exclude_hosts is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_info is not None and self.group_info._has_data():
                                return True

                            if self.host is not None:
                                for child_ref in self.host:
                                    if child_ref._has_data():
                                        return True

                            if self.include_hosts is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.source_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups.ExplicitGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.explicit_group is not None:
                            for child_ref in self.explicit_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.ExplicitGroups']['meta_info']


                class InterfaceTable(object):
                    """
                    IGMP Interface specific Table
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceTable']['meta_info']


                class InterfaceOldFormats(object):
                    """
                    IGMP Interface specific Table in old format
                    
                    .. attribute:: interface_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format = YList()
                        self.interface_old_format.parent = self
                        self.interface_old_format.name = 'interface_old_format'


                    class InterfaceOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format is not None:
                            for child_ref in self.interface_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormats']['meta_info']


                class InterfaceStateOffOldFormats(object):
                    """
                    IGMP Interface state off old format
                    
                    .. attribute:: interface_state_off_old_format
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off_old_format = YList()
                        self.interface_state_off_old_format.parent = self
                        self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                    class InterfaceStateOffOldFormat(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off_old_format is not None:
                            for child_ref in self.interface_state_off_old_format:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffOldFormats']['meta_info']


                class InterfaceUnicastQosAdjusts(object):
                    """
                    IGMP Interface Unicast\-Qos\-Adjust
                    
                    .. attribute:: interface_unicast_qos_adjust
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_unicast_qos_adjust = YList()
                        self.interface_unicast_qos_adjust.parent = self
                        self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                    class InterfaceUnicastQosAdjust(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_virtual_access
                        
                        	Is VirtualAccess Interface
                        	**type**\:  bool
                        
                        .. attribute:: rate
                        
                        	Overall rate in Kbps
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: rate_decrements
                        
                        	Count of rate decrements
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: rate_increments
                        
                        	Count of rate increments
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: update
                        
                        	List of updates
                        	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.is_virtual_access = None
                            self.rate = None
                            self.rate_decrements = None
                            self.rate_increments = None
                            self.update = YList()
                            self.update.parent = self
                            self.update.name = 'update'


                        class Update(object):
                            """
                            List of updates
                            
                            .. attribute:: group_address
                            
                            	Group address
                            	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                            
                            .. attribute:: is_add
                            
                            	Is this a rate increment
                            	**type**\:  bool
                            
                            .. attribute:: received_time
                            
                            	Time this update is received
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            .. attribute:: source_address
                            
                            	Source address
                            	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                            
                            .. attribute:: weight
                            
                            	Weight from policy
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address = Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                                self.group_address.parent = self
                                self.is_add = None
                                self.received_time = None
                                self.source_address = Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                                self.source_address.parent = self
                                self.weight = None


                            class SourceAddress(object):
                                """
                                Source address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                            class GroupAddress(object):
                                """
                                Group address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address is not None and self.group_address._has_data():
                                    return True

                                if self.is_add is not None:
                                    return True

                                if self.received_time is not None:
                                    return True

                                if self.source_address is not None and self.source_address._has_data():
                                    return True

                                if self.weight is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.is_virtual_access is not None:
                                return True

                            if self.rate is not None:
                                return True

                            if self.rate_decrements is not None:
                                return True

                            if self.rate_increments is not None:
                                return True

                            if self.update is not None:
                                for child_ref in self.update:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_unicast_qos_adjust is not None:
                            for child_ref in self.interface_unicast_qos_adjust:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceUnicastQosAdjusts']['meta_info']


                class Ranges(object):
                    """
                    Range table
                    
                    .. attribute:: range
                    
                    	Range information
                    	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Ranges.Range>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.range = YList()
                        self.range.parent = self
                        self.range.name = 'range'


                    class Range(object):
                        """
                        Range information
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr>`
                        
                        .. attribute:: group_mask
                        
                        	Group Mask
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_stale
                        
                        	Is the entry stale
                        	**type**\:  bool
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: protocol
                        
                        	Protocol
                        	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.group_mask = None
                            self.is_stale = None
                            self.prefix_length = None
                            self.protocol = None


                        class GroupAddressXr(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.Ranges.Range.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:range'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.group_mask is not None:
                                return True

                            if self.is_stale is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.protocol is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.Ranges.Range']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.range is not None:
                            for child_ref in self.range:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.Ranges']['meta_info']


                class IfrsInterfaces(object):
                    """
                    IGMP Interface specific
                    
                    .. attribute:: ifrs_interface
                    
                    	IGMP IFRS Interface
                    	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ifrs_interface = YList()
                        self.ifrs_interface.parent = self
                        self.ifrs_interface.name = 'ifrs_interface'


                    class IfrsInterface(object):
                        """
                        IGMP IFRS Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	IFRS Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: igmp_interface_entry
                        
                        	IGMP interface entry
                        	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                        
                        .. attribute:: join_group_count
                        
                        	Join group count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.igmp_interface_entry = Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                            self.igmp_interface_entry.parent = self
                            self.join_group_count = None


                        class IgmpInterfaceEntry(object):
                            """
                            IGMP interface entry
                            
                            .. attribute:: address
                            
                            	IP address
                            	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                            
                            .. attribute:: configuration_mcast_vrf_error
                            
                            	Is mcast error
                            	**type**\:  bool
                            
                            .. attribute:: configuration_mcast_vrf_set
                            
                            	Is mcast set
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_error
                            
                            	CFG vrf error
                            	**type**\:  bool
                            
                            .. attribute:: configurationvrf_set
                            
                            	CFG vrf set
                            	**type**\:  bool
                            
                            .. attribute:: group_joins
                            
                            	No. of group joins
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: group_leaves
                            
                            	No. of group leaves
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: host_version
                            
                            	IGMP Host version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: igmp_version
                            
                            	IGMP Router version
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_name_xr
                            
                            	Interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: is_configurationverify
                            
                            	CFG verify
                            	**type**\:  bool
                            
                            .. attribute:: is_identity_present
                            
                            	Subscriber ID or Address available from AAA
                            	**type**\:  bool
                            
                            .. attribute:: is_im_state_registered
                            
                            	Im state registered
                            	**type**\:  bool
                            
                            .. attribute:: is_interface_up
                            
                            	Is interface up
                            	**type**\:  bool
                            
                            .. attribute:: is_ip_enabled
                            
                            	Is IP enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_las_registered
                            
                            	LAS registered
                            	**type**\:  bool
                            
                            .. attribute:: is_las_request
                            
                            	LAS req
                            	**type**\:  bool
                            
                            .. attribute:: is_querier
                            
                            	Are we querier
                            	**type**\:  bool
                            
                            .. attribute:: is_router_enabled
                            
                            	Is Router functionality enabled
                            	**type**\:  bool
                            
                            .. attribute:: is_subscriber
                            
                            	Subscriber interface
                            	**type**\:  bool
                            
                            .. attribute:: las_get_address_count
                            
                            	LAS get addr count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_add_update_count
                            
                            	LAS LL add update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_registration_count
                            
                            	LAS reg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_ll_remove_update_count
                            
                            	LAS LL remove update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_null_update_count
                            
                            	LAS Null update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_unregistration_count
                            
                            	LAS unreg count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: las_update_count
                            
                            	LAS Update count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_member_query_interval
                            
                            	Last Member Query Interval
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: location
                            
                            	Location
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_tuple_count
                            
                            	MTE Tuple count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mte_vrf_id
                            
                            	MTE VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mtu
                            
                            	MTU
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: parent_ifhandle
                            
                            	Parent If Handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: prefix_length
                            
                            	Prefix length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: proxy_interface
                            
                            	Proxy interface index
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: querier_address
                            
                            	Address of the Querier
                            	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                            
                            .. attribute:: querier_uptime
                            
                            	Time since the last querier took over
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_interval
                            
                            	Query Interval value in seconds
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: query_maximum_response_time
                            
                            	Max Response Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: query_timeout
                            
                            	Query Timeout value
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: robustness
                            
                            	Robustness Variable value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: router_uptime_in_seconds
                            
                            	Uptime since router enabled event
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: state
                            
                            	Interface state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: subscriber_address
                            
                            	Address of subscriber
                            	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                            
                            .. attribute:: subscriber_id
                            
                            	ID string of subscriber
                            	**type**\:  str
                            
                            	**length:** 0..257
                            
                            .. attribute:: subscriber_mode
                            
                            	Subscriber mode
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_query_in_seconds
                            
                            	Time elapsed since last query
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_last_report_in_seconds
                            
                            	Time elapsed since last report
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_active_groups
                            
                            	Actual number of groups on interface
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_id
                            
                            	VRF id
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: vrf_state
                            
                            	Vrf State
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                                self.address.parent = self
                                self.configuration_mcast_vrf_error = None
                                self.configuration_mcast_vrf_set = None
                                self.configurationvrf_error = None
                                self.configurationvrf_set = None
                                self.group_joins = None
                                self.group_leaves = None
                                self.host_version = None
                                self.igmp_version = None
                                self.interface_name_xr = None
                                self.is_configurationverify = None
                                self.is_identity_present = None
                                self.is_im_state_registered = None
                                self.is_interface_up = None
                                self.is_ip_enabled = None
                                self.is_las_registered = None
                                self.is_las_request = None
                                self.is_querier = None
                                self.is_router_enabled = None
                                self.is_subscriber = None
                                self.las_get_address_count = None
                                self.las_ll_add_update_count = None
                                self.las_ll_registration_count = None
                                self.las_ll_remove_update_count = None
                                self.las_null_update_count = None
                                self.las_unregistration_count = None
                                self.las_update_count = None
                                self.last_member_query_interval = None
                                self.location = None
                                self.mte_tuple_count = None
                                self.mte_vrf_id = None
                                self.mtu = None
                                self.parent_ifhandle = None
                                self.prefix_length = None
                                self.proxy_interface = None
                                self.querier_address = Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                                self.querier_address.parent = self
                                self.querier_uptime = None
                                self.query_interval = None
                                self.query_maximum_response_time = None
                                self.query_timeout = None
                                self.robustness = None
                                self.router_uptime_in_seconds = None
                                self.state = None
                                self.subscriber_address = Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                                self.subscriber_address.parent = self
                                self.subscriber_id = None
                                self.subscriber_mode = None
                                self.time_since_last_query_in_seconds = None
                                self.time_since_last_report_in_seconds = None
                                self.total_active_groups = None
                                self.vrf_id = None
                                self.vrf_state = None


                            class Address(object):
                                """
                                IP address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                            class QuerierAddress(object):
                                """
                                Address of the Querier
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                            class SubscriberAddress(object):
                                """
                                Address of subscriber
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.address is not None and self.address._has_data():
                                    return True

                                if self.configuration_mcast_vrf_error is not None:
                                    return True

                                if self.configuration_mcast_vrf_set is not None:
                                    return True

                                if self.configurationvrf_error is not None:
                                    return True

                                if self.configurationvrf_set is not None:
                                    return True

                                if self.group_joins is not None:
                                    return True

                                if self.group_leaves is not None:
                                    return True

                                if self.host_version is not None:
                                    return True

                                if self.igmp_version is not None:
                                    return True

                                if self.interface_name_xr is not None:
                                    return True

                                if self.is_configurationverify is not None:
                                    return True

                                if self.is_identity_present is not None:
                                    return True

                                if self.is_im_state_registered is not None:
                                    return True

                                if self.is_interface_up is not None:
                                    return True

                                if self.is_ip_enabled is not None:
                                    return True

                                if self.is_las_registered is not None:
                                    return True

                                if self.is_las_request is not None:
                                    return True

                                if self.is_querier is not None:
                                    return True

                                if self.is_router_enabled is not None:
                                    return True

                                if self.is_subscriber is not None:
                                    return True

                                if self.las_get_address_count is not None:
                                    return True

                                if self.las_ll_add_update_count is not None:
                                    return True

                                if self.las_ll_registration_count is not None:
                                    return True

                                if self.las_ll_remove_update_count is not None:
                                    return True

                                if self.las_null_update_count is not None:
                                    return True

                                if self.las_unregistration_count is not None:
                                    return True

                                if self.las_update_count is not None:
                                    return True

                                if self.last_member_query_interval is not None:
                                    return True

                                if self.location is not None:
                                    return True

                                if self.mte_tuple_count is not None:
                                    return True

                                if self.mte_vrf_id is not None:
                                    return True

                                if self.mtu is not None:
                                    return True

                                if self.parent_ifhandle is not None:
                                    return True

                                if self.prefix_length is not None:
                                    return True

                                if self.proxy_interface is not None:
                                    return True

                                if self.querier_address is not None and self.querier_address._has_data():
                                    return True

                                if self.querier_uptime is not None:
                                    return True

                                if self.query_interval is not None:
                                    return True

                                if self.query_maximum_response_time is not None:
                                    return True

                                if self.query_timeout is not None:
                                    return True

                                if self.robustness is not None:
                                    return True

                                if self.router_uptime_in_seconds is not None:
                                    return True

                                if self.state is not None:
                                    return True

                                if self.subscriber_address is not None and self.subscriber_address._has_data():
                                    return True

                                if self.subscriber_id is not None:
                                    return True

                                if self.subscriber_mode is not None:
                                    return True

                                if self.time_since_last_query_in_seconds is not None:
                                    return True

                                if self.time_since_last_report_in_seconds is not None:
                                    return True

                                if self.total_active_groups is not None:
                                    return True

                                if self.vrf_id is not None:
                                    return True

                                if self.vrf_state is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                                return True

                            if self.join_group_count is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces.IfrsInterface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ifrs_interface is not None:
                            for child_ref in self.ifrs_interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaces']['meta_info']


                class TrafficCounters(object):
                    """
                    IGMP Message Traffic Counters
                    
                    .. attribute:: auxillary_data_length_errors
                    
                    	AuxDataLen errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: bad_scope_errors
                    
                    	BadScope errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: checksum_errors
                    
                    	Checksum errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: elapsed_time
                    
                    	Running time for counters
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: format_errors
                    
                    	Malformed packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: get_packet_failure
                    
                    	Packet get failed
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_disabled_idb
                    
                    	Packet received on disabled idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_dvmrp
                    
                    	DVMRP packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_leaves
                    
                    	Leaves in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_martian_address
                    
                    	Packets received with Martian Address
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_mtrace
                    
                    	Mtrace packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_assigned_vrf_id
                    
                    	Packets received with no assigned vrf id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_idb
                    
                    	Packets received without idb
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_platform_support_mtrace
                    
                    	mtrace packets without platform support
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_in_idb
                    
                    	Packets received on idb without VRF
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_no_vrf_mtrace
                    
                    	mtrace packets with no vrf associated
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_pim
                    
                    	PIM packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_queries
                    
                    	Query packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: input_reports
                    
                    	Reports in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: invalid_source_address_errors
                    
                    	Invalid Source Address errors
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: miscellaneous_errors
                    
                    	Packets dropped for other reasons
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: no_socket_connection
                    
                    	Packets dropped since no socket connection
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_dvmrp
                    
                    	DVMRP packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_leaves
                    
                    	Leaves out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_mtrace
                    
                    	Mtrace packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_no_parent_interface_handle
                    
                    	Failures setting 2nd ifhandle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_pim
                    
                    	PIM packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_queries
                    
                    	Query packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: output_reports
                    
                    	Reports out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_input_errors
                    
                    	Incoming Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packet_manager_output_errors
                    
                    	Outgoing Packet Manager packets dropped
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_in
                    
                    	Packets in
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: packets_out
                    
                    	Packets out
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: receive_socket_errors
                    
                    	Socket errors on reception
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: socket_errors
                    
                    	Socket errors on send
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.auxillary_data_length_errors = None
                        self.bad_scope_errors = None
                        self.checksum_errors = None
                        self.elapsed_time = None
                        self.format_errors = None
                        self.get_packet_failure = None
                        self.input_disabled_idb = None
                        self.input_dvmrp = None
                        self.input_leaves = None
                        self.input_martian_address = None
                        self.input_mtrace = None
                        self.input_no_assigned_vrf_id = None
                        self.input_no_idb = None
                        self.input_no_platform_support_mtrace = None
                        self.input_no_vrf_in_idb = None
                        self.input_no_vrf_mtrace = None
                        self.input_pim = None
                        self.input_queries = None
                        self.input_reports = None
                        self.invalid_source_address_errors = None
                        self.miscellaneous_errors = None
                        self.no_socket_connection = None
                        self.output_dvmrp = None
                        self.output_leaves = None
                        self.output_mtrace = None
                        self.output_no_parent_interface_handle = None
                        self.output_pim = None
                        self.output_queries = None
                        self.output_reports = None
                        self.packet_manager_input_errors = None
                        self.packet_manager_output_errors = None
                        self.packets_in = None
                        self.packets_out = None
                        self.receive_socket_errors = None
                        self.socket_errors = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.auxillary_data_length_errors is not None:
                            return True

                        if self.bad_scope_errors is not None:
                            return True

                        if self.checksum_errors is not None:
                            return True

                        if self.elapsed_time is not None:
                            return True

                        if self.format_errors is not None:
                            return True

                        if self.get_packet_failure is not None:
                            return True

                        if self.input_disabled_idb is not None:
                            return True

                        if self.input_dvmrp is not None:
                            return True

                        if self.input_leaves is not None:
                            return True

                        if self.input_martian_address is not None:
                            return True

                        if self.input_mtrace is not None:
                            return True

                        if self.input_no_assigned_vrf_id is not None:
                            return True

                        if self.input_no_idb is not None:
                            return True

                        if self.input_no_platform_support_mtrace is not None:
                            return True

                        if self.input_no_vrf_in_idb is not None:
                            return True

                        if self.input_no_vrf_mtrace is not None:
                            return True

                        if self.input_pim is not None:
                            return True

                        if self.input_queries is not None:
                            return True

                        if self.input_reports is not None:
                            return True

                        if self.invalid_source_address_errors is not None:
                            return True

                        if self.miscellaneous_errors is not None:
                            return True

                        if self.no_socket_connection is not None:
                            return True

                        if self.output_dvmrp is not None:
                            return True

                        if self.output_leaves is not None:
                            return True

                        if self.output_mtrace is not None:
                            return True

                        if self.output_no_parent_interface_handle is not None:
                            return True

                        if self.output_pim is not None:
                            return True

                        if self.output_queries is not None:
                            return True

                        if self.output_reports is not None:
                            return True

                        if self.packet_manager_input_errors is not None:
                            return True

                        if self.packet_manager_output_errors is not None:
                            return True

                        if self.packets_in is not None:
                            return True

                        if self.packets_out is not None:
                            return True

                        if self.receive_socket_errors is not None:
                            return True

                        if self.socket_errors is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.TrafficCounters']['meta_info']


                class Groups(object):
                    """
                    IGMP Group Database Table
                    
                    .. attribute:: group
                    
                    	IGMP Group Entry Information
                    	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Groups.Group>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group = YList()
                        self.group.parent = self
                        self.group.name = 'group'


                    class Group(object):
                        """
                        IGMP Group Entry Information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address
                        
                        	Group Address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr>`
                        
                        .. attribute:: interface_name
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Groups.Group.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.Groups.Group.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address = None
                            self.group_address_xr = Igmp.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name = None
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Active.Vrfs.Vrf.Groups.Group.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Active.Vrfs.Vrf.Groups.Group.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.Groups.Group.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.Groups.Group.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.Groups.Group.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.Groups.Group']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group is not None:
                            for child_ref in self.group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.Groups']['meta_info']


                class GroupSummary(object):
                    """
                    IGMP Groups Summary
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: groutes
                    
                    	No. of (\*,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: sg_routes
                    
                    	No. of (S,G) routes
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.groutes = None
                        self.is_low_memory = None
                        self.sg_routes = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.groutes is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.sg_routes is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.GroupSummary']['meta_info']


                class IfrsInterfaceSummary(object):
                    """
                    IGMP IFRS Interface summary
                    
                    .. attribute:: configuration_count
                    
                    	Configuration count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_count
                    
                    	Interface Count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.configuration_count = None
                        self.interface_count = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.configuration_count is not None:
                            return True

                        if self.interface_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.IfrsInterfaceSummary']['meta_info']


                class GlobalInterfaceTable(object):
                    """
                    IGMP Global Interface 
                    
                    .. attribute:: interface
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface = YList()
                        self.interface.parent = self
                        self.interface.name = 'interface'


                    class Interface(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable.Interface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface is not None:
                            for child_ref in self.interface:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.GlobalInterfaceTable']['meta_info']


                class SsmMapDetails(object):
                    """
                    SSM Map Detail
                    
                    .. attribute:: ssm_map_detail
                    
                    	SSM Map Detail Table information
                    	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.ssm_map_detail = YList()
                        self.ssm_map_detail.parent = self
                        self.ssm_map_detail.name = 'ssm_map_detail'


                    class SsmMapDetail(object):
                        """
                        SSM Map Detail Table information
                        
                        .. attribute:: elapsed_time
                        
                        	Elapsed time
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: expiration_time
                        
                        	Expiration Time in Seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\: one of the below types:
                        
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        
                        ----
                        .. attribute:: map_info
                        
                        	Basic Map Info
                        	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo>`
                        
                        .. attribute:: query_interval
                        
                        	Query interval
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: response_pending
                        
                        	Response Pending
                        	**type**\:  bool
                        
                        .. attribute:: sources
                        
                        	List of sources
                        	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources>`
                        
                        .. attribute:: ssm_map_type
                        
                        	SSM Map Type
                        	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.elapsed_time = None
                            self.expiration_time = None
                            self.group_address = None
                            self.map_info = Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo()
                            self.map_info.parent = self
                            self.query_interval = None
                            self.response_pending = None
                            self.sources = YList()
                            self.sources.parent = self
                            self.sources.name = 'sources'
                            self.ssm_map_type = None


                        class MapInfo(object):
                            """
                            Basic Map Info
                            
                            .. attribute:: group_address_xr
                            
                            	Group Address
                            	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                            
                            .. attribute:: map_type
                            
                            	Map Type of group
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: source_counts
                            
                            	Count of Sources
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.group_address_xr = Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                                self.group_address_xr.parent = self
                                self.map_type = None
                                self.source_counts = None


                            class GroupAddressXr(object):
                                """
                                Group Address
                                
                                .. attribute:: af_name
                                
                                	AFName
                                	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                                
                                .. attribute:: ipv4_address
                                
                                	IPv4 Addr
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6_address
                                
                                	IPV6 Addr
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'ipv4-igmp-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af_name = None
                                    self.ipv4_address = None
                                    self.ipv6_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if self.af_name is not None:
                                        return True

                                    if self.ipv4_address is not None:
                                        return True

                                    if self.ipv6_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                    return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.group_address_xr is not None and self.group_address_xr._has_data():
                                    return True

                                if self.map_type is not None:
                                    return True

                                if self.source_counts is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                        class Sources(object):
                            """
                            List of sources
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.elapsed_time is not None:
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.group_address is not None:
                                return True

                            if self.map_info is not None and self.map_info._has_data():
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.response_pending is not None:
                                return True

                            if self.sources is not None:
                                for child_ref in self.sources:
                                    if child_ref._has_data():
                                        return True

                            if self.ssm_map_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMapDetails.SsmMapDetail']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.ssm_map_detail is not None:
                            for child_ref in self.ssm_map_detail:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.SsmMapDetails']['meta_info']


                class InterfaceStateOffs(object):
                    """
                    IGMP Interface state off
                    
                    .. attribute:: interface_state_off
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_state_off = YList()
                        self.interface_state_off.parent = self
                        self.interface_state_off.name = 'interface_state_off'


                    class InterfaceStateOff(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_state_off is not None:
                            for child_ref in self.interface_state_off:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceStateOffs']['meta_info']


                class InterfaceOldFormatStateOns(object):
                    """
                    IGMP Interface state on old format
                    
                    .. attribute:: interface_old_format_state_on
                    
                    	IGMP Interface
                    	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_old_format_state_on = YList()
                        self.interface_old_format_state_on.parent = self
                        self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                    class InterfaceOldFormatStateOn(object):
                        """
                        IGMP Interface
                        
                        .. attribute:: interface_name  <key>
                        
                        	Interface Name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.interface_name is None:
                                raise YPYModelError('Key property interface_name is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.interface_name is not None:
                                return True

                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_old_format_state_on is not None:
                            for child_ref in self.interface_old_format_state_on:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Vrfs.Vrf.InterfaceOldFormatStateOns']['meta_info']

                @property
                def _common_path(self):
                    if self.vrf_name is None:
                        raise YPYModelError('Key property vrf_name is None')

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:vrfs/Cisco-IOS-XR-ipv4-igmp-oper:vrf[Cisco-IOS-XR-ipv4-igmp-oper:vrf-name = ' + str(self.vrf_name) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.vrf_name is not None:
                        return True

                    if self.detail_groups is not None and self.detail_groups._has_data():
                        return True

                    if self.explicit_groups is not None and self.explicit_groups._has_data():
                        return True

                    if self.global_interface_table is not None and self.global_interface_table._has_data():
                        return True

                    if self.group_summary is not None and self.group_summary._has_data():
                        return True

                    if self.groups is not None and self.groups._has_data():
                        return True

                    if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                        return True

                    if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                        return True

                    if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                        return True

                    if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                        return True

                    if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                        return True

                    if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                        return True

                    if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                        return True

                    if self.interface_table is not None and self.interface_table._has_data():
                        return True

                    if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                        return True

                    if self.non_active_groups is not None and self.non_active_groups._has_data():
                        return True

                    if self.ranges is not None and self.ranges._has_data():
                        return True

                    if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                        return True

                    if self.ssm_maps is not None and self.ssm_maps._has_data():
                        return True

                    if self.summary is not None and self.summary._has_data():
                        return True

                    if self.traffic_counters is not None and self.traffic_counters._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Vrfs.Vrf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:vrfs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.vrf is not None:
                    for child_ref in self.vrf:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Active.Vrfs']['meta_info']


        class Process(object):
            """
            Process
            
            .. attribute:: amt_gatewaies
            
            	Table containing AMT Gateway DataBase information
            	**type**\:   :py:class:`AmtGatewaies <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.AmtGatewaies>`
            
            .. attribute:: amt_summary
            
            	MRIB RouteDB Expiry Information
            	**type**\:   :py:class:`AmtSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.AmtSummary>`
            
            .. attribute:: bvi_statistics
            
            	IGMP BVI Stats
            	**type**\:   :py:class:`BviStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.BviStatistics>`
            
            .. attribute:: nsf
            
            	NSF Information
            	**type**\:   :py:class:`Nsf <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.Nsf>`
            
            .. attribute:: nsr
            
            	NSR Information
            	**type**\:   :py:class:`Nsr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.Nsr>`
            
            .. attribute:: unicast_qos_adjust_stats
            
            	IGMP Unicast\-Qos\-Adjust Statistics
            	**type**\:   :py:class:`UnicastQosAdjustStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.UnicastQosAdjustStats>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.amt_gatewaies = Igmp.Active.Process.AmtGatewaies()
                self.amt_gatewaies.parent = self
                self.amt_summary = Igmp.Active.Process.AmtSummary()
                self.amt_summary.parent = self
                self.bvi_statistics = Igmp.Active.Process.BviStatistics()
                self.bvi_statistics.parent = self
                self.nsf = Igmp.Active.Process.Nsf()
                self.nsf.parent = self
                self.nsr = Igmp.Active.Process.Nsr()
                self.nsr.parent = self
                self.unicast_qos_adjust_stats = Igmp.Active.Process.UnicastQosAdjustStats()
                self.unicast_qos_adjust_stats.parent = self


            class AmtSummary(object):
                """
                MRIB RouteDB Expiry Information
                
                .. attribute:: anycast_prefix
                
                	Robustness variable
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: gateway_count
                
                	Number of AMT Gateway
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_acl_configured
                
                	ACL configured under AMT
                	**type**\:  bool
                
                .. attribute:: is_gateway_simulation
                
                	AMT Gateway Simulation
                	**type**\:  bool
                
                .. attribute:: is_ou_of_resource
                
                	AMT Out Of Resource
                	**type**\:  bool
                
                .. attribute:: max_gateway
                
                	Maximum Gateway allowed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: mtu
                
                	AMT Tunnel MTU
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: prefix_length
                
                	Advertize AMT prefix length
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: query_interval
                
                	AMT Query interval
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: relay_address
                
                	Advertaisment for AMT Relay address
                	**type**\:  str
                
                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                
                .. attribute:: tos
                
                	Type Of Service value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: ttl
                
                	Time To Live value in AMT header
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_configured_maximum
                
                	AMT Tunnel configured Maximum
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_count
                
                	AMT Tunnel Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.anycast_prefix = None
                    self.gateway_count = None
                    self.is_acl_configured = None
                    self.is_gateway_simulation = None
                    self.is_ou_of_resource = None
                    self.max_gateway = None
                    self.mtu = None
                    self.prefix_length = None
                    self.query_interval = None
                    self.relay_address = None
                    self.tos = None
                    self.ttl = None
                    self.tunnel_configured_maximum = None
                    self.tunnel_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.anycast_prefix is not None:
                        return True

                    if self.gateway_count is not None:
                        return True

                    if self.is_acl_configured is not None:
                        return True

                    if self.is_gateway_simulation is not None:
                        return True

                    if self.is_ou_of_resource is not None:
                        return True

                    if self.max_gateway is not None:
                        return True

                    if self.mtu is not None:
                        return True

                    if self.prefix_length is not None:
                        return True

                    if self.query_interval is not None:
                        return True

                    if self.relay_address is not None:
                        return True

                    if self.tos is not None:
                        return True

                    if self.ttl is not None:
                        return True

                    if self.tunnel_configured_maximum is not None:
                        return True

                    if self.tunnel_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.AmtSummary']['meta_info']


            class Nsr(object):
                """
                NSR Information
                
                .. attribute:: collab_conv_done
                
                	Collaborators convergence done
                	**type**\:  bool
                
                .. attribute:: count_proc_connection_dn
                
                	No. of times process connection went down
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_proc_connection_up
                
                	No. of times process connection went up
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_not_ready
                
                	No. of times RMF Not Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: count_rmf_ready
                
                	No. of times RMF Ready notif was sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_proc
                
                	Time when process came up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_dn
                
                	Time when process connection went down
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_proc_connection_up
                
                	Time when process connection went up
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_not_ready
                
                	Time when RMF Not\-Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: last_rmf_ready
                
                	Time when RMF Rdy notif was sent
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: partner_proc_connected
                
                	Partner process connected
                	**type**\:  bool
                
                .. attribute:: rmf_notification_done
                
                	RMF Notification done
                	**type**\:  bool
                
                .. attribute:: state
                
                	NSR state
                	**type**\:  int
                
                	**range:** 0..255
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.collab_conv_done = None
                    self.count_proc_connection_dn = None
                    self.count_proc_connection_up = None
                    self.count_rmf_not_ready = None
                    self.count_rmf_ready = None
                    self.last_proc = None
                    self.last_proc_connection_dn = None
                    self.last_proc_connection_up = None
                    self.last_rmf_not_ready = None
                    self.last_rmf_ready = None
                    self.partner_proc_connected = None
                    self.rmf_notification_done = None
                    self.state = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsr'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.collab_conv_done is not None:
                        return True

                    if self.count_proc_connection_dn is not None:
                        return True

                    if self.count_proc_connection_up is not None:
                        return True

                    if self.count_rmf_not_ready is not None:
                        return True

                    if self.count_rmf_ready is not None:
                        return True

                    if self.last_proc is not None:
                        return True

                    if self.last_proc_connection_dn is not None:
                        return True

                    if self.last_proc_connection_up is not None:
                        return True

                    if self.last_rmf_not_ready is not None:
                        return True

                    if self.last_rmf_ready is not None:
                        return True

                    if self.partner_proc_connected is not None:
                        return True

                    if self.rmf_notification_done is not None:
                        return True

                    if self.state is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.Nsr']['meta_info']


            class AmtGatewaies(object):
                """
                Table containing AMT Gateway DataBase
                information
                
                .. attribute:: amt_gateway
                
                	AMT Gateway DataBase information
                	**type**\: list of    :py:class:`AmtGateway <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.Process.AmtGatewaies.AmtGateway>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.amt_gateway = YList()
                    self.amt_gateway.parent = self
                    self.amt_gateway.name = 'amt_gateway'


                class AmtGateway(object):
                    """
                    AMT Gateway DataBase information
                    
                    .. attribute:: amt_nonce
                    
                    	Nonce
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amt_port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: amtgw
                    
                    	GW
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    .. attribute:: amtnh
                    
                    	AMT NH
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: gateway_address
                    
                    	Gateway Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: idb
                    
                    	IDB
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: key_len
                    
                    	Len
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_in
                    
                    	UpdIn
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mem_upd_out
                    
                    	UpdOut
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: port
                    
                    	Port
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.amt_nonce = None
                        self.amt_port = None
                        self.amtgw = None
                        self.amtnh = None
                        self.gateway_address = None
                        self.idb = None
                        self.key_len = None
                        self.mem_upd_in = None
                        self.mem_upd_out = None
                        self.port = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies/Cisco-IOS-XR-ipv4-igmp-oper:amt-gateway'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.amt_nonce is not None:
                            return True

                        if self.amt_port is not None:
                            return True

                        if self.amtgw is not None:
                            return True

                        if self.amtnh is not None:
                            return True

                        if self.gateway_address is not None:
                            return True

                        if self.idb is not None:
                            return True

                        if self.key_len is not None:
                            return True

                        if self.mem_upd_in is not None:
                            return True

                        if self.mem_upd_out is not None:
                            return True

                        if self.port is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.Process.AmtGatewaies.AmtGateway']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:amt-gatewaies'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.amt_gateway is not None:
                        for child_ref in self.amt_gateway:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.AmtGatewaies']['meta_info']


            class UnicastQosAdjustStats(object):
                """
                IGMP Unicast\-Qos\-Adjust Statistics
                
                .. attribute:: add_to_batches
                
                	Add to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: batches
                
                	I2Q Rate Batch count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: delete_to_batches
                
                	Delete to batch count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_qos_s_sweeped
                
                	Is QOS Sweeped once 
                	**type**\:  bool
                
                .. attribute:: is_resync_received
                
                	Is Resync request received
                	**type**\:  bool
                
                .. attribute:: is_resync_required
                
                	Is Resync required
                	**type**\:  bool
                
                .. attribute:: is_resync_start_sent
                
                	Is Resync Start message sent
                	**type**\:  bool
                
                .. attribute:: last_download_time
                
                	Time elapsed since Last download to QOS in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: last_sweep_time
                
                	Time elapsed since Last mark and sweep in seconds
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: second
                
                .. attribute:: queues
                
                	I2Q Queue count
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: received_resync_requests
                
                	Number of Resync request received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_comm_errors
                
                	Send Error due to comms count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_errors
                
                	Number of Send errors in batch
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_partial_errors
                
                	Send Error due to partial issue count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_success
                
                	Send Success count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: sent_resync_bulks
                
                	Number of bulks sent for last resync received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.add_to_batches = None
                    self.batches = None
                    self.delete_to_batches = None
                    self.is_qos_s_sweeped = None
                    self.is_resync_received = None
                    self.is_resync_required = None
                    self.is_resync_start_sent = None
                    self.last_download_time = None
                    self.last_sweep_time = None
                    self.queues = None
                    self.received_resync_requests = None
                    self.send_comm_errors = None
                    self.send_errors = None
                    self.send_partial_errors = None
                    self.send_success = None
                    self.sent_resync_bulks = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:unicast-qos-adjust-stats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.add_to_batches is not None:
                        return True

                    if self.batches is not None:
                        return True

                    if self.delete_to_batches is not None:
                        return True

                    if self.is_qos_s_sweeped is not None:
                        return True

                    if self.is_resync_received is not None:
                        return True

                    if self.is_resync_required is not None:
                        return True

                    if self.is_resync_start_sent is not None:
                        return True

                    if self.last_download_time is not None:
                        return True

                    if self.last_sweep_time is not None:
                        return True

                    if self.queues is not None:
                        return True

                    if self.received_resync_requests is not None:
                        return True

                    if self.send_comm_errors is not None:
                        return True

                    if self.send_errors is not None:
                        return True

                    if self.send_partial_errors is not None:
                        return True

                    if self.send_success is not None:
                        return True

                    if self.sent_resync_bulks is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.UnicastQosAdjustStats']['meta_info']


            class BviStatistics(object):
                """
                IGMP BVI Stats
                
                .. attribute:: null_buffer_handles
                
                	Number of AIPC NULL buffer handles
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_buffers
                
                	Number of AIPC buffers received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_buffers
                
                	Number of AIPC buffers released
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: release_fail_buffers
                
                	Number of AIPC buffers release failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_igmp_packet_success
                
                	Number of IGMP protocol messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_close_notif
                
                	Number of AIPC close notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_connect_notif
                
                	Number of AIPC connect notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_error_notif
                
                	Number of AIPC error notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_input_wait_notif
                
                	Number of AIPC input waiting notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_lwm_notif
                
                	Number of AIPC LWM notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_open_notif
                
                	Number of AIPC open notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_output_notif
                
                	Number of AIPC output notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_publish_notif
                
                	Number of AIPC publish notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_q_full_notif
                
                	Number of AIPC queue full notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_ipc_send_status_notif
                
                	Number of AIPC send status notifications received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: rx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: send_blocks
                
                	Number of AIPC buffers send blocked
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_add_mrouter_msg
                
                	Number of IGMP Mrouter Add messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffer_errors
                
                	Number of AIPC transmission errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_buffers
                
                	Number of AIPC buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_delete_mrouter_msg
                
                	Number of IGMP Mrouter Delete messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_mrouter_buffers
                
                	Number of IGMP Mrouter buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_protocol_buffers
                
                	Number of IGMP protocol buffers transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_sweep_mrouter_msg
                
                	Number of IGMP Mrouter Sweep messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_buffers
                
                	Number of IGMP Unknown buffers transmited
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tx_unknown_mrouter_msg
                
                	Number of IGMP Mrouter Unknown messages transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_dc
                
                	Number of WTX messages dropped due to disconnect
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_drop_nomem
                
                	Number of WTX messages dropped to memory
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_freed
                
                	Number of WTX messages freed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_proto_sent
                
                	Number of WTX messages sent to Protocol
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_recvd
                
                	Number of WTX messages received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wtx_msg_sent
                
                	Number of WTX messages sent
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.null_buffer_handles = None
                    self.receive_buffers = None
                    self.release_buffers = None
                    self.release_fail_buffers = None
                    self.rx_add_mrouter_msg = None
                    self.rx_delete_mrouter_msg = None
                    self.rx_igmp_packet_success = None
                    self.rx_ipc_close_notif = None
                    self.rx_ipc_connect_notif = None
                    self.rx_ipc_error_notif = None
                    self.rx_ipc_input_wait_notif = None
                    self.rx_ipc_lwm_notif = None
                    self.rx_ipc_open_notif = None
                    self.rx_ipc_output_notif = None
                    self.rx_ipc_publish_notif = None
                    self.rx_ipc_q_full_notif = None
                    self.rx_ipc_send_status_notif = None
                    self.rx_sweep_mrouter_msg = None
                    self.rx_unknown_mrouter_msg = None
                    self.send_blocks = None
                    self.tx_add_mrouter_msg = None
                    self.tx_buffer_errors = None
                    self.tx_buffers = None
                    self.tx_delete_mrouter_msg = None
                    self.tx_mrouter_buffers = None
                    self.tx_protocol_buffers = None
                    self.tx_sweep_mrouter_msg = None
                    self.tx_unknown_buffers = None
                    self.tx_unknown_mrouter_msg = None
                    self.wtx_msg_drop_dc = None
                    self.wtx_msg_drop_nomem = None
                    self.wtx_msg_freed = None
                    self.wtx_msg_proto_sent = None
                    self.wtx_msg_recvd = None
                    self.wtx_msg_sent = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:bvi-statistics'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.null_buffer_handles is not None:
                        return True

                    if self.receive_buffers is not None:
                        return True

                    if self.release_buffers is not None:
                        return True

                    if self.release_fail_buffers is not None:
                        return True

                    if self.rx_add_mrouter_msg is not None:
                        return True

                    if self.rx_delete_mrouter_msg is not None:
                        return True

                    if self.rx_igmp_packet_success is not None:
                        return True

                    if self.rx_ipc_close_notif is not None:
                        return True

                    if self.rx_ipc_connect_notif is not None:
                        return True

                    if self.rx_ipc_error_notif is not None:
                        return True

                    if self.rx_ipc_input_wait_notif is not None:
                        return True

                    if self.rx_ipc_lwm_notif is not None:
                        return True

                    if self.rx_ipc_open_notif is not None:
                        return True

                    if self.rx_ipc_output_notif is not None:
                        return True

                    if self.rx_ipc_publish_notif is not None:
                        return True

                    if self.rx_ipc_q_full_notif is not None:
                        return True

                    if self.rx_ipc_send_status_notif is not None:
                        return True

                    if self.rx_sweep_mrouter_msg is not None:
                        return True

                    if self.rx_unknown_mrouter_msg is not None:
                        return True

                    if self.send_blocks is not None:
                        return True

                    if self.tx_add_mrouter_msg is not None:
                        return True

                    if self.tx_buffer_errors is not None:
                        return True

                    if self.tx_buffers is not None:
                        return True

                    if self.tx_delete_mrouter_msg is not None:
                        return True

                    if self.tx_mrouter_buffers is not None:
                        return True

                    if self.tx_protocol_buffers is not None:
                        return True

                    if self.tx_sweep_mrouter_msg is not None:
                        return True

                    if self.tx_unknown_buffers is not None:
                        return True

                    if self.tx_unknown_mrouter_msg is not None:
                        return True

                    if self.wtx_msg_drop_dc is not None:
                        return True

                    if self.wtx_msg_drop_nomem is not None:
                        return True

                    if self.wtx_msg_freed is not None:
                        return True

                    if self.wtx_msg_proto_sent is not None:
                        return True

                    if self.wtx_msg_recvd is not None:
                        return True

                    if self.wtx_msg_sent is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.BviStatistics']['meta_info']


            class Nsf(object):
                """
                NSF Information
                
                .. attribute:: is_multicast_nsf_active
                
                	Is Multicast NSF active
                	**type**\:  bool
                
                .. attribute:: last_icd_notif_recv
                
                	Last ICD Notif Recv
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_icd_notif_recv_min
                
                	Last ICD Notif Recv in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_off
                
                	Last NSF time off
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_off_min
                
                	Last NSF time OFF in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: last_nsf_on
                
                	Last NSF time ON
                	**type**\:  int
                
                	**range:** \-9223372036854775808..9223372036854775807
                
                .. attribute:: last_nsf_on_min
                
                	Last NSF time ON in Seconds
                	**type**\:  int
                
                	**range:** \-2147483648..2147483647
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_time_left
                
                	Multicast NSF time remaining in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: multicast_nsf_timeout
                
                	Multicast NSF timeout in secs
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: second
                
                .. attribute:: respawn_count
                
                	Respawn Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.is_multicast_nsf_active = None
                    self.last_icd_notif_recv = None
                    self.last_icd_notif_recv_min = None
                    self.last_nsf_off = None
                    self.last_nsf_off_min = None
                    self.last_nsf_on = None
                    self.last_nsf_on_min = None
                    self.multicast_nsf_time_left = None
                    self.multicast_nsf_timeout = None
                    self.respawn_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process/Cisco-IOS-XR-ipv4-igmp-oper:nsf'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.is_multicast_nsf_active is not None:
                        return True

                    if self.last_icd_notif_recv is not None:
                        return True

                    if self.last_icd_notif_recv_min is not None:
                        return True

                    if self.last_nsf_off is not None:
                        return True

                    if self.last_nsf_off_min is not None:
                        return True

                    if self.last_nsf_on is not None:
                        return True

                    if self.last_nsf_on_min is not None:
                        return True

                    if self.multicast_nsf_time_left is not None:
                        return True

                    if self.multicast_nsf_timeout is not None:
                        return True

                    if self.respawn_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.Process.Nsf']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:process'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.amt_gatewaies is not None and self.amt_gatewaies._has_data():
                    return True

                if self.amt_summary is not None and self.amt_summary._has_data():
                    return True

                if self.bvi_statistics is not None and self.bvi_statistics._has_data():
                    return True

                if self.nsf is not None and self.nsf._has_data():
                    return True

                if self.nsr is not None and self.nsr._has_data():
                    return True

                if self.unicast_qos_adjust_stats is not None and self.unicast_qos_adjust_stats._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Active.Process']['meta_info']


        class DefaultContext(object):
            """
            Default Context
            
            .. attribute:: detail_groups
            
            	IGMP Detail Group Database
            	**type**\:   :py:class:`DetailGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups>`
            
            .. attribute:: explicit_groups
            
            	IGMP Explicit Group Database
            	**type**\:   :py:class:`ExplicitGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups>`
            
            .. attribute:: global_interface_table
            
            	IGMP Global Interface 
            	**type**\:   :py:class:`GlobalInterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GlobalInterfaceTable>`
            
            .. attribute:: group_summary
            
            	IGMP Groups Summary
            	**type**\:   :py:class:`GroupSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GroupSummary>`
            
            .. attribute:: groups
            
            	IGMP Group Database Table
            	**type**\:   :py:class:`Groups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Groups>`
            
            .. attribute:: ifrs_interface_summary
            
            	IGMP IFRS Interface summary
            	**type**\:   :py:class:`IfrsInterfaceSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaceSummary>`
            
            .. attribute:: ifrs_interfaces
            
            	IGMP Interface specific
            	**type**\:   :py:class:`IfrsInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces>`
            
            .. attribute:: interface_old_format_state_ons
            
            	IGMP Interface state on old format
            	**type**\:   :py:class:`InterfaceOldFormatStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormatStateOns>`
            
            .. attribute:: interface_old_formats
            
            	IGMP Interface specific Table in old format
            	**type**\:   :py:class:`InterfaceOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormats>`
            
            .. attribute:: interface_state_off_old_formats
            
            	IGMP Interface state off old format
            	**type**\:   :py:class:`InterfaceStateOffOldFormats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffOldFormats>`
            
            .. attribute:: interface_state_offs
            
            	IGMP Interface state off
            	**type**\:   :py:class:`InterfaceStateOffs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffs>`
            
            .. attribute:: interface_state_ons
            
            	IGMP Interface state on
            	**type**\:   :py:class:`InterfaceStateOns <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOns>`
            
            .. attribute:: interface_table
            
            	IGMP Interface specific Table
            	**type**\:   :py:class:`InterfaceTable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceTable>`
            
            .. attribute:: interface_unicast_qos_adjusts
            
            	IGMP Interface Unicast\-Qos\-Adjust
            	**type**\:   :py:class:`InterfaceUnicastQosAdjusts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts>`
            
            .. attribute:: non_active_groups
            
            	IGMP Non\-Active Groups Information
            	**type**\:   :py:class:`NonActiveGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.NonActiveGroups>`
            
            .. attribute:: ranges
            
            	Range table
            	**type**\:   :py:class:`Ranges <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Ranges>`
            
            .. attribute:: ssm_map_details
            
            	SSM Map Detail
            	**type**\:   :py:class:`SsmMapDetails <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMapDetails>`
            
            .. attribute:: ssm_maps
            
            	SSM Map Table
            	**type**\:   :py:class:`SsmMaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMaps>`
            
            .. attribute:: summary
            
            	IGMP Summary Information
            	**type**\:   :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Summary>`
            
            .. attribute:: traffic_counters
            
            	IGMP Message Traffic Counters
            	**type**\:   :py:class:`TrafficCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.TrafficCounters>`
            
            

            """

            _prefix = 'ipv4-igmp-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.detail_groups = Igmp.Active.DefaultContext.DetailGroups()
                self.detail_groups.parent = self
                self.explicit_groups = Igmp.Active.DefaultContext.ExplicitGroups()
                self.explicit_groups.parent = self
                self.global_interface_table = Igmp.Active.DefaultContext.GlobalInterfaceTable()
                self.global_interface_table.parent = self
                self.group_summary = Igmp.Active.DefaultContext.GroupSummary()
                self.group_summary.parent = self
                self.groups = Igmp.Active.DefaultContext.Groups()
                self.groups.parent = self
                self.ifrs_interface_summary = Igmp.Active.DefaultContext.IfrsInterfaceSummary()
                self.ifrs_interface_summary.parent = self
                self.ifrs_interfaces = Igmp.Active.DefaultContext.IfrsInterfaces()
                self.ifrs_interfaces.parent = self
                self.interface_old_format_state_ons = Igmp.Active.DefaultContext.InterfaceOldFormatStateOns()
                self.interface_old_format_state_ons.parent = self
                self.interface_old_formats = Igmp.Active.DefaultContext.InterfaceOldFormats()
                self.interface_old_formats.parent = self
                self.interface_state_off_old_formats = Igmp.Active.DefaultContext.InterfaceStateOffOldFormats()
                self.interface_state_off_old_formats.parent = self
                self.interface_state_offs = Igmp.Active.DefaultContext.InterfaceStateOffs()
                self.interface_state_offs.parent = self
                self.interface_state_ons = Igmp.Active.DefaultContext.InterfaceStateOns()
                self.interface_state_ons.parent = self
                self.interface_table = Igmp.Active.DefaultContext.InterfaceTable()
                self.interface_table.parent = self
                self.interface_unicast_qos_adjusts = Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts()
                self.interface_unicast_qos_adjusts.parent = self
                self.non_active_groups = Igmp.Active.DefaultContext.NonActiveGroups()
                self.non_active_groups.parent = self
                self.ranges = Igmp.Active.DefaultContext.Ranges()
                self.ranges.parent = self
                self.ssm_map_details = Igmp.Active.DefaultContext.SsmMapDetails()
                self.ssm_map_details.parent = self
                self.ssm_maps = Igmp.Active.DefaultContext.SsmMaps()
                self.ssm_maps.parent = self
                self.summary = Igmp.Active.DefaultContext.Summary()
                self.summary.parent = self
                self.traffic_counters = Igmp.Active.DefaultContext.TrafficCounters()
                self.traffic_counters.parent = self


            class Summary(object):
                """
                IGMP Summary Information
                
                .. attribute:: disabled_interface_count
                
                	No. of disabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: enabled_interface_count
                
                	No. of enabled interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: group_limit
                
                	Maximum groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface
                
                	Maximum and current groups accepted for each interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Summary.Interface>`
                
                .. attribute:: is_disabled
                
                	Is maximum enforcement disabled
                	**type**\:  bool
                
                .. attribute:: node_low_memory
                
                	Is node in low memory condition
                	**type**\:  bool
                
                .. attribute:: robustness
                
                	Robustness variable
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: supported_interfaces
                
                	No. of supported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: tunnel_mte_config_count
                
                	No. of static group commands
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: unsupported_interfaces
                
                	No. of unsupported interfaces
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.disabled_interface_count = None
                    self.enabled_interface_count = None
                    self.group_count = None
                    self.group_limit = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'
                    self.is_disabled = None
                    self.node_low_memory = None
                    self.robustness = None
                    self.supported_interfaces = None
                    self.tunnel_mte_config_count = None
                    self.unsupported_interfaces = None


                class Interface(object):
                    """
                    Maximum and current groups accepted for each
                    interface
                    
                    .. attribute:: group_count
                    
                    	Current groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_limit
                    
                    	Maximum groups accepted per interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: on_off
                    
                    	Enabled/Disabled
                    	**type**\:  bool
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent if handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Time elapsed since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_count = None
                        self.group_limit = None
                        self.interface_name = None
                        self.on_off = None
                        self.parent_ifhandle = None
                        self.router_uptime_in_seconds = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary/Cisco-IOS-XR-ipv4-igmp-oper:interface'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_count is not None:
                            return True

                        if self.group_limit is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.on_off is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.Summary.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.disabled_interface_count is not None:
                        return True

                    if self.enabled_interface_count is not None:
                        return True

                    if self.group_count is not None:
                        return True

                    if self.group_limit is not None:
                        return True

                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    if self.is_disabled is not None:
                        return True

                    if self.node_low_memory is not None:
                        return True

                    if self.robustness is not None:
                        return True

                    if self.supported_interfaces is not None:
                        return True

                    if self.tunnel_mte_config_count is not None:
                        return True

                    if self.unsupported_interfaces is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.Summary']['meta_info']


            class InterfaceStateOns(object):
                """
                IGMP Interface state on
                
                .. attribute:: interface_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_on = YList()
                    self.interface_state_on.parent = self
                    self.interface_state_on.name = 'interface_state_on'


                class InterfaceStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOns.InterfaceStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_on is not None:
                        for child_ref in self.interface_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOns']['meta_info']


            class DetailGroups(object):
                """
                IGMP Detail Group Database
                
                .. attribute:: detail_group
                
                	IGMP Detail Group Entry Information
                	**type**\: list of    :py:class:`DetailGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.detail_group = YList()
                    self.detail_group.parent = self
                    self.detail_group.name = 'detail_group'


                class DetailGroup(object):
                    """
                    IGMP Detail Group Entry Information
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_host_exclude_mode
                    
                    	Group host filter mode
                    	**type**\:  bool
                    
                    .. attribute:: is_router_exclude_mode
                    
                    	Group router filter mode
                    	**type**\:  bool
                    
                    .. attribute:: source
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Source <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.Source>`
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_info = Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo()
                        self.group_info.parent = self
                        self.interface_name = None
                        self.is_host_exclude_mode = None
                        self.is_router_exclude_mode = None
                        self.source = YList()
                        self.source.parent = self
                        self.source.name = 'source'
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.GroupInfo']['meta_info']


                    class Source(object):
                        """
                        List of sources
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: flags
                        
                        	Source flags
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_forward
                        
                        	Should we forward on this entry
                        	**type**\:  bool
                        
                        .. attribute:: is_local
                        
                        	Is this a local source
                        	**type**\:  bool
                        
                        .. attribute:: is_remote
                        
                        	Is this a remote source
                        	**type**\:  bool
                        
                        .. attribute:: is_we_report
                        
                        	Should we report the source
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.flags = None
                            self.is_added = None
                            self.is_forward = None
                            self.is_local = None
                            self.is_remote = None
                            self.is_we_report = None
                            self.source_address = Igmp.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.Source.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group/Cisco-IOS-XR-ipv4-igmp-oper:source'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.flags is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_forward is not None:
                                return True

                            if self.is_local is not None:
                                return True

                            if self.is_remote is not None:
                                return True

                            if self.is_we_report is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup.Source']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups/Cisco-IOS-XR-ipv4-igmp-oper:detail-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.is_host_exclude_mode is not None:
                            return True

                        if self.is_router_exclude_mode is not None:
                            return True

                        if self.source is not None:
                            for child_ref in self.source:
                                if child_ref._has_data():
                                    return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups.DetailGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:detail-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.detail_group is not None:
                        for child_ref in self.detail_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.DetailGroups']['meta_info']


            class NonActiveGroups(object):
                """
                IGMP Non\-Active Groups Information
                
                .. attribute:: non_active_groups
                
                	List of non\-active groups
                	**type**\: list of    :py:class:`NonActiveGroups_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.non_active_groups = YList()
                    self.non_active_groups.parent = self
                    self.non_active_groups.name = 'non_active_groups'


                class NonActiveGroups_(object):
                    """
                    List of non\-active groups
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress>`
                    
                    .. attribute:: interface
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**length:** 0..65
                    
                    .. attribute:: reason_for_non_activity
                    
                    	Reason for group join not being processed
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress()
                        self.group_address.parent = self
                        self.interface = None
                        self.reason_for_non_activity = None
                        self.source_address = Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress()
                        self.source_address.parent = self


                    class GroupAddress(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.GroupAddress']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None and self.group_address._has_data():
                            return True

                        if self.interface is not None:
                            return True

                        if self.reason_for_non_activity is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.NonActiveGroups.NonActiveGroups_']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:non-active-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.non_active_groups is not None:
                        for child_ref in self.non_active_groups:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.NonActiveGroups']['meta_info']


            class SsmMaps(object):
                """
                SSM Map Table
                
                .. attribute:: ssm_map
                
                	SSM Map information
                	**type**\: list of    :py:class:`SsmMap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMaps.SsmMap>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map = YList()
                    self.ssm_map.parent = self
                    self.ssm_map.name = 'ssm_map'


                class SsmMap(object):
                    """
                    SSM Map information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr>`
                    
                    .. attribute:: map_type
                    
                    	Map Type of group
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: source_counts
                    
                    	Count of Sources
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.map_type = None
                        self.source_counts = None
                        self.ssm_map_type = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.SsmMaps.SsmMap.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.map_type is not None:
                            return True

                        if self.source_counts is not None:
                            return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.SsmMaps.SsmMap']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-maps'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map is not None:
                        for child_ref in self.ssm_map:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.SsmMaps']['meta_info']


            class ExplicitGroups(object):
                """
                IGMP Explicit Group Database
                
                .. attribute:: explicit_group
                
                	IGMP Explicit Group Entry Information
                	**type**\: list of    :py:class:`ExplicitGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.explicit_group = YList()
                    self.explicit_group.parent = self
                    self.explicit_group.name = 'explicit_group'


                class ExplicitGroup(object):
                    """
                    IGMP Explicit Group Entry Information
                    
                    .. attribute:: exclude_hosts
                    
                    	No. of hosts who are excluded
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_info
                    
                    	Basic Group information
                    	**type**\:   :py:class:`GroupInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo>`
                    
                    .. attribute:: host
                    
                    	List of hosts
                    	**type**\: list of    :py:class:`Host <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host>`
                    
                    .. attribute:: include_hosts
                    
                    	No. of hosts who are included
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: source_address
                    
                    	Source/Host Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.exclude_hosts = None
                        self.group_address = None
                        self.group_info = Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo()
                        self.group_info.parent = self
                        self.host = YList()
                        self.host.parent = self
                        self.host.name = 'host'
                        self.include_hosts = None
                        self.interface_name = None
                        self.source_address = None


                    class GroupInfo(object):
                        """
                        Basic Group information
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**units**\: second
                        
                        .. attribute:: explicit_tracking_enabled
                        
                        	Is explicit tracking enabled
                        	**type**\:  bool
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr>`
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_added
                        
                        	Joined
                        	**type**\:  bool
                        
                        .. attribute:: is_low_memory
                        
                        	Node is running low on memory
                        	**type**\:  bool
                        
                        .. attribute:: is_self_join
                        
                        	If local system is member of this group on this interface
                        	**type**\:  bool
                        
                        .. attribute:: is_suppressed
                        
                        	Suppressed
                        	**type**\:  bool
                        
                        .. attribute:: last_reporter
                        
                        	Last reporter address
                        	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter>`
                        
                        .. attribute:: older_host_version1_timer
                        
                        	IGMP Hostversion1timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: older_host_version2_timer
                        
                        	IGMP Hostversion2timer
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_filter_mode
                        
                        	Filter mode
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: row_status
                        
                        	interface on or off for the group
                        	**type**\:  str
                        
                        	**length:** 0..16
                        
                        .. attribute:: source_address
                        
                        	Source Address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress>`
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.expiration_time = None
                            self.explicit_tracking_enabled = None
                            self.group_address_xr = Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.interface_name_xr = None
                            self.is_added = None
                            self.is_low_memory = None
                            self.is_self_join = None
                            self.is_suppressed = None
                            self.last_reporter = Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter()
                            self.last_reporter.parent = self
                            self.older_host_version1_timer = None
                            self.older_host_version2_timer = None
                            self.router_filter_mode = None
                            self.row_status = None
                            self.source_address = Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress()
                            self.source_address.parent = self
                            self.uptime = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.GroupAddressXr']['meta_info']


                        class LastReporter(object):
                            """
                            Last reporter address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.LastReporter']['meta_info']


                        class SourceAddress(object):
                            """
                            Source Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:group-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.expiration_time is not None:
                                return True

                            if self.explicit_tracking_enabled is not None:
                                return True

                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_added is not None:
                                return True

                            if self.is_low_memory is not None:
                                return True

                            if self.is_self_join is not None:
                                return True

                            if self.is_suppressed is not None:
                                return True

                            if self.last_reporter is not None and self.last_reporter._has_data():
                                return True

                            if self.older_host_version1_timer is not None:
                                return True

                            if self.older_host_version2_timer is not None:
                                return True

                            if self.router_filter_mode is not None:
                                return True

                            if self.row_status is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.GroupInfo']['meta_info']


                    class Host(object):
                        """
                        List of hosts
                        
                        .. attribute:: address
                        
                        	Host Address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address>`
                        
                        .. attribute:: expiration_time
                        
                        	Expiration time in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        .. attribute:: is_exclude
                        
                        	Exclude flag set
                        	**type**\:  bool
                        
                        .. attribute:: source_address
                        
                        	First 3 source addresses
                        	**type**\: list of    :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress>`
                        
                        .. attribute:: source_count
                        
                        	No. of sources in entry
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: uptime
                        
                        	Uptime in seconds
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address()
                            self.address.parent = self
                            self.expiration_time = None
                            self.is_exclude = None
                            self.source_address = YList()
                            self.source_address.parent = self
                            self.source_address.name = 'source_address'
                            self.source_count = None
                            self.uptime = None


                        class Address(object):
                            """
                            Host Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.Address']['meta_info']


                        class SourceAddress(object):
                            """
                            First 3 source addresses
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host.SourceAddress']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group/Cisco-IOS-XR-ipv4-igmp-oper:host'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.expiration_time is not None:
                                return True

                            if self.is_exclude is not None:
                                return True

                            if self.source_address is not None:
                                for child_ref in self.source_address:
                                    if child_ref._has_data():
                                        return True

                            if self.source_count is not None:
                                return True

                            if self.uptime is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup.Host']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups/Cisco-IOS-XR-ipv4-igmp-oper:explicit-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.exclude_hosts is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_info is not None and self.group_info._has_data():
                            return True

                        if self.host is not None:
                            for child_ref in self.host:
                                if child_ref._has_data():
                                    return True

                        if self.include_hosts is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.source_address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups.ExplicitGroup']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:explicit-groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.explicit_group is not None:
                        for child_ref in self.explicit_group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.ExplicitGroups']['meta_info']


            class InterfaceTable(object):
                """
                IGMP Interface specific Table
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceTable']['meta_info']


            class InterfaceOldFormats(object):
                """
                IGMP Interface specific Table in old format
                
                .. attribute:: interface_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format = YList()
                    self.interface_old_format.parent = self
                    self.interface_old_format.name = 'interface_old_format'


                class InterfaceOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormats.InterfaceOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format is not None:
                        for child_ref in self.interface_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormats']['meta_info']


            class InterfaceStateOffOldFormats(object):
                """
                IGMP Interface state off old format
                
                .. attribute:: interface_state_off_old_format
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOffOldFormat <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off_old_format = YList()
                    self.interface_state_off_old_format.parent = self
                    self.interface_state_off_old_format.name = 'interface_state_off_old_format'


                class InterfaceStateOffOldFormat(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-format[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffOldFormats.InterfaceStateOffOldFormat']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off-old-formats'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off_old_format is not None:
                        for child_ref in self.interface_state_off_old_format:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffOldFormats']['meta_info']


            class InterfaceUnicastQosAdjusts(object):
                """
                IGMP Interface Unicast\-Qos\-Adjust
                
                .. attribute:: interface_unicast_qos_adjust
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceUnicastQosAdjust <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_unicast_qos_adjust = YList()
                    self.interface_unicast_qos_adjust.parent = self
                    self.interface_unicast_qos_adjust.name = 'interface_unicast_qos_adjust'


                class InterfaceUnicastQosAdjust(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_virtual_access
                    
                    	Is VirtualAccess Interface
                    	**type**\:  bool
                    
                    .. attribute:: rate
                    
                    	Overall rate in Kbps
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: rate_decrements
                    
                    	Count of rate decrements
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: rate_increments
                    
                    	Count of rate increments
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: update
                    
                    	List of updates
                    	**type**\: list of    :py:class:`Update <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.is_virtual_access = None
                        self.rate = None
                        self.rate_decrements = None
                        self.rate_increments = None
                        self.update = YList()
                        self.update.parent = self
                        self.update.name = 'update'


                    class Update(object):
                        """
                        List of updates
                        
                        .. attribute:: group_address
                        
                        	Group address
                        	**type**\:   :py:class:`GroupAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress>`
                        
                        .. attribute:: is_add
                        
                        	Is this a rate increment
                        	**type**\:  bool
                        
                        .. attribute:: received_time
                        
                        	Time this update is received
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: source_address
                        
                        	Source address
                        	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress>`
                        
                        .. attribute:: weight
                        
                        	Weight from policy
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address = Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress()
                            self.group_address.parent = self
                            self.is_add = None
                            self.received_time = None
                            self.source_address = Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress()
                            self.source_address.parent = self
                            self.weight = None


                        class SourceAddress(object):
                            """
                            Source address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.SourceAddress']['meta_info']


                        class GroupAddress(object):
                            """
                            Group address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:group-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update.GroupAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:update'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address is not None and self.group_address._has_data():
                                return True

                            if self.is_add is not None:
                                return True

                            if self.received_time is not None:
                                return True

                            if self.source_address is not None and self.source_address._has_data():
                                return True

                            if self.weight is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust.Update']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjust[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.is_virtual_access is not None:
                            return True

                        if self.rate is not None:
                            return True

                        if self.rate_decrements is not None:
                            return True

                        if self.rate_increments is not None:
                            return True

                        if self.update is not None:
                            for child_ref in self.update:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts.InterfaceUnicastQosAdjust']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-unicast-qos-adjusts'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_unicast_qos_adjust is not None:
                        for child_ref in self.interface_unicast_qos_adjust:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceUnicastQosAdjusts']['meta_info']


            class Ranges(object):
                """
                Range table
                
                .. attribute:: range
                
                	Range information
                	**type**\: list of    :py:class:`Range <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Ranges.Range>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.range = YList()
                    self.range.parent = self
                    self.range.name = 'range'


                class Range(object):
                    """
                    Range information
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Ranges.Range.GroupAddressXr>`
                    
                    .. attribute:: group_mask
                    
                    	Group Mask
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    .. attribute:: is_stale
                    
                    	Is the entry stale
                    	**type**\:  bool
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: protocol
                    
                    	Protocol
                    	**type**\:   :py:class:`IgmpEdmProtocolEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpEdmProtocolEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Active.DefaultContext.Ranges.Range.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.group_mask = None
                        self.is_stale = None
                        self.prefix_length = None
                        self.protocol = None


                    class GroupAddressXr(object):
                        """
                        Group address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.Ranges.Range.GroupAddressXr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges/Cisco-IOS-XR-ipv4-igmp-oper:range'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.group_mask is not None:
                            return True

                        if self.is_stale is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.protocol is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.Ranges.Range']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ranges'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.range is not None:
                        for child_ref in self.range:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.Ranges']['meta_info']


            class IfrsInterfaces(object):
                """
                IGMP Interface specific
                
                .. attribute:: ifrs_interface
                
                	IGMP IFRS Interface
                	**type**\: list of    :py:class:`IfrsInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ifrs_interface = YList()
                    self.ifrs_interface.parent = self
                    self.ifrs_interface.name = 'ifrs_interface'


                class IfrsInterface(object):
                    """
                    IGMP IFRS Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	IFRS Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: igmp_interface_entry
                    
                    	IGMP interface entry
                    	**type**\:   :py:class:`IgmpInterfaceEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry>`
                    
                    .. attribute:: join_group_count
                    
                    	Join group count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.igmp_interface_entry = Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry()
                        self.igmp_interface_entry.parent = self
                        self.join_group_count = None


                    class IgmpInterfaceEntry(object):
                        """
                        IGMP interface entry
                        
                        .. attribute:: address
                        
                        	IP address
                        	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address>`
                        
                        .. attribute:: configuration_mcast_vrf_error
                        
                        	Is mcast error
                        	**type**\:  bool
                        
                        .. attribute:: configuration_mcast_vrf_set
                        
                        	Is mcast set
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_error
                        
                        	CFG vrf error
                        	**type**\:  bool
                        
                        .. attribute:: configurationvrf_set
                        
                        	CFG vrf set
                        	**type**\:  bool
                        
                        .. attribute:: group_joins
                        
                        	No. of group joins
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: group_leaves
                        
                        	No. of group leaves
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: host_version
                        
                        	IGMP Host version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: igmp_version
                        
                        	IGMP Router version
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: interface_name_xr
                        
                        	Interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: is_configurationverify
                        
                        	CFG verify
                        	**type**\:  bool
                        
                        .. attribute:: is_identity_present
                        
                        	Subscriber ID or Address available from AAA
                        	**type**\:  bool
                        
                        .. attribute:: is_im_state_registered
                        
                        	Im state registered
                        	**type**\:  bool
                        
                        .. attribute:: is_interface_up
                        
                        	Is interface up
                        	**type**\:  bool
                        
                        .. attribute:: is_ip_enabled
                        
                        	Is IP enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_las_registered
                        
                        	LAS registered
                        	**type**\:  bool
                        
                        .. attribute:: is_las_request
                        
                        	LAS req
                        	**type**\:  bool
                        
                        .. attribute:: is_querier
                        
                        	Are we querier
                        	**type**\:  bool
                        
                        .. attribute:: is_router_enabled
                        
                        	Is Router functionality enabled
                        	**type**\:  bool
                        
                        .. attribute:: is_subscriber
                        
                        	Subscriber interface
                        	**type**\:  bool
                        
                        .. attribute:: las_get_address_count
                        
                        	LAS get addr count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_add_update_count
                        
                        	LAS LL add update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_registration_count
                        
                        	LAS reg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_ll_remove_update_count
                        
                        	LAS LL remove update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_null_update_count
                        
                        	LAS Null update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_unregistration_count
                        
                        	LAS unreg count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: las_update_count
                        
                        	LAS Update count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_member_query_interval
                        
                        	Last Member Query Interval
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: location
                        
                        	Location
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_tuple_count
                        
                        	MTE Tuple count
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mte_vrf_id
                        
                        	MTE VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mtu
                        
                        	MTU
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: parent_ifhandle
                        
                        	Parent If Handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: prefix_length
                        
                        	Prefix length
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: proxy_interface
                        
                        	Proxy interface index
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: querier_address
                        
                        	Address of the Querier
                        	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress>`
                        
                        .. attribute:: querier_uptime
                        
                        	Time since the last querier took over
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_interval
                        
                        	Query Interval value in seconds
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: query_maximum_response_time
                        
                        	Max Response Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: query_timeout
                        
                        	Query Timeout value
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: robustness
                        
                        	Robustness Variable value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: router_uptime_in_seconds
                        
                        	Uptime since router enabled event
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: state
                        
                        	Interface state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: subscriber_address
                        
                        	Address of subscriber
                        	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress>`
                        
                        .. attribute:: subscriber_id
                        
                        	ID string of subscriber
                        	**type**\:  str
                        
                        	**length:** 0..257
                        
                        .. attribute:: subscriber_mode
                        
                        	Subscriber mode
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_query_in_seconds
                        
                        	Time elapsed since last query
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_last_report_in_seconds
                        
                        	Time elapsed since last report
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: total_active_groups
                        
                        	Actual number of groups on interface
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_id
                        
                        	VRF id
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: vrf_state
                        
                        	Vrf State
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address()
                            self.address.parent = self
                            self.configuration_mcast_vrf_error = None
                            self.configuration_mcast_vrf_set = None
                            self.configurationvrf_error = None
                            self.configurationvrf_set = None
                            self.group_joins = None
                            self.group_leaves = None
                            self.host_version = None
                            self.igmp_version = None
                            self.interface_name_xr = None
                            self.is_configurationverify = None
                            self.is_identity_present = None
                            self.is_im_state_registered = None
                            self.is_interface_up = None
                            self.is_ip_enabled = None
                            self.is_las_registered = None
                            self.is_las_request = None
                            self.is_querier = None
                            self.is_router_enabled = None
                            self.is_subscriber = None
                            self.las_get_address_count = None
                            self.las_ll_add_update_count = None
                            self.las_ll_registration_count = None
                            self.las_ll_remove_update_count = None
                            self.las_null_update_count = None
                            self.las_unregistration_count = None
                            self.las_update_count = None
                            self.last_member_query_interval = None
                            self.location = None
                            self.mte_tuple_count = None
                            self.mte_vrf_id = None
                            self.mtu = None
                            self.parent_ifhandle = None
                            self.prefix_length = None
                            self.proxy_interface = None
                            self.querier_address = Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress()
                            self.querier_address.parent = self
                            self.querier_uptime = None
                            self.query_interval = None
                            self.query_maximum_response_time = None
                            self.query_timeout = None
                            self.robustness = None
                            self.router_uptime_in_seconds = None
                            self.state = None
                            self.subscriber_address = Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress()
                            self.subscriber_address.parent = self
                            self.subscriber_id = None
                            self.subscriber_mode = None
                            self.time_since_last_query_in_seconds = None
                            self.time_since_last_report_in_seconds = None
                            self.total_active_groups = None
                            self.vrf_id = None
                            self.vrf_state = None


                        class Address(object):
                            """
                            IP address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.Address']['meta_info']


                        class QuerierAddress(object):
                            """
                            Address of the Querier
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.QuerierAddress']['meta_info']


                        class SubscriberAddress(object):
                            """
                            Address of subscriber
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry.SubscriberAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:igmp-interface-entry'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.address is not None and self.address._has_data():
                                return True

                            if self.configuration_mcast_vrf_error is not None:
                                return True

                            if self.configuration_mcast_vrf_set is not None:
                                return True

                            if self.configurationvrf_error is not None:
                                return True

                            if self.configurationvrf_set is not None:
                                return True

                            if self.group_joins is not None:
                                return True

                            if self.group_leaves is not None:
                                return True

                            if self.host_version is not None:
                                return True

                            if self.igmp_version is not None:
                                return True

                            if self.interface_name_xr is not None:
                                return True

                            if self.is_configurationverify is not None:
                                return True

                            if self.is_identity_present is not None:
                                return True

                            if self.is_im_state_registered is not None:
                                return True

                            if self.is_interface_up is not None:
                                return True

                            if self.is_ip_enabled is not None:
                                return True

                            if self.is_las_registered is not None:
                                return True

                            if self.is_las_request is not None:
                                return True

                            if self.is_querier is not None:
                                return True

                            if self.is_router_enabled is not None:
                                return True

                            if self.is_subscriber is not None:
                                return True

                            if self.las_get_address_count is not None:
                                return True

                            if self.las_ll_add_update_count is not None:
                                return True

                            if self.las_ll_registration_count is not None:
                                return True

                            if self.las_ll_remove_update_count is not None:
                                return True

                            if self.las_null_update_count is not None:
                                return True

                            if self.las_unregistration_count is not None:
                                return True

                            if self.las_update_count is not None:
                                return True

                            if self.last_member_query_interval is not None:
                                return True

                            if self.location is not None:
                                return True

                            if self.mte_tuple_count is not None:
                                return True

                            if self.mte_vrf_id is not None:
                                return True

                            if self.mtu is not None:
                                return True

                            if self.parent_ifhandle is not None:
                                return True

                            if self.prefix_length is not None:
                                return True

                            if self.proxy_interface is not None:
                                return True

                            if self.querier_address is not None and self.querier_address._has_data():
                                return True

                            if self.querier_uptime is not None:
                                return True

                            if self.query_interval is not None:
                                return True

                            if self.query_maximum_response_time is not None:
                                return True

                            if self.query_timeout is not None:
                                return True

                            if self.robustness is not None:
                                return True

                            if self.router_uptime_in_seconds is not None:
                                return True

                            if self.state is not None:
                                return True

                            if self.subscriber_address is not None and self.subscriber_address._has_data():
                                return True

                            if self.subscriber_id is not None:
                                return True

                            if self.subscriber_mode is not None:
                                return True

                            if self.time_since_last_query_in_seconds is not None:
                                return True

                            if self.time_since_last_report_in_seconds is not None:
                                return True

                            if self.total_active_groups is not None:
                                return True

                            if self.vrf_id is not None:
                                return True

                            if self.vrf_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface.IgmpInterfaceEntry']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.igmp_interface_entry is not None and self.igmp_interface_entry._has_data():
                            return True

                        if self.join_group_count is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces.IfrsInterface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interfaces'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ifrs_interface is not None:
                        for child_ref in self.ifrs_interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaces']['meta_info']


            class TrafficCounters(object):
                """
                IGMP Message Traffic Counters
                
                .. attribute:: auxillary_data_length_errors
                
                	AuxDataLen errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: bad_scope_errors
                
                	BadScope errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: checksum_errors
                
                	Checksum errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: elapsed_time
                
                	Running time for counters
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: format_errors
                
                	Malformed packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: get_packet_failure
                
                	Packet get failed
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_disabled_idb
                
                	Packet received on disabled idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_dvmrp
                
                	DVMRP packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_leaves
                
                	Leaves in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_martian_address
                
                	Packets received with Martian Address
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_mtrace
                
                	Mtrace packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_assigned_vrf_id
                
                	Packets received with no assigned vrf id
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_idb
                
                	Packets received without idb
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_platform_support_mtrace
                
                	mtrace packets without platform support
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_in_idb
                
                	Packets received on idb without VRF
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_no_vrf_mtrace
                
                	mtrace packets with no vrf associated
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_pim
                
                	PIM packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_queries
                
                	Query packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: input_reports
                
                	Reports in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: invalid_source_address_errors
                
                	Invalid Source Address errors
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: miscellaneous_errors
                
                	Packets dropped for other reasons
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: no_socket_connection
                
                	Packets dropped since no socket connection
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_dvmrp
                
                	DVMRP packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_leaves
                
                	Leaves out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_mtrace
                
                	Mtrace packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_no_parent_interface_handle
                
                	Failures setting 2nd ifhandle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_pim
                
                	PIM packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_queries
                
                	Query packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: output_reports
                
                	Reports out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_input_errors
                
                	Incoming Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packet_manager_output_errors
                
                	Outgoing Packet Manager packets dropped
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_in
                
                	Packets in
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: packets_out
                
                	Packets out
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: receive_socket_errors
                
                	Socket errors on reception
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: socket_errors
                
                	Socket errors on send
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.auxillary_data_length_errors = None
                    self.bad_scope_errors = None
                    self.checksum_errors = None
                    self.elapsed_time = None
                    self.format_errors = None
                    self.get_packet_failure = None
                    self.input_disabled_idb = None
                    self.input_dvmrp = None
                    self.input_leaves = None
                    self.input_martian_address = None
                    self.input_mtrace = None
                    self.input_no_assigned_vrf_id = None
                    self.input_no_idb = None
                    self.input_no_platform_support_mtrace = None
                    self.input_no_vrf_in_idb = None
                    self.input_no_vrf_mtrace = None
                    self.input_pim = None
                    self.input_queries = None
                    self.input_reports = None
                    self.invalid_source_address_errors = None
                    self.miscellaneous_errors = None
                    self.no_socket_connection = None
                    self.output_dvmrp = None
                    self.output_leaves = None
                    self.output_mtrace = None
                    self.output_no_parent_interface_handle = None
                    self.output_pim = None
                    self.output_queries = None
                    self.output_reports = None
                    self.packet_manager_input_errors = None
                    self.packet_manager_output_errors = None
                    self.packets_in = None
                    self.packets_out = None
                    self.receive_socket_errors = None
                    self.socket_errors = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:traffic-counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.auxillary_data_length_errors is not None:
                        return True

                    if self.bad_scope_errors is not None:
                        return True

                    if self.checksum_errors is not None:
                        return True

                    if self.elapsed_time is not None:
                        return True

                    if self.format_errors is not None:
                        return True

                    if self.get_packet_failure is not None:
                        return True

                    if self.input_disabled_idb is not None:
                        return True

                    if self.input_dvmrp is not None:
                        return True

                    if self.input_leaves is not None:
                        return True

                    if self.input_martian_address is not None:
                        return True

                    if self.input_mtrace is not None:
                        return True

                    if self.input_no_assigned_vrf_id is not None:
                        return True

                    if self.input_no_idb is not None:
                        return True

                    if self.input_no_platform_support_mtrace is not None:
                        return True

                    if self.input_no_vrf_in_idb is not None:
                        return True

                    if self.input_no_vrf_mtrace is not None:
                        return True

                    if self.input_pim is not None:
                        return True

                    if self.input_queries is not None:
                        return True

                    if self.input_reports is not None:
                        return True

                    if self.invalid_source_address_errors is not None:
                        return True

                    if self.miscellaneous_errors is not None:
                        return True

                    if self.no_socket_connection is not None:
                        return True

                    if self.output_dvmrp is not None:
                        return True

                    if self.output_leaves is not None:
                        return True

                    if self.output_mtrace is not None:
                        return True

                    if self.output_no_parent_interface_handle is not None:
                        return True

                    if self.output_pim is not None:
                        return True

                    if self.output_queries is not None:
                        return True

                    if self.output_reports is not None:
                        return True

                    if self.packet_manager_input_errors is not None:
                        return True

                    if self.packet_manager_output_errors is not None:
                        return True

                    if self.packets_in is not None:
                        return True

                    if self.packets_out is not None:
                        return True

                    if self.receive_socket_errors is not None:
                        return True

                    if self.socket_errors is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.TrafficCounters']['meta_info']


            class Groups(object):
                """
                IGMP Group Database Table
                
                .. attribute:: group
                
                	IGMP Group Entry Information
                	**type**\: list of    :py:class:`Group <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Groups.Group>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group = YList()
                    self.group.parent = self
                    self.group.name = 'group'


                class Group(object):
                    """
                    IGMP Group Entry Information
                    
                    .. attribute:: expiration_time
                    
                    	Expiration time in seconds
                    	**type**\:  int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**units**\: second
                    
                    .. attribute:: explicit_tracking_enabled
                    
                    	Is explicit tracking enabled
                    	**type**\:  bool
                    
                    .. attribute:: group_address
                    
                    	Group Address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: group_address_xr
                    
                    	Group Address
                    	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Groups.Group.GroupAddressXr>`
                    
                    .. attribute:: interface_name
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_added
                    
                    	Joined
                    	**type**\:  bool
                    
                    .. attribute:: is_low_memory
                    
                    	Node is running low on memory
                    	**type**\:  bool
                    
                    .. attribute:: is_self_join
                    
                    	If local system is member of this group on this interface
                    	**type**\:  bool
                    
                    .. attribute:: is_suppressed
                    
                    	Suppressed
                    	**type**\:  bool
                    
                    .. attribute:: last_reporter
                    
                    	Last reporter address
                    	**type**\:   :py:class:`LastReporter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Groups.Group.LastReporter>`
                    
                    .. attribute:: older_host_version1_timer
                    
                    	IGMP Hostversion1timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: older_host_version2_timer
                    
                    	IGMP Hostversion2timer
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_filter_mode
                    
                    	Filter mode
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: row_status
                    
                    	interface on or off for the group
                    	**type**\:  str
                    
                    	**length:** 0..16
                    
                    .. attribute:: source_address
                    
                    	Source Address
                    	**type**\:   :py:class:`SourceAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.Groups.Group.SourceAddress>`
                    
                    .. attribute:: uptime
                    
                    	Uptime in seconds
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**units**\: second
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.expiration_time = None
                        self.explicit_tracking_enabled = None
                        self.group_address = None
                        self.group_address_xr = Igmp.Active.DefaultContext.Groups.Group.GroupAddressXr()
                        self.group_address_xr.parent = self
                        self.interface_name = None
                        self.interface_name_xr = None
                        self.is_added = None
                        self.is_low_memory = None
                        self.is_self_join = None
                        self.is_suppressed = None
                        self.last_reporter = Igmp.Active.DefaultContext.Groups.Group.LastReporter()
                        self.last_reporter.parent = self
                        self.older_host_version1_timer = None
                        self.older_host_version2_timer = None
                        self.router_filter_mode = None
                        self.row_status = None
                        self.source_address = Igmp.Active.DefaultContext.Groups.Group.SourceAddress()
                        self.source_address.parent = self
                        self.uptime = None


                    class GroupAddressXr(object):
                        """
                        Group Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.Groups.Group.GroupAddressXr']['meta_info']


                    class LastReporter(object):
                        """
                        Last reporter address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:last-reporter'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.Groups.Group.LastReporter']['meta_info']


                    class SourceAddress(object):
                        """
                        Source Address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group/Cisco-IOS-XR-ipv4-igmp-oper:source-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.Groups.Group.SourceAddress']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups/Cisco-IOS-XR-ipv4-igmp-oper:group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.expiration_time is not None:
                            return True

                        if self.explicit_tracking_enabled is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.group_address_xr is not None and self.group_address_xr._has_data():
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_added is not None:
                            return True

                        if self.is_low_memory is not None:
                            return True

                        if self.is_self_join is not None:
                            return True

                        if self.is_suppressed is not None:
                            return True

                        if self.last_reporter is not None and self.last_reporter._has_data():
                            return True

                        if self.older_host_version1_timer is not None:
                            return True

                        if self.older_host_version2_timer is not None:
                            return True

                        if self.router_filter_mode is not None:
                            return True

                        if self.row_status is not None:
                            return True

                        if self.source_address is not None and self.source_address._has_data():
                            return True

                        if self.uptime is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.Groups.Group']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:groups'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group is not None:
                        for child_ref in self.group:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.Groups']['meta_info']


            class GroupSummary(object):
                """
                IGMP Groups Summary
                
                .. attribute:: group_count
                
                	Current groups accepted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: groutes
                
                	No. of (\*,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: is_low_memory
                
                	Node is running low on memory
                	**type**\:  bool
                
                .. attribute:: sg_routes
                
                	No. of (S,G) routes
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.group_count = None
                    self.groutes = None
                    self.is_low_memory = None
                    self.sg_routes = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:group-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.group_count is not None:
                        return True

                    if self.groutes is not None:
                        return True

                    if self.is_low_memory is not None:
                        return True

                    if self.sg_routes is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.GroupSummary']['meta_info']


            class IfrsInterfaceSummary(object):
                """
                IGMP IFRS Interface summary
                
                .. attribute:: configuration_count
                
                	Configuration count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_count
                
                	Interface Count
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.configuration_count = None
                    self.interface_count = None

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ifrs-interface-summary'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.configuration_count is not None:
                        return True

                    if self.interface_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.IfrsInterfaceSummary']['meta_info']


            class GlobalInterfaceTable(object):
                """
                IGMP Global Interface 
                
                .. attribute:: interface
                
                	IGMP Interface
                	**type**\: list of    :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface = YList()
                    self.interface.parent = self
                    self.interface.name = 'interface'


                class Interface(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table/Cisco-IOS-XR-ipv4-igmp-oper:interface[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.GlobalInterfaceTable.Interface']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:global-interface-table'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface is not None:
                        for child_ref in self.interface:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.GlobalInterfaceTable']['meta_info']


            class SsmMapDetails(object):
                """
                SSM Map Detail
                
                .. attribute:: ssm_map_detail
                
                	SSM Map Detail Table information
                	**type**\: list of    :py:class:`SsmMapDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.ssm_map_detail = YList()
                    self.ssm_map_detail.parent = self
                    self.ssm_map_detail.name = 'ssm_map_detail'


                class SsmMapDetail(object):
                    """
                    SSM Map Detail Table information
                    
                    .. attribute:: elapsed_time
                    
                    	Elapsed time
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: expiration_time
                    
                    	Expiration Time in Seconds
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: second
                    
                    .. attribute:: group_address
                    
                    	Group address
                    	**type**\: one of the below types:
                    
                    	**type**\:  str
                    
                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    	**type**\:  str
                    
                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                    
                    
                    ----
                    .. attribute:: map_info
                    
                    	Basic Map Info
                    	**type**\:   :py:class:`MapInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo>`
                    
                    .. attribute:: query_interval
                    
                    	Query interval
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: response_pending
                    
                    	Response Pending
                    	**type**\:  bool
                    
                    .. attribute:: sources
                    
                    	List of sources
                    	**type**\: list of    :py:class:`Sources <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.Sources>`
                    
                    .. attribute:: ssm_map_type
                    
                    	SSM Map Type
                    	**type**\:   :py:class:`IgmpssmMapEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpssmMapEnum>`
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.elapsed_time = None
                        self.expiration_time = None
                        self.group_address = None
                        self.map_info = Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo()
                        self.map_info.parent = self
                        self.query_interval = None
                        self.response_pending = None
                        self.sources = YList()
                        self.sources.parent = self
                        self.sources.name = 'sources'
                        self.ssm_map_type = None


                    class MapInfo(object):
                        """
                        Basic Map Info
                        
                        .. attribute:: group_address_xr
                        
                        	Group Address
                        	**type**\:   :py:class:`GroupAddressXr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr>`
                        
                        .. attribute:: map_type
                        
                        	Map Type of group
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: source_counts
                        
                        	Count of Sources
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.group_address_xr = Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr()
                            self.group_address_xr.parent = self
                            self.map_type = None
                            self.source_counts = None


                        class GroupAddressXr(object):
                            """
                            Group Address
                            
                            .. attribute:: af_name
                            
                            	AFName
                            	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                            
                            .. attribute:: ipv4_address
                            
                            	IPv4 Addr
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6_address
                            
                            	IPV6 Addr
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'ipv4-igmp-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af_name = None
                                self.ipv4_address = None
                                self.ipv6_address = None

                            @property
                            def _common_path(self):

                                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info/Cisco-IOS-XR-ipv4-igmp-oper:group-address-xr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if self.af_name is not None:
                                    return True

                                if self.ipv4_address is not None:
                                    return True

                                if self.ipv6_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                                return meta._meta_table['Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo.GroupAddressXr']['meta_info']

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:map-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.group_address_xr is not None and self.group_address_xr._has_data():
                                return True

                            if self.map_type is not None:
                                return True

                            if self.source_counts is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.MapInfo']['meta_info']


                    class Sources(object):
                        """
                        List of sources
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail/Cisco-IOS-XR-ipv4-igmp-oper:sources'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail.Sources']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-detail'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.elapsed_time is not None:
                            return True

                        if self.expiration_time is not None:
                            return True

                        if self.group_address is not None:
                            return True

                        if self.map_info is not None and self.map_info._has_data():
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.response_pending is not None:
                            return True

                        if self.sources is not None:
                            for child_ref in self.sources:
                                if child_ref._has_data():
                                    return True

                        if self.ssm_map_type is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.SsmMapDetails.SsmMapDetail']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:ssm-map-details'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.ssm_map_detail is not None:
                        for child_ref in self.ssm_map_detail:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.SsmMapDetails']['meta_info']


            class InterfaceStateOffs(object):
                """
                IGMP Interface state off
                
                .. attribute:: interface_state_off
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceStateOff <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_state_off = YList()
                    self.interface_state_off.parent = self
                    self.interface_state_off.name = 'interface_state_off'


                class InterfaceStateOff(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-off[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffs.InterfaceStateOff']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-state-offs'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_state_off is not None:
                        for child_ref in self.interface_state_off:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceStateOffs']['meta_info']


            class InterfaceOldFormatStateOns(object):
                """
                IGMP Interface state on old format
                
                .. attribute:: interface_old_format_state_on
                
                	IGMP Interface
                	**type**\: list of    :py:class:`InterfaceOldFormatStateOn <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn>`
                
                

                """

                _prefix = 'ipv4-igmp-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.interface_old_format_state_on = YList()
                    self.interface_old_format_state_on.parent = self
                    self.interface_old_format_state_on.name = 'interface_old_format_state_on'


                class InterfaceOldFormatStateOn(object):
                    """
                    IGMP Interface
                    
                    .. attribute:: interface_name  <key>
                    
                    	Interface Name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: address
                    
                    	IP address
                    	**type**\:   :py:class:`Address <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address>`
                    
                    .. attribute:: configuration_mcast_vrf_error
                    
                    	Is mcast error
                    	**type**\:  bool
                    
                    .. attribute:: configuration_mcast_vrf_set
                    
                    	Is mcast set
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_error
                    
                    	CFG vrf error
                    	**type**\:  bool
                    
                    .. attribute:: configurationvrf_set
                    
                    	CFG vrf set
                    	**type**\:  bool
                    
                    .. attribute:: group_joins
                    
                    	No. of group joins
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: group_leaves
                    
                    	No. of group leaves
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: host_version
                    
                    	IGMP Host version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: igmp_version
                    
                    	IGMP Router version
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: interface_name_xr
                    
                    	Interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: is_configurationverify
                    
                    	CFG verify
                    	**type**\:  bool
                    
                    .. attribute:: is_identity_present
                    
                    	Subscriber ID or Address available from AAA
                    	**type**\:  bool
                    
                    .. attribute:: is_im_state_registered
                    
                    	Im state registered
                    	**type**\:  bool
                    
                    .. attribute:: is_interface_up
                    
                    	Is interface up
                    	**type**\:  bool
                    
                    .. attribute:: is_ip_enabled
                    
                    	Is IP enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_las_registered
                    
                    	LAS registered
                    	**type**\:  bool
                    
                    .. attribute:: is_las_request
                    
                    	LAS req
                    	**type**\:  bool
                    
                    .. attribute:: is_querier
                    
                    	Are we querier
                    	**type**\:  bool
                    
                    .. attribute:: is_router_enabled
                    
                    	Is Router functionality enabled
                    	**type**\:  bool
                    
                    .. attribute:: is_subscriber
                    
                    	Subscriber interface
                    	**type**\:  bool
                    
                    .. attribute:: las_get_address_count
                    
                    	LAS get addr count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_add_update_count
                    
                    	LAS LL add update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_registration_count
                    
                    	LAS reg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_ll_remove_update_count
                    
                    	LAS LL remove update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_null_update_count
                    
                    	LAS Null update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_unregistration_count
                    
                    	LAS unreg count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: las_update_count
                    
                    	LAS Update count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_member_query_interval
                    
                    	Last Member Query Interval
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: location
                    
                    	Location
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_tuple_count
                    
                    	MTE Tuple count
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mte_vrf_id
                    
                    	MTE VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mtu
                    
                    	MTU
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: parent_ifhandle
                    
                    	Parent If Handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: prefix_length
                    
                    	Prefix length
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: proxy_interface
                    
                    	Proxy interface index
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: querier_address
                    
                    	Address of the Querier
                    	**type**\:   :py:class:`QuerierAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress>`
                    
                    .. attribute:: querier_uptime
                    
                    	Time since the last querier took over
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_interval
                    
                    	Query Interval value in seconds
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: query_maximum_response_time
                    
                    	Max Response Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: query_timeout
                    
                    	Query Timeout value
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: robustness
                    
                    	Robustness Variable value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: router_uptime_in_seconds
                    
                    	Uptime since router enabled event
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: state
                    
                    	Interface state
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: subscriber_address
                    
                    	Address of subscriber
                    	**type**\:   :py:class:`SubscriberAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress>`
                    
                    .. attribute:: subscriber_id
                    
                    	ID string of subscriber
                    	**type**\:  str
                    
                    	**length:** 0..257
                    
                    .. attribute:: subscriber_mode
                    
                    	Subscriber mode
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_query_in_seconds
                    
                    	Time elapsed since last query
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_last_report_in_seconds
                    
                    	Time elapsed since last report
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_active_groups
                    
                    	Actual number of groups on interface
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_id
                    
                    	VRF id
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: vrf_state
                    
                    	Vrf State
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'ipv4-igmp-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.address = Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address()
                        self.address.parent = self
                        self.configuration_mcast_vrf_error = None
                        self.configuration_mcast_vrf_set = None
                        self.configurationvrf_error = None
                        self.configurationvrf_set = None
                        self.group_joins = None
                        self.group_leaves = None
                        self.host_version = None
                        self.igmp_version = None
                        self.interface_name_xr = None
                        self.is_configurationverify = None
                        self.is_identity_present = None
                        self.is_im_state_registered = None
                        self.is_interface_up = None
                        self.is_ip_enabled = None
                        self.is_las_registered = None
                        self.is_las_request = None
                        self.is_querier = None
                        self.is_router_enabled = None
                        self.is_subscriber = None
                        self.las_get_address_count = None
                        self.las_ll_add_update_count = None
                        self.las_ll_registration_count = None
                        self.las_ll_remove_update_count = None
                        self.las_null_update_count = None
                        self.las_unregistration_count = None
                        self.las_update_count = None
                        self.last_member_query_interval = None
                        self.location = None
                        self.mte_tuple_count = None
                        self.mte_vrf_id = None
                        self.mtu = None
                        self.parent_ifhandle = None
                        self.prefix_length = None
                        self.proxy_interface = None
                        self.querier_address = Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress()
                        self.querier_address.parent = self
                        self.querier_uptime = None
                        self.query_interval = None
                        self.query_maximum_response_time = None
                        self.query_timeout = None
                        self.robustness = None
                        self.router_uptime_in_seconds = None
                        self.state = None
                        self.subscriber_address = Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress()
                        self.subscriber_address.parent = self
                        self.subscriber_id = None
                        self.subscriber_mode = None
                        self.time_since_last_query_in_seconds = None
                        self.time_since_last_report_in_seconds = None
                        self.total_active_groups = None
                        self.vrf_id = None
                        self.vrf_state = None


                    class Address(object):
                        """
                        IP address
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.Address']['meta_info']


                    class QuerierAddress(object):
                        """
                        Address of the Querier
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:querier-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.QuerierAddress']['meta_info']


                    class SubscriberAddress(object):
                        """
                        Address of subscriber
                        
                        .. attribute:: af_name
                        
                        	AFName
                        	**type**\:   :py:class:`IgmpAfiEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_igmp_oper.IgmpAfiEnum>`
                        
                        .. attribute:: ipv4_address
                        
                        	IPv4 Addr
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6_address
                        
                        	IPV6 Addr
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'ipv4-igmp-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af_name = None
                            self.ipv4_address = None
                            self.ipv6_address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-ipv4-igmp-oper:subscriber-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if self.af_name is not None:
                                return True

                            if self.ipv4_address is not None:
                                return True

                            if self.ipv6_address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                            return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn.SubscriberAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.interface_name is None:
                            raise YPYModelError('Key property interface_name is None')

                        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-on[Cisco-IOS-XR-ipv4-igmp-oper:interface-name = ' + str(self.interface_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if self.interface_name is not None:
                            return True

                        if self.address is not None and self.address._has_data():
                            return True

                        if self.configuration_mcast_vrf_error is not None:
                            return True

                        if self.configuration_mcast_vrf_set is not None:
                            return True

                        if self.configurationvrf_error is not None:
                            return True

                        if self.configurationvrf_set is not None:
                            return True

                        if self.group_joins is not None:
                            return True

                        if self.group_leaves is not None:
                            return True

                        if self.host_version is not None:
                            return True

                        if self.igmp_version is not None:
                            return True

                        if self.interface_name_xr is not None:
                            return True

                        if self.is_configurationverify is not None:
                            return True

                        if self.is_identity_present is not None:
                            return True

                        if self.is_im_state_registered is not None:
                            return True

                        if self.is_interface_up is not None:
                            return True

                        if self.is_ip_enabled is not None:
                            return True

                        if self.is_las_registered is not None:
                            return True

                        if self.is_las_request is not None:
                            return True

                        if self.is_querier is not None:
                            return True

                        if self.is_router_enabled is not None:
                            return True

                        if self.is_subscriber is not None:
                            return True

                        if self.las_get_address_count is not None:
                            return True

                        if self.las_ll_add_update_count is not None:
                            return True

                        if self.las_ll_registration_count is not None:
                            return True

                        if self.las_ll_remove_update_count is not None:
                            return True

                        if self.las_null_update_count is not None:
                            return True

                        if self.las_unregistration_count is not None:
                            return True

                        if self.las_update_count is not None:
                            return True

                        if self.last_member_query_interval is not None:
                            return True

                        if self.location is not None:
                            return True

                        if self.mte_tuple_count is not None:
                            return True

                        if self.mte_vrf_id is not None:
                            return True

                        if self.mtu is not None:
                            return True

                        if self.parent_ifhandle is not None:
                            return True

                        if self.prefix_length is not None:
                            return True

                        if self.proxy_interface is not None:
                            return True

                        if self.querier_address is not None and self.querier_address._has_data():
                            return True

                        if self.querier_uptime is not None:
                            return True

                        if self.query_interval is not None:
                            return True

                        if self.query_maximum_response_time is not None:
                            return True

                        if self.query_timeout is not None:
                            return True

                        if self.robustness is not None:
                            return True

                        if self.router_uptime_in_seconds is not None:
                            return True

                        if self.state is not None:
                            return True

                        if self.subscriber_address is not None and self.subscriber_address._has_data():
                            return True

                        if self.subscriber_id is not None:
                            return True

                        if self.subscriber_mode is not None:
                            return True

                        if self.time_since_last_query_in_seconds is not None:
                            return True

                        if self.time_since_last_report_in_seconds is not None:
                            return True

                        if self.total_active_groups is not None:
                            return True

                        if self.vrf_id is not None:
                            return True

                        if self.vrf_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                        return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormatStateOns.InterfaceOldFormatStateOn']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context/Cisco-IOS-XR-ipv4-igmp-oper:interface-old-format-state-ons'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if self.interface_old_format_state_on is not None:
                        for child_ref in self.interface_old_format_state_on:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                    return meta._meta_table['Igmp.Active.DefaultContext.InterfaceOldFormatStateOns']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active/Cisco-IOS-XR-ipv4-igmp-oper:default-context'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if self.detail_groups is not None and self.detail_groups._has_data():
                    return True

                if self.explicit_groups is not None and self.explicit_groups._has_data():
                    return True

                if self.global_interface_table is not None and self.global_interface_table._has_data():
                    return True

                if self.group_summary is not None and self.group_summary._has_data():
                    return True

                if self.groups is not None and self.groups._has_data():
                    return True

                if self.ifrs_interface_summary is not None and self.ifrs_interface_summary._has_data():
                    return True

                if self.ifrs_interfaces is not None and self.ifrs_interfaces._has_data():
                    return True

                if self.interface_old_format_state_ons is not None and self.interface_old_format_state_ons._has_data():
                    return True

                if self.interface_old_formats is not None and self.interface_old_formats._has_data():
                    return True

                if self.interface_state_off_old_formats is not None and self.interface_state_off_old_formats._has_data():
                    return True

                if self.interface_state_offs is not None and self.interface_state_offs._has_data():
                    return True

                if self.interface_state_ons is not None and self.interface_state_ons._has_data():
                    return True

                if self.interface_table is not None and self.interface_table._has_data():
                    return True

                if self.interface_unicast_qos_adjusts is not None and self.interface_unicast_qos_adjusts._has_data():
                    return True

                if self.non_active_groups is not None and self.non_active_groups._has_data():
                    return True

                if self.ranges is not None and self.ranges._has_data():
                    return True

                if self.ssm_map_details is not None and self.ssm_map_details._has_data():
                    return True

                if self.ssm_maps is not None and self.ssm_maps._has_data():
                    return True

                if self.summary is not None and self.summary._has_data():
                    return True

                if self.traffic_counters is not None and self.traffic_counters._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
                return meta._meta_table['Igmp.Active.DefaultContext']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp/Cisco-IOS-XR-ipv4-igmp-oper:active'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if self.default_context is not None and self.default_context._has_data():
                return True

            if self.process is not None and self.process._has_data():
                return True

            if self.vrfs is not None and self.vrfs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
            return meta._meta_table['Igmp.Active']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-ipv4-igmp-oper:igmp'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if self.active is not None and self.active._has_data():
            return True

        if self.standby is not None and self.standby._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_ipv4_igmp_oper as meta
        return meta._meta_table['Igmp']['meta_info']


